{"version":3,"mappings":"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","names":["Toaster","props","theme","useTheme","jsx","Sonner","LOCAL_STORAGE_PREFIX","MOCK_NETWORK_DELAY","getLocalStorageItem","key","defaultValue","item","error","setLocalStorageItem","value","deleteLocalStorageItem","getAllLocalStorageItems","prefix","items","i","getLocalStorageKeys","keys","clearAllLocalStorage","generateId","getCurrentTimestamp","mockApiRequest","endpoint","method","data","resolve","result","email","password","name","userId","userAuth","profile","newUserId","rest","existingProfile","bio","skills","avatar","location","rating","completedJobs","totalEarnings","createdAt","updatedAt","onboardingCompleted","profileCompleteness","jobExperiences","studyExperiences","certifications","servicesOffered","reviews","wallet","type","amount","operation","transaction","tx","jobId","job","skillId","skillOffering","skill","paidSkillOffering","projectId","project","p","investorId","typedProject","investment","notificationId","n","notification","notifications","updatedCount","targetUserId","r","reviewerId","comment","review","targetProfile","allReviewsForTarget","totalRating","sum","typedProfile","userApi","profileData","blockerId","reporterId","reason","userEmail","jobKeys","skillKeys","projectKeys","txKeys","notifKeys","reviewKeys","defaultProfile","err","fullKey","rawKey","itemRaw","v","walletApi","description","jobsApi","jobData","applicationData","skillsApi","skillData","requestData","projectsApi","projectData","notificationsApi","notificationData","reviewsApi","authApi","mockBackend","translations","I18nContext","createContext","useI18n","context","useContext","getNestedTranslation","obj","path","options","current","translatedString","I18nProvider","children","language","setLanguage","useState","t","handleSetLanguage","lang","dir","React","contextValue","ThemeContext","ThemeProvider","setTheme","actualTheme","setActualTheme","handleSetTheme","newTheme","useEffect","updateTheme","effectiveTheme","root","mediaQuery","handleChange","cleanupDatabase","LandingPage","m","AuthForm","ProfileOnboarding","Dashboard","HireMode","SkillSwapMode","InvestmentMode","Profile","Wallet","Settings","PublicProfile","UserContext","useUser","App","currentPage","setCurrentPage","isLoggedIn","setIsLoggedIn","user","setUser","setWallet","showOnboarding","setShowOnboarding","newUserData","setNewUserData","authMode","setAuthMode","publicProfileUserId","setPublicProfileUserId","refreshWallet","response","handleAuthSuccess","userData","isNewUser","userProfile","createResponse","walletData","fallbackProfile","fallbackWallet","handleLogout","navigateTo","page","userContextValue","handleOnboardingComplete","handleOnboardingSkip","renderCurrentPage","ErrorBoundary","info","jsxs","Fragment","createRoot"],"ignoreList":[],"sources":["../../src/components/ui/sonner.tsx","../../src/utils/api.tsx","../../src/utils/i18n.tsx","../../src/utils/theme.tsx","../../src/utils/cleanup.tsx","../../src/App.tsx","../../src/components/ErrorBoundary.tsx","../../src/main.tsx"],"sourcesContent":["\"use client\";\n\nimport { useTheme } from \"next-themes\";\nimport { Toaster as Sonner, ToasterProps } from \"sonner\";\n\nconst Toaster = ({ ...props }: ToasterProps) => {\n  const { theme = \"system\" } = useTheme();\n\n  return (\n    <Sonner\n      theme={theme as ToasterProps[\"theme\"]}\n      className=\"toaster group\"\n      style={\n        {\n          \"--normal-bg\": \"var(--popover)\",\n          \"--normal-text\": \"var(--popover-foreground)\",\n          \"--normal-border\": \"var(--border)\",\n        } as React.CSSProperties\n      }\n      {...props}\n    />\n  );\n};\n\nexport { Toaster };\n","import { toast } from 'sonner'; // Import toast for local feedback\n\n// --- Local Storage Mock Backend Configuration ---\nconst LOCAL_STORAGE_PREFIX = 'work_invest_mock_';\nconst MOCK_NETWORK_DELAY = 300; // Simulate network latency\n\n// --- Local Storage Helper Functions ---\nfunction getLocalStorageItem<T>(key: string, defaultValue: T): T {\n  try {\n    const item = localStorage.getItem(LOCAL_STORAGE_PREFIX + key);\n    return item ? (JSON.parse(item) as T) : defaultValue;\n  } catch (error) {\n    console.error(`Error reading from localStorage for key ${key}:`, error);\n    return defaultValue;\n  }\n}\n\n// Export helper for tests and utilities\nexport { getLocalStorageItem };\n\nfunction setLocalStorageItem<T>(key: string, value: T): void {\n  try {\n    localStorage.setItem(LOCAL_STORAGE_PREFIX + key, JSON.stringify(value));\n  } catch (error) {\n    console.error(`Error writing to localStorage for key ${key}:`, error);\n  }\n}\n\nfunction deleteLocalStorageItem(key: string): void {\n  try {\n    localStorage.removeItem(LOCAL_STORAGE_PREFIX + key);\n  } catch (error) {\n    console.error(`Error deleting from localStorage for key ${key}:`, error);\n  }\n}\n\nfunction getAllLocalStorageItems<T>(prefix: string): T[] {\n  const items: T[] = [];\n  for (let i = 0; i < localStorage.length; i++) {\n    const key = localStorage.key(i);\n    if (key && key.startsWith(LOCAL_STORAGE_PREFIX + prefix)) {\n      try {\n        const item = localStorage.getItem(key);\n        if (item) {\n          items.push(JSON.parse(item));\n        }\n      } catch (error) {\n        console.error(`Error parsing localStorage item for key ${key}:`, error);\n      }\n    }\n  }\n  return items;\n}\n\nfunction getLocalStorageKeys(prefix: string): string[] {\n  const keys: string[] = [];\n  for (let i = 0; i < localStorage.length; i++) {\n    const key = localStorage.key(i);\n    if (key && key.startsWith(LOCAL_STORAGE_PREFIX + prefix)) {\n      keys.push(key);\n    }\n  }\n  return keys;\n}\n\nfunction clearAllLocalStorage(): void {\n  for (let i = localStorage.length - 1; i >= 0; i--) {\n    const key = localStorage.key(i);\n    if (key && key.startsWith(LOCAL_STORAGE_PREFIX)) {\n      localStorage.removeItem(key);\n    }\n  }\n}\n\n// Utility function to generate unique IDs\nfunction generateId() {\n  return `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n}\n\n// Utility function to get current timestamp\nfunction getCurrentTimestamp() {\n  return new Date().toISOString();\n}\n\n// --- Generic Mock API Request Function ---\nasync function mockApiRequest<T = any>(\n  endpoint: string,\n  method: 'GET' | 'POST' | 'PUT' | 'DELETE' = 'GET',\n  data?: any\n): Promise<T & ApiResponse> {\n  await new Promise(resolve => setTimeout(resolve, MOCK_NETWORK_DELAY)); // Simulate network delay\n\n  try {\n    let result: any = { success: true };\n\n    // Simulate different API endpoints and methods\n    if (endpoint.startsWith('/auth')) {\n      if (endpoint === '/auth/signup' && method === 'POST') {\n        const { email, password, name } = data;\n        if (!email || !password || !name) throw new Error(\"Missing required fields: email, password, name\");\n        if (getLocalStorageItem(`auth:${email}`, null)) throw new Error(\"An account with this email already exists. Please sign in instead.\");\n\n        const userId = generateId();\n        setLocalStorageItem(`auth:${email}`, { id: userId, email, password, createdAt: getCurrentTimestamp() });\n        setLocalStorageItem(`user:${userId}`, {\n          id: userId, name, email, bio: \"\", skills: [], avatar: \"\", location: \"\", rating: 0, completedJobs: 0, totalEarnings: 0,\n          createdAt: getCurrentTimestamp(), updatedAt: getCurrentTimestamp(), onboardingCompleted: false, profileCompleteness: 0,\n          jobExperiences: [], studyExperiences: [], certifications: [], servicesOffered: [], reviews: [], portfolio: []\n        });\n        setLocalStorageItem(`wallet:${userId}`, { money: 0, credits: 20, equity: 0 });\n        result = { success: true, user: { id: userId, name, email }, message: \"Account created successfully\" };\n      } else if (endpoint === '/auth/signin' && method === 'POST') {\n        const { email, password } = data;\n        if (!email || !password) throw new Error(\"Missing required fields: email, password\");\n        const userAuth = getLocalStorageItem<{ id: string; password: string }>(`auth:${email}`, { id: '', password: '' });\n        if (!userAuth.id) throw new Error(\"No account found with this email. Please sign up.\");\n\n        const profile = getLocalStorageItem<UserProfile>(`user:${userAuth.id}`, {\n          id: '',\n          name: '',\n          email: '',\n          bio: '',\n          skills: [],\n          avatar: '',\n          location: '',\n          rating: 0,\n          completedJobs: 0,\n          totalEarnings: 0,\n          createdAt: '',\n          updatedAt: '',\n          onboardingCompleted: false,\n          profileCompleteness: 0,\n          jobExperiences: [],\n          studyExperiences: [],\n          certifications: [],\n          servicesOffered: [],\n          reviews: []\n        });\n        if (!profile.id) throw new Error(\"User profile not found. Please contact support.\");\n        result = { success: true, user: { id: profile.id, name: profile.name, email: profile.email }, message: \"Login successful\" };\n      }\n    } else if (endpoint.startsWith('/users')) {\n      const userId = endpoint.split('/')[2];\n      if (endpoint === `/users/profile` && method === 'POST') { // For initial profile creation if not done during signup\n        const { userId: newUserId, name, email, ...rest } = data;\n        const existingProfile = getLocalStorageItem<UserProfile | null>(`user:${newUserId}`, null);\n        // Add type guards to ensure objects are not null or undefined\n        if (!existingProfile) {\n          throw new Error(\"User profile not found.\");\n        }\n\n        if (existingProfile) {\n          const {\n            bio = \"\",\n            skills = [],\n            avatar = \"\",\n            location = \"\",\n            rating = 0,\n            completedJobs = 0,\n            totalEarnings = 0,\n            createdAt = getCurrentTimestamp(),\n            updatedAt = getCurrentTimestamp(),\n            onboardingCompleted = false,\n            profileCompleteness = 0,\n            jobExperiences = [],\n            studyExperiences = [],\n            certifications = [],\n            servicesOffered = [],\n            reviews = []\n          } = existingProfile;\n\n          // Use these destructured values safely\n        }\n\n        const profile = {\n          id: newUserId, name, email,\n          bio: rest.bio || existingProfile?.bio || \"\", skills: rest.skills || existingProfile?.skills || [],\n          avatar: rest.avatar || existingProfile?.avatar || \"\", location: rest.location || existingProfile?.location || \"\",\n          rating: existingProfile?.rating || 0, completedJobs: existingProfile?.completedJobs || 0, totalEarnings: existingProfile?.totalEarnings || 0,\n          createdAt: existingProfile?.createdAt || getCurrentTimestamp(), updatedAt: getCurrentTimestamp(),\n          onboardingCompleted: rest.onboardingCompleted ?? existingProfile?.onboardingCompleted ?? false,\n          profileCompleteness: rest.profileCompleteness ?? existingProfile?.profileCompleteness ?? 0,\n          jobExperiences: rest.jobExperiences || existingProfile?.jobExperiences || [],\n          studyExperiences: rest.studyExperiences || existingProfile?.studyExperiences || [],\n          certifications: rest.certifications || existingProfile?.certifications || [],\n          servicesOffered: rest.servicesOffered || existingProfile?.servicesOffered || [],\n          reviews: existingProfile?.reviews || [],\n          portfolio: existingProfile?.portfolio || []\n        };\n        setLocalStorageItem(`user:${newUserId}`, profile);\n        result = { success: true, profile };\n      } else if (endpoint === `/users/${userId}` && method === 'GET') {\n        const profile = getLocalStorageItem(`user:${userId}`, null);\n        if (!profile) throw new Error(\"User not found\");\n        result = { profile };\n      } else if (endpoint === `/users/${userId}/profile` && method === 'PUT') {\n        let profile = getLocalStorageItem(`user:${userId}`, null);\n        if (!profile) throw new Error(\"User not found\");\n        // Refactor dynamic property access\n        if (profile && typeof profile === 'object') {\n          profile = { ...(profile as UserProfile), ...data, updatedAt: getCurrentTimestamp() };\n        } else {\n          throw new Error(\"Invalid profile object\");\n        }\n        setLocalStorageItem(`user:${userId}`, profile);\n        result = { success: true, profile };\n      } else if (endpoint === `/users/${userId}/block` && method === 'POST') {\n        // Simulate blocking user\n        console.log(`User ${data.blockerId} blocked user ${userId}`);\n        result = { success: true, message: \"User blocked successfully\" };\n      } else if (endpoint === `/users/${userId}/report` && method === 'POST') {\n        // Simulate reporting user\n        console.log(`User ${data.reporterId} reported user ${userId} for reason: ${data.reason}`);\n        result = { success: true, message: \"User reported successfully\" };\n      }\n    } else if (endpoint.startsWith('/wallet')) {\n      const userId = endpoint.split('/')[2];\n      if (endpoint === `/wallet/${userId}` && method === 'GET') {\n        let wallet = getLocalStorageItem(`wallet:${userId}`, { money: 0, credits: 20, equity: 0 });\n        setLocalStorageItem(`wallet:${userId}`, wallet); // Ensure it's saved if created\n        result = { wallet };\n      } else if (endpoint === `/wallet/${userId}/update` && method === 'POST') {\n        const { type, amount, operation } = data;\n        let wallet = getLocalStorageItem(`wallet:${userId}`, { money: 0, credits: 0, equity: 0 });\n        // Refactor dynamic property access\n        if (wallet && typeof wallet === 'object' && type in wallet) {\n          if (operation === 'add') {\n            wallet[type as keyof Wallet] += amount;\n          } else if (operation === 'subtract') {\n            wallet[type as keyof Wallet] = Math.max(0, wallet[type as keyof Wallet] - amount);\n          }\n        }\n        setLocalStorageItem(`wallet:${userId}`, wallet);\n        const transaction = {\n          id: generateId(),\n          userId,\n          type,\n          amount,\n          operation,\n          timestamp: getCurrentTimestamp(),\n          balance: wallet[type as keyof Wallet],\n          description: data.description,\n        };\n        setLocalStorageItem(`transaction:${transaction.id}`, transaction);\n        result = { success: true, wallet };\n      } else if (endpoint === `/wallet/${userId}/transactions` && method === 'GET') {\n        const transactions = getAllLocalStorageItems<Transaction>('transaction:').filter(tx => tx.userId === userId);\n        result = { transactions };\n      }\n    } else if (endpoint.startsWith('/jobs')) {\n      const jobId = endpoint.split('/')[2];\n      if (endpoint === '/jobs' && method === 'POST') {\n        const job = { id: generateId(), status: 'open', applicants: [], selectedFreelancer: null, createdAt: getCurrentTimestamp(), updatedAt: getCurrentTimestamp(), ...data };\n        setLocalStorageItem(`job:${job.id}`, job);\n        result = { success: true, job };\n      } else if (endpoint === '/jobs' && method === 'GET') {\n        const jobs = getAllLocalStorageItems<Job>('job:').filter(job => job.status === 'open');\n        result = { jobs };\n      } else if (endpoint === `/jobs/${jobId}/apply` && method === 'POST') {\n        let job = getLocalStorageItem(`job:${jobId}`, null);\n        if (!job) throw new Error(\"Job not found\");\n        if (job && typeof job === 'object' && 'applicants' in job && Array.isArray((job as Job).applicants)) {\n          (job as Job).applicants.push({ appliedAt: getCurrentTimestamp(), ...data });\n        } else {\n          throw new Error(\"Invalid job object or applicants array\");\n        }\n        setLocalStorageItem(`job:${jobId}`, job);\n        result = { success: true, job };\n      }\n    } else if (endpoint.startsWith('/skills')) {\n      const skillId = endpoint.split('/')[2];\n      if (endpoint === '/skills' && method === 'POST') {\n        const skillOffering = { id: generateId(), status: 'available', matches: [], createdAt: getCurrentTimestamp(), updatedAt: getCurrentTimestamp(), ...data };\n        setLocalStorageItem(`skill:${skillOffering.id}`, skillOffering);\n        result = { success: true, skillOffering };\n      } else if (endpoint === '/skills' && method === 'GET') {\n        const skills = getAllLocalStorageItems<SkillOffering>('skill:').filter(skill => skill.status === 'available');\n        result = { skills };\n      } else if (endpoint === `/skills/${skillId}/request` && method === 'POST') {\n        let skill = getLocalStorageItem(`skill:${skillId}`, null);\n        if (!skill) throw new Error(\"Skill offering not found\");\n        if (skill && typeof skill === 'object' && 'matches' in skill && Array.isArray((skill as SkillOffering).matches)) {\n          (skill as SkillOffering).matches.push({ requestedAt: getCurrentTimestamp(), status: 'pending', ...data });\n        } else {\n          throw new Error(\"Invalid skill object or matches array\");\n        }\n        setLocalStorageItem(`skill:${skillId}`, skill);\n        result = { success: true, skill };\n      } else if (endpoint === '/skills/paid' && method === 'POST') { // New endpoint for paid skill offerings\n        const paidSkillOffering = { id: generateId(), status: 'available', matches: [], createdAt: getCurrentTimestamp(), updatedAt: getCurrentTimestamp(), isPaid: true, ...data };\n        setLocalStorageItem(`skill:${paidSkillOffering.id}`, paidSkillOffering);\n        result = { success: true, skillOffering: paidSkillOffering };\n      }\n    } else if (endpoint.startsWith('/projects')) {\n      const projectId = endpoint.split('/')[2];\n      if (endpoint === '/projects' && method === 'POST') {\n        const project = { id: generateId(), currentFunding: 0, status: 'funding', investors: [], createdAt: getCurrentTimestamp(), updatedAt: getCurrentTimestamp(), ...data };\n        setLocalStorageItem(`project:${project.id}`, project);\n        result = { success: true, project };\n      } else if (endpoint === '/projects' && method === 'GET') {\n        const projects = getAllLocalStorageItems<InvestmentProject>('project:').filter(p => p.status === 'funding');\n        result = { projects };\n      } else if (endpoint === `/projects/${projectId}/invest` && method === 'POST') {\n        const { investorId, amount } = data;\n        let project = getLocalStorageItem(`project:${projectId}`, null);\n        if (!project) throw new Error(\"Project not found\");\n        if (project && typeof project === 'object' && 'status' in project && 'fundingGoal' in project && 'investors' in project && 'currentFunding' in project) {\n          const typedProject = project as InvestmentProject;\n          if (typedProject.status !== 'funding') throw new Error(\"Project is not accepting investments\");\n          const investment = {\n            investorId,\n            amount,\n            investedAt: getCurrentTimestamp(),\n            equityPercentage: (amount / typedProject.fundingGoal) * 100,\n          };\n          if (Array.isArray(typedProject.investors)) {\n            typedProject.investors.push(investment);\n          } else {\n            throw new Error(\"Invalid investors array\");\n          }\n          typedProject.currentFunding += amount;\n          if (typedProject.currentFunding >= typedProject.fundingGoal) typedProject.status = 'funded';\n\n          const wallet = getLocalStorageItem<Wallet>(`wallet:${investorId}`, { money: 0, credits: 0, equity: 0 });\n          wallet.money -= amount;\n          wallet.equity += investment.equityPercentage;\n          setLocalStorageItem(`wallet:${investorId}`, wallet);\n\n          result = { success: true, project: typedProject, investment };\n        } else {\n          throw new Error(\"Invalid project object\");\n        }\n      }\n    } else if (endpoint.startsWith('/notifications')) {\n      const userId = endpoint.split('/')[2];\n      const notificationId = endpoint.split('/')[3];\n      if (endpoint === `/notifications/${userId}` && method === 'GET') {\n        const notifications = getAllLocalStorageItems<Notification>('notification:').filter(n => n.userId === userId);\n        result = { notifications };\n      } else if (endpoint === '/notifications' && method === 'POST') {\n        const notification = { id: generateId(), read: false, createdAt: getCurrentTimestamp(), ...data };\n        setLocalStorageItem(`notification:${notification.userId}:${notification.id}`, notification);\n        result = { success: true, notification };\n      } else if (endpoint === `/notifications/${userId}/${notificationId}/read` && method === 'PUT') {\n        let notification = getLocalStorageItem(`notification:${userId}:${notificationId}`, null);\n        if (!notification) throw new Error(\"Notification not found\");\n        if (notification && typeof notification === 'object' && 'read' in notification) {\n          (notification as Notification).read = true;\n        } else {\n          throw new Error(\"Invalid notification object\");\n        }\n        setLocalStorageItem(`notification:${userId}:${notificationId}`, notification);\n        result = { success: true, notification };\n      } else if (endpoint === `/notifications/${userId}/mark-all-read` && method === 'PUT') {\n        const notifications = getAllLocalStorageItems<Notification>('notification:').filter(n => n.userId === userId);\n        let updatedCount = 0;\n        for (const notification of notifications) {\n          if (!notification.read) {\n            notification.read = true;\n            setLocalStorageItem(`notification:${notification.userId}:${notification.id}`, notification);\n            updatedCount++;\n          }\n        }\n        result = { success: true, message: `Marked ${updatedCount} notifications as read`, updatedCount };\n      }\n    } else if (endpoint.startsWith('/reviews')) {\n      const targetUserId = endpoint.split('/')[2];\n      if (endpoint === `/reviews/${targetUserId}` && method === 'GET') {\n        const reviews = getAllLocalStorageItems<Review>('review:').filter(r => r.targetUserId === targetUserId);\n        result = { reviews };\n      } else if (endpoint === `/reviews/${targetUserId}/add` && method === 'POST') {\n        const { reviewerId, rating, comment } = data;\n        if (!reviewerId || !rating || !comment) throw new Error(\"Missing required fields for review\");\n        const review: Review = { id: generateId(), targetUserId, reviewerId, rating, comment, createdAt: getCurrentTimestamp() };\n        setLocalStorageItem(`review:${review.id}`, review);\n\n        // Update target user's average rating and review count\n        let targetProfile = getLocalStorageItem(`user:${targetUserId}`, null);\n        if (targetProfile) {\n          const allReviewsForTarget = getAllLocalStorageItems<Review>('review:').filter(r => r.targetUserId === targetUserId);\n          const totalRating = allReviewsForTarget.reduce((sum, r) => sum + r.rating, 0);\n          if (targetProfile && typeof targetProfile === 'object' && 'rating' in targetProfile && 'reviews' in targetProfile) {\n            const typedProfile = targetProfile as UserProfile;\n            typedProfile.rating = totalRating / allReviewsForTarget.length;\n            typedProfile.reviews = allReviewsForTarget;\n          } else {\n            throw new Error(\"Invalid target profile object\");\n          }\n          setLocalStorageItem(`user:${targetUserId}`, targetProfile);\n        }\n        result = { success: true, review };\n      }\n    } else if (endpoint === '/health' && method === 'GET') {\n      result = { status: 'ok', timestamp: getCurrentTimestamp(), message: 'Work & Invest Mock API is running' };\n    }\n\n    return { ...result, success: true };\n  } catch (error) {\n    console.error(`Mock API Request Failed (${method} ${endpoint}):`, error);\n    return { success: false, error: (error as Error).message || 'Unknown mock API error' } as T & ApiResponse;\n  }\n}\n\ninterface ApiResponse<T = any> {\n  success?: boolean;\n  error?: string;\n  [key: string]: any;\n}\n\n// ==================== USER API ====================\n\nexport interface JobExperience {\n  id: string;\n  title: string;\n  company: string;\n  startDate: string;\n  endDate: string | null; // null if current\n  description: string;\n}\n\nexport interface StudyExperience {\n  id: string;\n  degree: string;\n  institution: string;\n  startDate: string;\n  endDate: string | null; // null if current\n  description: string;\n}\n\nexport interface Certification {\n  id: string;\n  name: string;\n  issuer: string;\n  date: string;\n}\n\nexport interface Service {\n  id: string;\n  name: string;\n  price: string; // e.g., \"150-300 TND/project\"\n  rating: number;\n}\n\nexport interface Review {\n  id: string;\n  targetUserId: string;\n  reviewerId: string;\n  rating: number; // 1-5\n  comment: string;\n  createdAt: string;\n}\n\nexport interface UserProfile {\n  id: string;\n  name: string;\n  email: string;\n  bio: string;\n  skills: string[];\n  avatar: string;\n  location: string;\n  rating: number;\n  completedJobs: number;\n  totalEarnings: number;\n  createdAt: string;\n  updatedAt: string;\n  onboardingCompleted?: boolean;\n  profileCompleteness?: number;\n  jobExperiences?: JobExperience[];\n  studyExperiences?: StudyExperience[];\n  certifications?: Certification[];\n  servicesOffered?: Service[];\n  reviews?: Review[]; // Added reviews to UserProfile\n  portfolio?: {\n    id: string;\n    title: string;\n    description?: string;\n    tags?: string[];\n    link?: string;\n    media?: string | null;\n    createdAt?: string;\n  }[];\n}\n\nexport const userApi = {\n  createProfile: (profileData: Partial<UserProfile>) =>\n    mockApiRequest<{ profile: UserProfile }>('/users/profile', 'POST', profileData),\n\n  getProfile: (userId: string) =>\n    mockApiRequest<{ profile: UserProfile }>(`/users/${userId}`),\n\n  // Public profile fetch (non-destructive)\n  getPublicProfile: (userId: string) =>\n    mockApiRequest<{ profile: UserProfile }>(`/users/${userId}`),\n\n  // Update profile fields\n  updateProfile: (userId: string, profileData: Partial<UserProfile>) =>\n    mockApiRequest<{ success: boolean; profile: UserProfile }>(`/users/${userId}/profile`, 'PUT', profileData),\n\n  blockUser: (targetUserId: string, blockerId: string) =>\n    mockApiRequest<{ success: boolean; message: string }>(`/users/${targetUserId}/block`, 'POST', { blockerId }),\n\n  reportUser: (targetUserId: string, reporterId: string, reason: string) =>\n    mockApiRequest<{ success: boolean; message: string }>(`/users/${targetUserId}/report`, 'POST', { reporterId, reason }),\n\n  // Reset profile: clean up associated items and write a blank profile\n  resetProfile: async (userId: string) => {\n    try {\n      const existing = getLocalStorageItem<UserProfile | null>(`user:${userId}`, null);\n      const userEmail = existing?.email;\n\n      // Remove jobs\n      const jobKeys = getLocalStorageKeys('job:');\n      for (const key of jobKeys) {\n        try {\n          const job = JSON.parse(localStorage.getItem(key) || 'null');\n          if (job && (job.employerId === userId || job.employerId === userEmail)) {\n            localStorage.removeItem(key);\n          }\n        } catch (e) { /* ignore */ }\n      }\n\n      // Remove skills\n      const skillKeys = getLocalStorageKeys('skill:');\n      for (const key of skillKeys) {\n        try {\n          const skill = JSON.parse(localStorage.getItem(key) || 'null');\n          if (skill && (skill.offeredBy === userId || skill.offeredBy === userEmail)) {\n            localStorage.removeItem(key);\n          }\n        } catch (e) { /* ignore */ }\n      }\n\n      // Remove projects\n      const projectKeys = getLocalStorageKeys('project:');\n      for (const key of projectKeys) {\n        try {\n          const project = JSON.parse(localStorage.getItem(key) || 'null');\n          if (project && (project.ownerId === userId || project.ownerId === userEmail)) {\n            localStorage.removeItem(key);\n          }\n        } catch (e) { /* ignore */ }\n      }\n\n      // Remove transactions\n      const txKeys = getLocalStorageKeys('transaction:');\n      for (const key of txKeys) {\n        try {\n          const tx = JSON.parse(localStorage.getItem(key) || 'null');\n          if (tx && tx.userId === userId) {\n            localStorage.removeItem(key);\n          }\n        } catch (e) { /* ignore */ }\n      }\n\n      // Remove notifications\n      const notifKeys = getLocalStorageKeys('notification:');\n      for (const key of notifKeys) {\n        try {\n          const n = JSON.parse(localStorage.getItem(key) || 'null');\n          if (n && n.userId === userId) {\n            localStorage.removeItem(key);\n          }\n        } catch (e) { /* ignore */ }\n      }\n\n      // Remove reviews written by or targeting this user\n      const reviewKeys = getLocalStorageKeys('review:');\n      for (const key of reviewKeys) {\n        try {\n          const r = JSON.parse(localStorage.getItem(key) || 'null');\n          if (r && (r.reviewerId === userId || r.targetUserId === userId)) {\n            localStorage.removeItem(key);\n          }\n        } catch (e) { /* ignore */ }\n      }\n\n      // Remove wallet and auth entries\n      deleteLocalStorageItem(`wallet:${userId}`);\n      if (userEmail) deleteLocalStorageItem(`auth:${userEmail}`);\n\n      // Write a default blank profile\n      const defaultProfile: UserProfile = {\n        id: userId,\n        name: '',\n        email: userEmail || '',\n        bio: '',\n        skills: [],\n        avatar: '',\n        location: '',\n        rating: 0,\n        completedJobs: 0,\n        totalEarnings: 0,\n        createdAt: getCurrentTimestamp(),\n        updatedAt: getCurrentTimestamp(),\n        onboardingCompleted: false,\n        profileCompleteness: 0,\n        jobExperiences: [],\n        studyExperiences: [],\n        certifications: [],\n        servicesOffered: [],\n        reviews: [],\n        portfolio: []\n      };\n      setLocalStorageItem(`user:${userId}`, defaultProfile);\n      return { success: true, profile: defaultProfile };\n    } catch (err) {\n      console.error('resetProfile error', err);\n      return { success: false, error: (err as Error).message || 'reset failed' } as any;\n    }\n  }\n,\n  // Permanently delete a user's account and all associated artifacts\n  deleteAccount: async (userId: string) => {\n    try {\n      const existing = getLocalStorageItem<UserProfile | null>(`user:${userId}`, null);\n      const userEmail = existing?.email;\n\n      // Robust scan: remove any localStorage key that contains the userId or userEmail\n      for (let i = localStorage.length - 1; i >= 0; i--) {\n        const fullKey = localStorage.key(i);\n        if (!fullKey) continue;\n        const rawKey = fullKey.startsWith(LOCAL_STORAGE_PREFIX) ? fullKey.slice(LOCAL_STORAGE_PREFIX.length) : fullKey;\n        try {\n          const itemRaw = localStorage.getItem(fullKey);\n          // Remove if the key name references the userId or if contents reference the user\n          if (rawKey.includes(userId) || (userEmail && rawKey.includes(userEmail))) {\n            localStorage.removeItem(fullKey);\n            continue;\n          }\n          if (!itemRaw) continue;\n          const item = JSON.parse(itemRaw);\n          if (item && typeof item === 'object') {\n            const vals = [item.userId, item.ownerId, item.employerId, item.reviewerId, item.targetUserId, item.offeredBy, item.email];\n            if (vals.some(v => v === userId || (userEmail && v === userEmail))) {\n              localStorage.removeItem(fullKey);\n            }\n          }\n        } catch (e) {\n          // ignore parse errors\n        }\n      }\n\n      // Finally remove any session/auth tokens referencing this user\n      deleteLocalStorageItem(`auth:${userEmail || ''}`);\n      deleteLocalStorageItem(`user:${userId}`);\n      deleteLocalStorageItem(`wallet:${userId}`);\n\n      return { success: true, message: 'Account deleted' };\n    } catch (err) {\n      console.error('deleteAccount error', err);\n      return { success: false, error: (err as Error).message || 'delete failed' } as any;\n    }\n  }\n};\n\n// ==================== WALLET API ====================\n\nexport interface Wallet {\n  money: number;\n  credits: number;\n  equity: number;\n}\n\nexport interface Transaction {\n  id: string;\n  userId: string;\n  type: 'money' | 'credits' | 'equity';\n  amount: number;\n  operation: 'add' | 'subtract';\n  timestamp: string;\n  balance: number;\n  description?: string;\n}\n\nexport const walletApi = {\n  getWallet: (userId: string) =>\n    mockApiRequest<{ wallet: Wallet }>(`/wallet/${userId}`),\n  \n  updateBalance: (userId: string, type: 'money' | 'credits' | 'equity', amount: number, operation: 'add' | 'subtract', description?: string) =>\n    mockApiRequest<{ wallet: Wallet }>('/wallet/' + userId + '/update', 'POST', { type, amount, operation, description }),\n  \n  getTransactions: (userId: string) =>\n    mockApiRequest<{ transactions: Transaction[] }>(`/wallet/${userId}/transactions`),\n};\n\n// ==================== JOBS API ====================\n\nexport interface Job {\n  id: string;\n  title: string;\n  description: string;\n  budget: number;\n  deadline: string;\n  skills: string[];\n  employerId: string;\n  status: 'open' | 'in-progress' | 'completed' | 'cancelled';\n  applicants: JobApplication[];\n  selectedFreelancer: string | null;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface JobApplication {\n  freelancerId: string;\n  proposal: string;\n  proposedBudget: number;\n  appliedAt: string;\n}\n\nexport const jobsApi = {\n  createJob: (jobData: Partial<Job>) =>\n    mockApiRequest<{ job: Job }>('/jobs', 'POST', jobData),\n  \n  getAllJobs: () =>\n    mockApiRequest<{ jobs: Job[] }>('/jobs'),\n  \n  applyToJob: (jobId: string, applicationData: Partial<JobApplication>) =>\n    mockApiRequest<{ job: Job }>(`/jobs/${jobId}/apply`, 'POST', applicationData),\n};\n\n// ==================== SKILL SWAP API ====================\n\nexport interface SkillOffering {\n  id: string;\n  title: string;\n  description: string;\n  category: string;\n  offeredBy: string;\n  lookingFor: string;\n  duration: string;\n  status: 'available' | 'matched' | 'completed';\n  matches: SkillSwapRequest[];\n  createdAt: string;\n  updatedAt: string;\n  isPaid?: boolean; // New field for paid teaching offers\n  price?: number | null; // New field for paid teaching offers\n  certificateRequired?: boolean; // New field for paid teaching offers\n  certificateUrl?: string | null; // New field for paid teaching offers\n}\n\nexport interface SkillSwapRequest {\n  requesterId: string;\n  message: string;\n  offerInReturn: string;\n  requestedAt: string;\n  status: 'pending' | 'accepted' | 'declined';\n}\n\nexport const skillsApi = {\n  createSkillOffering: (skillData: Partial<SkillOffering>) =>\n    mockApiRequest<{ skillOffering: SkillOffering }>('/skills', 'POST', skillData),\n  \n  createPaidSkillOffering: (skillData: Partial<SkillOffering>) => // New API function\n    mockApiRequest<{ skillOffering: SkillOffering }>('/skills/paid', 'POST', { ...skillData, isPaid: true }),\n\n  getAllSkills: () =>\n    mockApiRequest<{ skills: SkillOffering[] }>('/skills'),\n  \n  requestSkillSwap: (skillId: string, requestData: Partial<SkillSwapRequest>) =>\n    mockApiRequest<{ skill: SkillOffering }>(`/skills/${skillId}/request`, 'POST', requestData),\n};\n\n// ==================== PROJECTS API ====================\n\nexport interface InvestmentProject {\n  id: string;\n  title: string;\n  description: string;\n  fundingGoal: number;\n  currentFunding: number;\n  minInvestment: number;\n  expectedReturn: string;\n  riskLevel: string;\n  category: string;\n  ownerId: string;\n  status: 'funding' | 'funded' | 'active' | 'completed';\n  investors: Investment[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Investment {\n  investorId: string;\n  amount: number;\n  investedAt: string;\n  equityPercentage: number;\n}\n\nexport const projectsApi = {\n  createProject: (projectData: Partial<InvestmentProject>) =>\n    mockApiRequest<{ project: InvestmentProject }>('/projects', 'POST', projectData),\n  \n  getAllProjects: () =>\n    mockApiRequest<{ projects: InvestmentProject[] }>('/projects'),\n  \n  makeInvestment: (projectId: string, investorId: string, amount: number) =>\n    mockApiRequest<{ project: InvestmentProject; investment: Investment }>(`/projects/${projectId}/invest`, 'POST', { investorId, amount }),\n};\n\n// ==================== NOTIFICATIONS API ====================\n\nexport interface Notification {\n  id: string;\n  userId: string;\n  title: string;\n  message: string;\n  type: 'info' | 'success' | 'warning' | 'error';\n  read: boolean;\n  createdAt: string;\n}\n\nexport const notificationsApi = {\n  getNotifications: (userId: string) =>\n    mockApiRequest<{ notifications: Notification[] }>(`/notifications/${userId}`),\n  \n  createNotification: (notificationData: Partial<Notification>) =>\n    mockApiRequest<{ notification: Notification }>('/notifications', 'POST', notificationData),\n  \n  markAsRead: (userId: string, notificationId: string) =>\n    mockApiRequest<{ notification: Notification }>(`/notifications/${userId}/${notificationId}/read`, 'PUT'),\n  \n  markAllAsRead: (userId: string) =>\n    mockApiRequest<{ success: boolean; message: string; updatedCount: number }>(`/notifications/${userId}/mark-all-read`, 'PUT'),\n};\n\n// ==================== REVIEWS API ====================\n\nexport const reviewsApi = {\n  addReview: (targetUserId: string, reviewerId: string, rating: number, comment: string) =>\n    mockApiRequest<{ success: boolean; review: Review }>(`/reviews/${targetUserId}/add`, 'POST', { reviewerId, rating, comment }),\n  \n  getReviewsForUser: (targetUserId: string) =>\n    mockApiRequest<{ reviews: Review[] }>(`/reviews/${targetUserId}`),\n};\n\n// ==================== AUTH API ====================\n\nexport const authApi = {\n  signUp: (email: string, password: string, name: string) =>\n    mockApiRequest<{ success: boolean; user: { id: string; name: string; email: string }; message: string }>('/auth/signup', 'POST', { email, password, name }),\n  \n  signIn: (email: string, password: string) =>\n    mockApiRequest<{ success: boolean; user: { id: string; name: string; email: string }; message: string }>('/auth/signin', 'POST', { email, password }),\n  \n  logout: (userId: string) => {\n    // Logout should only remove session tokens, not the user's stored profile\n    // Many parts of the app rely on persistent profile/wallet data; deleting them on logout caused data loss.\n    // If you have a session token stored use `session:${userId}` or similar key; remove it here.\n    deleteLocalStorageItem(`session:${userId}`);\n    return { success: true, message: 'User logged out.' };\n  },\n};\n\n// ==================== HEALTH CHECK ====================\n\nexport const healthCheck = () =>\n  mockApiRequest<{ status: string }>('/health');\n\n// Remove demo data initialization\nexport const mockBackend = {\n  clearAllData: clearAllLocalStorage,\n  getAllItems: getAllLocalStorageItems,\n  // kept for backwards compatibility — previously initialized demo data; now a noop\n  setInitialData: async () => {\n    // No demo data to initialize. Keep for compatibility with callers.\n    try {\n      const mockDataInitialized = getLocalStorageItem('mockDataInitialized', false);\n      if (!mockDataInitialized) {\n        setLocalStorageItem('mockDataInitialized', true);\n        console.log('Mock backend: setInitialData called (noop) - marked initialized.');\n      }\n    } catch (e) {\n      console.warn('mockBackend.setInitialData noop failed:', e);\n    }\n  }\n};","import React, { createContext, useContext, useState, ReactNode } from 'react';\n\nexport type Language = 'en' | 'ar' | 'fr';\n\ninterface TranslationData {\n  [key: string]: string | TranslationData;\n}\n\nconst translations: Record<Language, TranslationData> = {\n  en: {\n    // Landing Page\n    landing: {\n      tagline: 'The Future of Collaborative Economy',\n      heroTitle: 'Work, Swap & Invest',\n      heroSubtitle: 'Starting from Just 1 TND',\n      heroDescription: 'The hybrid economy platform where you can hire talent, exchange skills, or invest in local projects. Start with as little as 1 TND or 1 skill.',\n      getStarted: 'Get Started',\n      freeToJoin: 'Free to join',\n      securePayments: 'Secure payments',\n      aiPowered: 'AI-powered matching',\n      activeUsers: 'Active Users',\n      transactionsCompleted: 'Transactions Completed',\n      features: 'Features',\n      threeWays: 'Three Ways to Succeed',\n      featuresDescription: 'Whether you want to earn, learn, or invest, our platform adapts to your goals.',\n      hireTitle: 'Hire Mode',\n      hireDescription: 'Find and hire skilled professionals for your projects',\n      hireFeature1: 'Post jobs or service requests',\n      hireFeature2: 'Secure escrow payments',\n      hireFeature3: 'Integrated TND payments',\n      hireFeature4: 'Rating & review system',\n      skillSwapTitle: 'Skill Swap',\n      skillSwapDescription: 'Exchange your skills with others in the community',\n      skillSwapFeature1: 'Direct skill exchanges',\n      skillSwapFeature2: 'Credits for indirect swaps',\n      skillSwapFeature3: 'AI-powered matching',\n      skillSwapFeature4: 'Build your network',\n      investTitle: 'Micro-Investment',\n      investDescription: 'Invest in local projects starting from just 1 TND',\n      investFeature1: 'Minimum 1 TND investment',\n      investFeature2: 'Profit sharing opportunities',\n      investFeature3: 'AI risk assessment',\n      investFeature4: 'Local project focus',\n      howItWorks: 'How It Works',\n      getStartedInMinutes: 'Get Started in Minutes',\n      simpleProcess: 'Join our platform in three simple steps and start your journey today',\n      step1Title: 'Create Your Account',\n      step1Description: 'Sign up for free and complete your profile with your skills and interests',\n      step2Title: 'Choose Your Mode',\n      step2Description: 'Select whether you want to hire, swap skills, or invest in projects',\n      step3Title: 'Start Transacting',\n      step3Description: 'Connect with others and start building your economic future',\n      trustAndSafety: 'Trust & Safety',\n      builtOnTrust: 'Built on Trust & Security',\n      safetyDescription: 'Your safety is our priority. We\\'ve built comprehensive systems to ensure secure transactions and trustworthy interactions.',\n      idVerification: 'ID Verification',\n      idVerificationDesc: 'All users undergo identity verification',\n      secureWallet: 'Secure Wallet',\n      secureWalletDesc: 'Multi-currency wallet with escrow protection',\n      ratingSystem: 'Rating System',\n      ratingSystemDesc: 'Community-driven trust scores',\n      aiFraudDetection: 'AI Fraud Detection',\n      aiFraudDetectionDesc: 'Advanced AI monitors for suspicious activity',\n      readyToTransform: 'Ready to Transform Your Economic Life?',\n      joinThousands: 'Join thousands of Tunisians who are already working, swapping, and investing in the new collaborative economy.',\n      joinToday: 'Join Work & Invest Today',\n      platform: 'Platform',\n      services: 'Services',\n      legal: 'Legal',\n      about: 'About',\n      subtitle: 'Your hybrid economy platform for hiring, skill swapping, and micro-investing',\n      allRightsReserved: 'All rights reserved',\n      madeInTunisia: 'Made with ❤️ in Tunisia'\n    },\n    // Common\n    common: {\n      back: 'Back',\n      next: 'Next',\n      skip: 'Skip',\n      finish: 'Finish',\n      save: 'Save',\n      saving: 'Saving...',\n      cancel: 'Cancel',\n      delete: 'Delete',\n      edit: 'Edit',\n      close: 'Close',\n      add: 'Add',\n      loading: 'Loading...',\n      view: 'View',\n      search: 'Search',\n      filter: 'Filter',\n      sort: 'Sort',\n      apply: 'Apply',\n      submit: 'Submit',\n      previous: 'Previous',\n      yes: 'Yes',\n      no: 'No',\n      confirm: 'Confirm',\n      completed: 'Completed',\n      pending: 'Pending',\n      active: 'Active',\n      inactive: 'Inactive',\n      success: 'Success',\n      error: 'Error',\n      warning: 'Warning',\n      info: 'Info',\n      backToDashboard: 'Back to Dashboard'\n    },\n    // Navigation\n    navigation: {\n      dashboard: 'Dashboard',\n      hire: 'Hire',\n      skillSwap: 'Skill Swap',\n      investment: 'Invest',\n      profile: 'Profile',\n      wallet: 'Wallet',\n      notifications: 'Notifications',\n      settings: 'Settings',\n      logout: 'Logout'\n    },\n    // Onboarding\n    onboarding: {\n      welcomeTitle: 'Welcome to Work & Invest!',\n      welcomeDescription: 'Let\\'s set up your profile in just a few steps',\n      bioTitle: 'Tell us about yourself',\n      bioDescription: 'Share a brief introduction',\n      locationTitle: 'Where are you located?',\n      locationDescription: 'Help others find you',\n      skillsTitle: 'What are your skills?',\n      skillsDescription: 'Add your top skills',\n      jobExperienceTitle: 'Your Job Experience',\n      jobExperienceDescription: 'Tell us about your professional background',\n      studyExperienceTitle: 'Your Study Experience',\n      studyExperienceDescription: 'Share your educational background',\n      welcome: 'Welcome',\n      letsSetup: 'Let\\'s set up your profile to help you get the most out of Work & Invest',\n      benefit1: 'Get matched with the right opportunities',\n      benefit2: 'Build trust with a complete profile',\n      benefit3: 'Stand out in the community',\n      tellUs: 'Tell us about yourself',\n      bioPlaceholder: 'I\\'m a professional with experience in... I\\'m passionate about... I\\'m looking to...',\n      characters: 'characters',\n      whereLocated: 'Where are you located?',\n      locationPlaceholder: 'e.g., Tunis, Tunisia',\n      locationHelp: 'This helps us connect you with local opportunities',\n      addSkills: 'Add your skills (minimum 3 recommended)',\n      skillsPlaceholder: 'e.g., Web Development, Design, Marketing',\n      skillsAdded: 'skills added',\n      jobExperienceRequiredFields: 'Please fill in job title, company, and start date.',\n      studyExperienceRequiredFields: 'Please fill in degree, institution, and start date.',\n      addJobExperience: 'Add Job Experience',\n      addStudyExperience: 'Add Education',\n      jobTitle: 'Job Title',\n      jobTitlePlaceholder: 'e.g., Software Engineer',\n      company: 'Company',\n      companyPlaceholder: 'e.g., Tech Solutions Inc.',\n      startDate: 'Start Date',\n      endDate: 'End Date',\n      optional: 'Optional',\n      description: 'Description',\n      jobDescriptionPlaceholder: 'Responsibilities, achievements, etc.',\n      degree: 'Degree/Field of Study',\n      degreePlaceholder: 'e.g., Bachelor of Computer Science',\n      institution: 'Institution',\n      institutionPlaceholder: 'e.g., University of Tunis',\n      studyDescriptionPlaceholder: 'Courses, projects, honors, etc.',\n      current: 'Current',\n      addExperience: 'Add Experience',\n      addEducation: 'Add Education',\n      step: 'Step',\n      of: 'of',\n      complete: 'complete',\n      profileCompleted: 'Profile setup complete!',\n      saveFailed: 'Failed to save profile. Please try again.'\n    },\n    // Auth\n    auth: {\n      welcome: 'Work & Invest',\n      description: 'Your hybrid economy platform for hiring, skill swapping, and micro-investing',\n      login: 'Login',\n      register: 'Register',\n      email: 'Email',\n      password: 'Password',\n      confirmPassword: 'Confirm Password',\n      fullName: 'Full Name',\n      signIn: 'Sign In',\n      createAccount: 'Create Account',\n      demoMode: 'Try Demo Mode',\n      signingIn: 'Signing in...',\n      creatingAccount: 'Creating account...',\n      loginSuccess: 'Login successful!',\n      registrationSuccess: 'Account created successfully! You are now logged in.',\n      demoActivated: 'Demo mode activated!',\n      passwordMismatch: 'Passwords do not match',\n      passwordTooShort: 'Password must be at least 6 characters long',\n      fillAllFields: 'Please fill in all required fields',\n      forgotPassword: 'Forgot password?',\n      resetPassword: 'Reset Password',\n      resetPasswordDesc: 'Enter your email address and we\\'ll send you a link to reset your password.',\n      emailAddress: 'Email Address',\n      sendResetLink: 'Send Reset Link',\n      sending: 'Sending...',\n      resetLinkSent: 'Password reset link sent to',\n      resetLinkError: 'Failed to send password reset email',\n      passwordStrength: 'Password Strength',\n      weak: 'Weak',\n      medium: 'Medium',\n      strong: 'Strong',\n      passwordRequirements: 'Password Recommendations:',\n      minLength: 'At least 6 characters (required)',\n      hasUppercase: 'At least one uppercase letter (recommended)',\n      hasLowercase: 'At least one lowercase letter (recommended)',\n      hasNumber: 'At least one number (recommended)',\n      emailVerification: 'Email Verification',\n      emailNotVerified: 'Email not verified',\n      resendVerification: 'Resend verification email',\n      verificationSent: 'Verification email sent',\n      verificationError: 'Failed to send verification email',\n      loginFailed: 'Login failed. Please check your credentials.',\n      registrationFailed: 'Registration failed. Please try again.',\n      wrongPassword: 'Incorrect password. Try again or reset your password.',\n      noAccountFound: 'No account found with this email. Please sign up.',\n      invalidEmail: 'Enter a valid email.',\n      developerTools: 'Developer Tools',\n      hideDeveloperTools: 'Hide Developer Tools',\n      showDeveloperTools: 'Show Developer Tools',\n      cleanupWarning: 'Warning: This will delete ALL user accounts and data. Use only for testing.',\n      resetDatabase: 'Reset Database (Delete All Data)',\n      cleaning: 'Cleaning...',\n      emailExistsHint: 'Use this if you see \"email already exists\" errors',\n      secureAuthentication: 'Secure Authentication',\n      multiLanguage: 'Multi-Language'\n    },\n    // Dashboard\n    dashboard: {\n      welcomeBack: 'Welcome back',\n      subtitle: \"Here's what's happening with your work, swaps, and investments.\",\n      loadingData: 'Loading your latest data...',\n      totalBalance: 'Total Balance',\n      money: 'Money',\n      skillCredits: 'Skill Credits',\n      userRating: 'User Rating',\n      quickActions: 'Quick Actions',\n      quickActionsDesc: 'Start earning, learning, or investing',\n      postJob: 'Post a Job',\n      postJobDesc: 'Find skilled professionals',\n      offerSkills: 'Offer Skills',\n      offerSkillsDesc: 'Exchange your expertise',\n      browseInvestments: 'Browse Investments',\n      browseInvestmentsDesc: 'Discover local projects',\n      portfolioSummary: 'Portfolio Summary',\n      cashBalance: 'Cash Balance',\n      equityValue: 'Equity Value',\n      viewDetailedWallet: 'View Detailed Wallet',\n      recentActivity: 'Recent Activity',\n      recentActivityDesc: 'Your latest transactions and interactions',\n      noRecentActivity: 'No recent activity',\n      noActivityDesc: 'Start by posting a job, offering skills, or making an investment!',\n      viewAllActivity: 'View All Activity',\n      aiRecommendations: 'AI Recommendations',\n      aiRecommendationsDesc: 'Personalized opportunities based on your profile',\n      activeJobPostings: 'Active Job Postings',\n      browseJobsDesc: 'Browse available projects and freelance opportunities',\n      skillExchangeOffers: 'Skill Exchange Offers',\n      exchangeSkillsDesc: 'Exchange your skills with other professionals',\n      investmentOpportunities: 'Investment Opportunities',\n      discoverProjectsDesc: 'Discover local projects seeking micro-investments',\n      browse: 'Browse',\n      explore: 'Explore',\n      invest: 'Invest',\n      justNow: 'Just now',\n      hoursAgo: 'hours ago',\n      daysAgo: 'days ago',\n      completed: 'completed',\n      pending: 'pending',\n      active: 'active'\n    },\n    // Settings\n    settings: {\n      title: 'Settings',\n      language: 'Language',\n      theme: 'Theme',\n      lightMode: 'Light Mode',\n      darkMode: 'Dark Mode',\n      systemMode: 'System',\n      notifications: 'Notifications',\n      emailNotifications: 'Email Notifications',\n      pushNotifications: 'Push Notifications',\n      privacy: 'Privacy',\n      account: 'Account',\n      support: 'Support',\n      about: 'About',\n      selectLanguage: 'Select Language',\n      selectTheme: 'Select Theme',\n      emailNotificationsDesc: 'Receive notifications via email',\n      pushNotificationsDesc: 'Receive browser notifications',\n      marketing: 'Marketing Communications',\n      marketingDesc: 'Receive updates about new features',\n      editProfile: 'Edit Profile',\n      paymentSecurity: 'Payment & Security',\n      helpCenter: 'Help Center',\n      contactSupport: 'Contact Support',\n      dangerZone: 'Danger Zone',\n      dangerZoneDesc: 'Irreversible actions for your account',\n      signOut: 'Sign Out',\n      appDescription: 'Your hybrid economy platform for hiring, skill swapping, and micro-investing.',\n      version: 'Version 1.0.0',\n      beta: 'Beta',\n      tunisia: 'Tunisia',\n      accountPreferences: 'Manage your account preferences and application settings',\n      supportHelp: 'Support & Help',\n      aboutAppTitle: 'About Work & Invest',\n      helpCenterSoon: 'Help center coming soon!',\n      contactSupportSoon: 'Contact support feature coming soon!',\n      faq: 'FAQ',\n      termsOfService: 'Terms of Service',\n      privacyPolicy: 'Privacy Policy',\n      faqSoon: 'FAQ coming soon!',\n      developerTools: 'Developer Tools',\n      developerToolsDesc: 'Tools for testing and development',\n      cleanupDatabase: 'Cleanup Database',\n      cleanupWarning: 'Warning: This will delete ALL user accounts and data. Use only for testing.',\n      cleanupConfirm: 'Are you sure you want to delete ALL data from the database? This cannot be undone.',\n      cleanupSuccess: 'Database cleaned successfully',\n      cleanupError: 'Failed to cleanup database'\n    },\n    // Profile\n    profile: {\n      editProfile: 'Edit Profile',\n      saveChanges: 'Save Changes',\n      unsavedChanges: 'You have unsaved changes. Are you sure you want to leave?',\n      bioLimit: 'characters remaining',\n      uploadPhoto: 'Upload Photo',\n      changePhoto: 'Change Photo',\n      username: 'Username',\n      usernameTaken: 'Username already taken',\n      usernameAvailable: 'Username available',\n      fullName: 'Full Name',\n      bio: 'Bio',\n      phone: 'Phone Number',\n      location: 'Location',\n      skills: 'Skills',\n      addSkill: 'Add Skill',\n      removeSkill: 'Remove Skill',\n      bioTooLong: 'Bio must be less than {{limit}} characters',\n      saveChangesSuccess: 'Profile changes saved successfully!',\n      saveChangesError: 'Failed to save profile changes.',\n      addYourSkills: 'Add your skills',\n      jobExperienceTitle: 'Job Experience',\n      studyExperienceTitle: 'Study Experience',\n      addExperience: 'Add Experience',\n      addEducation: 'Add Education',\n      noJobExperience: 'No job experiences added yet.',\n      noStudyExperience: 'No study experiences added yet.',\n      certificationsTitle: 'Certifications', // New\n      certificationsDescription: 'Showcase your professional certifications and achievements.', // New\n      addCertification: 'Add Certification', // New\n      noCertifications: 'No certifications added yet.', // New\n      certificationName: 'Certification Name', // New\n      certificationNamePlaceholder: 'e.g., Google Project Management Certificate', // New\n      issuer: 'Issuer', // New\n      issuerPlaceholder: 'e.g., Google, Coursera', // New\n      dateIssued: 'Date Issued', // New\n      certificationRequiredFields: 'Please fill in certification name, issuer, and date issued.', // New\n      servicesOfferedTitle: 'Services I Offer', // New\n      servicesOfferedDescription: 'List the services you provide to clients.', // New\n      addService: 'Add Service', // New\n      noServicesOffered: 'No services offered yet.', // New\n      serviceName: 'Service Name', // New\n      serviceNamePlaceholder: 'e.g., Custom Web Development', // New\n      servicePrice: 'Price/Rate', // New\n      servicePricePlaceholder: 'e.g., 50 TND/hour, 200-500 TND/project', // New\n      serviceRequiredFields: 'Please fill in service name and price/rate.', // New\n      addSkillPlaceholder: 'e.g., React, Photoshop', // New\n      noReviewsYet: 'No reviews yet',\n      noReviewsDesc: 'Be the first to leave a review for this user!'\n    },\n    // Public Profile\n    publicProfile: {\n      profileNotFound: 'Profile not found',\n      profileUnavailable: 'The user profile you are looking for is not available.',\n      fetchError: 'Failed to fetch user profile.',\n      chatFeatureComingSoon: 'Chat feature coming soon!',\n      message: 'Message',\n      addReview: 'Add Review',\n      addReviewFor: 'Add Review for {{userName}}',\n      shareExperience: 'Share your experience with this user.',\n      yourRating: 'Your Rating',\n      yourComment: 'Your Comment',\n      commentPlaceholder: 'Write your review here...',\n      loginToAddReview: 'Please log in to add a review.',\n      cannotReviewSelf: 'You cannot review your own profile.',\n      reviewRequiredFields: 'Please provide a rating and a comment.',\n      reviewSuccess: 'Review submitted successfully!',\n      reviewError: 'Failed to submit review.',\n      reportUser: 'Report User',\n      reportUserFor: 'Report User: {{userName}}',\n      reportReasonDesc: 'Please select a reason for reporting this user. Your report will be reviewed by our team.',\n      reason: 'Reason',\n      selectReason: 'Select a reason',\n      reasonSpam: 'Spam or misleading content',\n      reasonHarassment: 'Harassment or hate speech',\n      reasonFraud: 'Fraudulent activity',\n      reasonOther: 'Other (please specify in message)',\n      loginToReport: 'Please log in to report a user.',\n      selectReportReason: 'Please select a reason for reporting.',\n      reportSuccess: 'User reported successfully!',\n      reportError: 'Failed to report user.',\n      blockUser: 'Block User',\n      confirmBlock: 'Are you sure you want to block {{userName}}? You will no longer see their content or be able to interact with them.',\n      loginToBlock: 'Please log in to block a user.',\n      blockSuccess: '{{userName}} has been blocked.',\n      blockError: 'Failed to block user.'\n    },\n    // Wallet\n    wallet: {\n      title: 'My Wallet',\n      addCard: 'Add Payment Method',\n      removeCard: 'Remove Card',\n      setDefault: 'Set as Default',\n      cardAdded: 'Payment method added successfully',\n      cardRemoved: 'Payment method removed',\n      topUp: 'Top Up',\n      topUpSuccess: 'Successfully added funds',\n      topUpFailed: 'Failed to add funds',\n      insufficientFunds: 'Insufficient funds',\n      transactionHistory: 'Transaction History',\n      noTransactions: 'No transactions yet',\n      cardNumber: 'Card Number',\n      expiryDate: 'Expiry Date',\n      cvv: 'CVV',\n      cardholderName: 'Cardholder Name'\n    },\n    // Notifications\n    notifications: {\n      markAllRead: 'Mark all read',\n      noNotifications: 'No notifications yet',\n      noNotificationsDesc: 'We\\'ll notify you when something happens',\n      justNow: 'Just now',\n      minutesAgo: 'm ago',\n      hoursAgo: 'h ago',\n      daysAgo: 'd ago',\n      highPriority: 'High Priority',\n      deleteSuccess: 'Notification deleted',\n      markReadSuccess: 'All notifications marked as read',\n      loadError: 'Failed to load notifications'\n    },\n    // Skill Swap Mode\n    skillSwap: {\n      paidTeaching: 'Paid Teaching', // New\n      sellSkill: 'Sell Skill', // New\n      pricePerSession: 'Price per Session', // New\n      certificateRequired: 'Certificate Required?', // New\n      certificateUrl: 'Certificate URL', // New\n      confirmPurchase: 'Confirm Purchase', // New\n      offerDetails: 'Offer Details', // New\n      skill: 'Skill', // New\n      price: 'Price', // New\n      yourBalance: 'Your Balance', // New\n      deductionWarning: 'By confirming, {{price}} TND will be deducted from your wallet.', // New\n      insufficientFunds: 'Insufficient funds in your wallet. Please top up.', // New\n      invalidPurchase: 'Invalid purchase request.', // New\n      purchaseSuccess: 'Successfully purchased \"{{title}}\" for {{price}} TND!', // New\n      purchaseFailed: 'Failed to complete purchase.', // New\n      cannotPurchaseOwnSkill: 'You cannot purchase your own skill offer.', // New\n      aiMatch: 'AI Match', // New\n      aiMatchDescription: 'Find skill swaps that best match your profile and learning goals.', // New\n      createPaidOffer: 'Create Paid Teaching Offer', // New\n      createFreeSwap: 'Create Free Skill Swap', // New\n      offerAsPaidTeaching: 'Offer as Paid Teaching?', // New\n      specifySkillWanted: 'Please specify a skill you want to learn for a free swap.', // New\n      enterValidPrice: 'Please enter a valid price for your paid teaching offer.', // New\n      provideCertificateUrl: 'Please provide a certificate URL if certificate is required.' // New\n    }\n  },\n  ar: {\n    // Landing Page\n    landing: {\n      tagline: 'مستقبل الاقتصاد التشاركي',\n      heroTitle: 'اعمل، تبادل واستثمر',\n      heroSubtitle: 'ابدأ بدينار واحد فقط',\n      heroDescription: 'منصة الاقتصاد الهجين حيث يمكنك توظيف المواهب أو تبادل المهارات أو الاستثمار في المشاريع المحلية. ابدأ بدينار واحد أو مهارة واحدة.',\n      getStarted: 'ابدأ الآن',\n      freeToJoin: 'الانضمام مجاني',\n      securePayments: 'مدفوعات آمنة',\n      aiPowered: 'مطابقة بالذكاء الاصطناعي',\n      activeUsers: 'المستخدمون النشطون',\n      transactionsCompleted: 'المعاملات المكتملة',\n      features: 'المميزات',\n      threeWays: 'ثلاث طرق للنجاح',\n      featuresDescription: 'سواء كنت ترغب في الكسب أو التعلم أو الاستثمار، تتكيف منصتنا مع أهدافك.',\n      hireTitle: 'وضع التوظيف',\n      hireDescription: 'ابحث عن محترفين ماهرين ووظفهم لمشاريعك',\n      hireFeature1: 'نشر الوظائف أو طلبات الخدمة',\n      hireFeature2: 'مدفوعات ضمان آمنة',\n      hireFeature3: 'مدفوعات متكاملة بالدينار',\n      hireFeature4: 'نظام التقييم والمراجعة',\n      skillSwapTitle: 'تبادل المهارات',\n      skillSwapDescription: 'تبادل مهاراتك مع الآخرين في المجتمع',\n      skillSwapFeature1: 'تبادلات مهارات مباشرة',\n      skillSwapFeature2: 'رصيد للتبادلات غير المباشرة',\n      skillSwapFeature3: 'مطابقة بالذكاء الاصطناعي',\n      skillSwapFeature4: 'بناء شبكتك',\n      investTitle: 'الاستثمار المصغر',\n      investDescription: 'استثمر في المشاريع المحلية ابتداءً من دينار واحد فقط',\n      investFeature1: 'استثمار بحد أدنى دينار واحد',\n      investFeature2: 'فرص المشاركة في الأرباح',\n      investFeature3: 'تقييم المخاطر بالذكاء الاصطناعي',\n      investFeature4: 'التركيز على المشاريع المحلية',\n      howItWorks: 'كيف يعمل',\n      getStartedInMinutes: 'ابدأ في دقائق',\n      simpleProcess: 'انضم إلى منصتنا في ثلاث خطوات بسيطة وابدأ رحلتك اليوم',\n      step1Title: 'أنشئ حسابك',\n      step1Description: 'سجل مجاناً وأكمل ملفك الشخصي بمهاراتك واهتماماتك',\n      step2Title: 'اختر وضعك',\n      step2Description: 'حدد ما إذا كنت تريد التوظيف أو تبادل المهارات أو الاستثمار في المشاريع',\n      step3Title: 'ابدأ المعاملات',\n      step3Description: 'تواصل مع الآخرين وابدأ في بناء مستقبلك الاقتصادي',\n      trustAndSafety: 'الثقة والأمان',\n      builtOnTrust: 'مبني على الثقة والأمان',\n      safetyDescription: 'سلامتك هي أولويتنا. لقد بنينا أنظمة شاملة لضمان معاملات آمنة وتفاعلات موثوقة.',\n      idVerification: 'التحقق من الهوية',\n      idVerificationDesc: 'جميع المستخدمين يخضعون للتحقق من الهوية',\n      secureWallet: 'محفظة آمنة',\n      secureWalletDesc: 'محفظة متعددة العملات مع حماية الضمان',\n      ratingSystem: 'نظام التقييم',\n      ratingSystemDesc: 'درجات الثقة المدفوعة من المجتمع',\n      aiFraudDetection: 'كشف الاحتيال بالذكاء الاصطناعي',\n      aiFraudDetectionDesc: 'الذكاء الاصطناعي المتقدم يراقب النشاط المشبوه',\n      readyToTransform: 'هل أنت مستعد لتحويل حياتك الاقتصادية؟',\n      joinThousands: 'انضم إلى آلاف التونسيين الذين يعملون ويتبادلون ويستثمرون بالفعل في الاقتصاد التشاركي الجديد.',\n      joinToday: 'انضم إلى Work & Invest اليوم',\n      platform: 'المنصة',\n      services: 'الخدمات',\n      legal: 'قانوني',\n      about: 'حول',\n      subtitle: 'منصتك الاقتصادية الهجينة للتوظيف وتبادل المهارات والاستثمار المصغر',\n      allRightsReserved: 'جميع الحقوق محفوظة',\n      madeInTunisia: 'صنع بـ ❤️ في تونس'\n    },\n    // Common\n    common: {\n      back: 'رجوع',\n      next: 'التالي',\n      skip: 'تخطي',\n      finish: 'إنهاء',\n      save: 'حفظ',\n      saving: 'جاري الحفظ...',\n      cancel: 'إلغاء',\n      delete: 'حذف',\n      edit: 'تعديل',\n      close: 'إغلاق',\n      add: 'إضافة',\n      loading: 'جاري التحميل...',\n      view: 'عرض',\n      search: 'بحث',\n      filter: 'تصفية',\n      sort: 'ترتيب',\n      apply: 'تطبيق',\n      submit: 'إرسال',\n      previous: 'السابق',\n      yes: 'نعم',\n      no: 'لا',\n      confirm: 'تأكيد',\n      completed: 'مكتمل',\n      pending: 'معلق',\n      active: 'نشط',\n      inactive: 'غير نشط',\n      success: 'نجح',\n      error: 'خطأ',\n      warning: 'تحذير',\n      info: 'معلومات',\n      backToDashboard: 'العودة إلى لوحة التحكم'\n    },\n    // Navigation\n    navigation: {\n      dashboard: 'لوحة التحكم',\n      hire: 'توظيف',\n      skillSwap: 'تبادل المهارات',\n      investment: 'استثمار',\n      profile: 'الملف الشخصي',\n      wallet: 'المحفظة',\n      notifications: 'الإشعارات',\n      settings: 'الإعدادات',\n      logout: 'تسجيل الخروج'\n    },\n    // Onboarding\n    onboarding: {\n      welcomeTitle: 'مرحباً بك في Work & Invest!',\n      welcomeDescription: 'لنقم بإعداد ملفك الشخصي في خطوات قليلة',\n      bioTitle: 'أخبرنا عن نفسك',\n      bioDescription: 'شارك مقدمة موجزة',\n      locationTitle: 'أين تقع؟',\n      locationDescription: 'ساعد الآخرين في العثور عليك',\n      skillsTitle: 'ما هي مهاراتك؟',\n      skillsDescription: 'أضف أهم مهاراتك',\n      jobExperienceTitle: 'خبرتك المهنية',\n      jobExperienceDescription: 'أخبرنا عن خلفيتك المهنية',\n      studyExperienceTitle: 'خبرتك الدراسية',\n      studyExperienceDescription: 'شارك خلفيتك التعليمية',\n      welcome: 'مرحباً',\n      letsSetup: 'لنقم بإعداد ملفك الشخصي لمساعدتك في الاستفادة القصوى من Work & Invest',\n      benefit1: 'احصل على مطابقة مع الفرص المناسبة',\n      benefit2: 'بناء الثقة مع ملف شخصي كامل',\n      benefit3: 'تميز في المجتمع',\n      tellUs: 'أخبرنا عن نفسك',\n      bioPlaceholder: 'أنا محترف ذو خبرة في... أنا شغوف بـ... أبحث عن...',\n      characters: 'أحرف',\n      whereLocated: 'أين تقع؟',\n      locationPlaceholder: 'مثال: تونس، تونس',\n      locationHelp: 'هذا يساعدنا في ربطك بالفرص المحلية',\n      addSkills: 'أضف مهاراتك (يوصى بـ 3 على الأقل)',\n      skillsPlaceholder: 'مثال: تطوير الويب، التصميم، التسويق',\n      skillsAdded: 'مهارات مضافة',\n      jobExperienceRequiredFields: 'يرجى ملء المسمى الوظيفي والشركة وتاريخ البدء.',\n      studyExperienceRequiredFields: 'يرجى ملء الدرجة العلمية والمؤسسة وتاريخ البدء.',\n      addJobExperience: 'إضافة خبرة عمل',\n      addStudyExperience: 'إضافة تعليم',\n      jobTitle: 'المسمى الوظيفي',\n      jobTitlePlaceholder: 'مثال: مهندس برمجيات',\n      company: 'الشركة',\n      companyPlaceholder: 'مثال: شركة حلول تقنية',\n      startDate: 'تاريخ البدء',\n      endDate: 'تاريخ الانتهاء',\n      optional: 'اختياري',\n      description: 'الوصف',\n      jobDescriptionPlaceholder: 'المسؤوليات، الإنجازات، إلخ.',\n      degree: 'الدرجة العلمية/مجال الدراسة',\n      degreePlaceholder: 'مثال: بكالوريوس علوم الحاسوب',\n      institution: 'المؤسسة التعليمية',\n      institutionPlaceholder: 'مثال: جامعة تونس',\n      studyDescriptionPlaceholder: 'الدورات، المشاريع، التكريمات، إلخ.',\n      current: 'حالي',\n      addExperience: 'إضافة خبرة',\n      addEducation: 'إضافة تعليم',\n      step: 'خطوة',\n      of: 'من',\n      complete: 'مكتمل',\n      profileCompleted: 'اكتمل إعداد الملف الشخصي!',\n      saveFailed: 'فشل حفظ الملف الشخصي. حاول مرة أخرى.'\n    },\n    // Auth\n    auth: {\n      welcome: 'العمل والاستثمار',\n      description: 'منصة الاقتصاد المختلط للتوظيف وتبادل المهارات والاستثمارات الصغيرة',\n      login: 'تسجيل الدخول',\n      register: 'إنشاء حساب',\n      email: 'البريد الإلكتروني',\n      password: 'كلمة المرور',\n      confirmPassword: 'تأكيد كلمة المرور',\n      fullName: 'الاسم الكامل',\n      signIn: 'دخول',\n      createAccount: 'إنشاء حساب',\n      demoMode: 'جرب النسخة التجريبية',\n      signingIn: 'جاري تسجيل الدخول...',\n      creatingAccount: 'جاري إنشاء الحساب...',\n      loginSuccess: 'تم تسجيل الدخول بنجاح!',\n      registrationSuccess: 'تم إنشاء الحساب بنجاح! أنت الآن مسجل الدخول.',\n      demoActivated: 'تم تفعيل النسخة التجريبية!',\n      passwordMismatch: 'كلمات المرور غير متطابقة',\n      passwordTooShort: 'يجب أن تكون كلمة المرور 6 أحرف على الأقل',\n      fillAllFields: 'يرجى ملء جميع الحقول المطلوبة',\n      forgotPassword: 'نسيت كلمة المرور؟',\n      resetPassword: 'إعادة تعيين كلمة المرور',\n      resetPasswordDesc: 'أدخل عنوان بريدك الإلكتروني وسنرسل لك رابطًا لإعادة تعيين كلمة المرور.',\n      emailAddress: 'عنوان البريد الإلكتروني',\n      sendResetLink: 'إرسال رابط إعادة التعيين',\n      sending: 'جاري الإرسال...',\n      resetLinkSent: 'تم إرسال رابط إعادة تعيين كلمة المرور إلى',\n      resetLinkError: 'فشل إرسال بريد إعادة تعيين كلمة المرور',\n      passwordStrength: 'قوة كلمة المرور',\n      weak: 'ضعيفة',\n      medium: 'متوسطة',\n      strong: 'قوية',\n      passwordRequirements: 'توصيات كلمة المرور:',\n      minLength: '6 أحرف على الأقل (مطلوب)',\n      hasUppercase: 'حرف كبير واحد على الأقل (موصى به)',\n      hasLowercase: 'حرف صغير واحد على الأقل (موصى به)',\n      hasNumber: 'رقم واحد على الأقل (موصى به)',\n      emailVerification: 'التحقق من البريد الإلكتروني',\n      emailNotVerified: 'البريد الإلكتروني غير مُحقق منه',\n      resendVerification: 'إعادة إرسال بريد التحقق',\n      verificationSent: 'تم إرسال بريد التحقق',\n      verificationError: 'فشل إرسال بريد التحقق',\n      loginFailed: 'فشل تسجيل الدخول. يرجى التحقق من بيانات الاعتماد الخاصة بك.',\n      registrationFailed: 'فشل التسجيل. يرجى المحاولة مرة أخرى.',\n      wrongPassword: 'كلمة المرور غير صحيحة. حاول مرة أخرى أو أعد تعيين كلمة المرور.',\n      noAccountFound: 'لم يتم العثور على حساب بهذا البريد الإلكتروني. يرجى التسجيل.',\n      invalidEmail: 'أدخل بريدًا إلكترونيًا صالحًا.',\n      developerTools: 'أدوات المطور',\n      hideDeveloperTools: 'إخفاء أدوات المطور',\n      showDeveloperTools: 'إظهار أدوات المطور',\n      cleanupWarning: 'تحذير: سيؤدي هذا إلى حذف جميع حسابات المستخدمين والبيانات. استخدمه للاختبار فقط.',\n      resetDatabase: 'إعادة تعيين قاعدة البيانات (حذف جميع البيانات)',\n      cleaning: 'جاري التنظيف...',\n      emailExistsHint: 'استخدم هذا إذا رأيت أخطاء \"البريد الإلكتروني موجود بالفعل\"',\n      secureAuthentication: 'مصادقة آمنة',\n      multiLanguage: 'متعدد اللغات'\n    },\n    // Dashboard\n    dashboard: {\n      welcomeBack: 'مرحباً بعودتك',\n      subtitle: 'إليك ما يحدث مع أعمالك وتبادل المهارات والاستثمارات.',\n      loadingData: 'جاري تحميل أحدث البيانات...',\n      totalBalance: 'الرصيد الإجمالي',\n      money: 'المال',\n      skillCredits: 'نقاط المهارات',\n      userRating: 'تقييم المستخدم',\n      quickActions: 'الإجراءات السريعة',\n      quickActionsDesc: 'ابدأ في الكسب أو التعلم أو الاستثمار',\n      postJob: 'نشر وظيفة',\n      postJobDesc: 'العثور على متخصصين مهرة',\n      offerSkills: 'عرض المهارات',\n      offerSkillsDesc: 'تبادل خبرتك',\n      browseInvestments: 'تصفح الاستثمارات',\n      browseInvestmentsDesc: 'اكتشف المشاريع المحلية',\n      portfolioSummary: 'ملخص المحفظة',\n      cashBalance: 'الرصيد النقدي',\n      equityValue: 'قيمة الأسهم',\n      viewDetailedWallet: 'عرض المحفظة التفصيلية',\n      recentActivity: 'النشاط الأخير',\n      recentActivityDesc: 'أحدث معاملاتك وتفاعلاتك',\n      noRecentActivity: 'لا يوجد نشاط حديث',\n      noActivityDesc: 'ابدأ بنشر وظيفة أو عرض مهارات أو القيام باستثمار!',\n      viewAllActivity: 'عرض جميع الأنشطة',\n      aiRecommendations: 'توصيات الذكاء الاصطناعي',\n      aiRecommendationsDesc: 'فرص شخصية بناءً على ملفك الشخصي',\n      activeJobPostings: 'إعلانات الوظائف النشطة',\n      browseJobsDesc: 'تصفح المشاريع المتاحة وفرص العمل الحر',\n      skillExchangeOffers: 'عروض تبادل المهارات',\n      exchangeSkillsDesc: 'تبادل مهاراتك مع متخصصين آخرين',\n      investmentOpportunities: 'فرص الاستثمار',\n      discoverProjectsDesc: 'اكتشف المشاريع المحلية التي تسعى للاستثمارات الصغيرة',\n      browse: 'تصفح',\n      explore: 'استكشف',\n      invest: 'استثمر',\n      justNow: 'الآن',\n      hoursAgo: 'ساعات مضت',\n      daysAgo: 'أيام مضت',\n      completed: 'مكتمل',\n      pending: 'معلق',\n      active: 'نشط'\n    },\n    // Settings\n    settings: {\n      title: 'الإعدادات',\n      language: 'اللغة',\n      theme: 'السمة',\n      lightMode: 'الوضع الفاتح',\n      darkMode: 'الوضع الداكن',\n      systemMode: 'وضع النظام',\n      notifications: 'الإشعارات',\n      emailNotifications: 'إشعارات البريد الإلكتروني',\n      pushNotifications: 'الإشعارات المدفوعة',\n      privacy: 'الخصوصية',\n      account: 'الحساب',\n      support: 'الدعم',\n      about: 'حول',\n      selectLanguage: 'اختر اللغة',\n      selectTheme: 'اختر السمة',\n      emailNotificationsDesc: 'تلقي الإشعارات عبر البريد الإلكتروني',\n      pushNotificationsDesc: 'تلقي إشعارات المتصفح',\n      marketing: 'اتصالات التسويق',\n      marketingDesc: 'تلقي تحديثات حول الميزات الجديدة',\n      editProfile: 'تعديل الملف الشخصي',\n      paymentSecurity: 'الدفع والأمان',\n      helpCenter: 'مركز المساعدة',\n      contactSupport: 'اتصل بالدعم',\n      dangerZone: 'المنطقة الخطرة',\n      dangerZoneDesc: 'إجراءات لا رجعة فيها لحسابك',\n      signOut: 'تسجيل الخروج',\n      appDescription: 'منصة الاقتصاد المختلط للتوظيف وتبادل المهارات والاستثمارات الصغيرة.',\n      version: 'الإصدار 1.0.0',\n      beta: 'تجريبي',\n      tunisia: 'تونس',\n      accountPreferences: 'إدارة تفضيلات حسابك وإعدادات التطبيق',\n      supportHelp: 'الدعم والمساعدة',\n      aboutAppTitle: 'حول العمل والاستثمار',\n      helpCenterSoon: 'مركز المساعدة قريباً!',\n      contactSupportSoon: 'ميزة الاتصال بالدعم قريباً!'\n    },\n    // Profile\n    profile: {\n      editProfile: 'تعديل الملف الشخصي',\n      saveChanges: 'حفظ التغييرات',\n      unsavedChanges: 'لديك تغييرات غير محفوظة. هل أنت متأكد أنك تريد المغادرة؟',\n      bioLimit: 'حرف متبقي',\n      uploadPhoto: 'تحميل صورة',\n      changePhoto: 'تغيير الصورة',\n      username: 'اسم المستخدم',\n      usernameTaken: 'اسم المستخدم مأخوذ بالفعل',\n      usernameAvailable: 'اسم المستخدم متاح',\n      fullName: 'الاسم الكامل',\n      bio: 'نبذة',\n      phone: 'رقم الهاتف',\n      location: 'الموقع',\n      skills: 'المهارات',\n      addSkill: 'إضافة مهارة',\n      removeSkill: 'إزالة مهارة',\n      bioTooLong: 'يجب أن تكون السيرة الذاتية أقل من {{limit}} حرفًا',\n      saveChangesSuccess: 'تم حفظ تغييرات الملف الشخصي بنجاح!',\n      saveChangesError: 'فشل حفظ تغييرات الملف الشخصي.',\n      addYourSkills: 'أضف مهاراتك',\n      jobExperienceTitle: 'الخبرة المهنية',\n      studyExperienceTitle: 'الخبرة الدراسية',\n      addExperience: 'إضافة خبرة',\n      addEducation: 'إضافة تعليم',\n      noJobExperience: 'لم يتم إضافة أي خبرات عمل بعد.',\n      noStudyExperience: 'لم يتم إضافة أي خبرات دراسية بعد.',\n      certificationsTitle: 'الشهادات', // New\n      certificationsDescription: 'اعرض شهاداتك وإنجازاتك المهنية.', // New\n      addCertification: 'إضافة شهادة', // New\n      noCertifications: 'لم يتم إضافة أي شهادات بعد.', // New\n      certificationName: 'اسم الشهادة', // New\n      certificationNamePlaceholder: 'مثال: شهادة إدارة مشاريع جوجل', // New\n      issuer: 'الجهة المصدرة', // New\n      issuerPlaceholder: 'مثال: جوجل، كورسيرا', // New\n      dateIssued: 'تاريخ الإصدار', // New\n      certificationRequiredFields: 'يرجى ملء اسم الشهادة والجهة المصدرة وتاريخ الإصدار.', // New\n      servicesOfferedTitle: 'الخدمات التي أقدمها', // New\n      servicesOfferedDescription: 'قائمة بالخدمات التي تقدمها للعملاء.', // New\n      addService: 'إضافة خدمة', // New\n      noServicesOffered: 'لم يتم تقديم أي خدمات بعد.', // New\n      serviceName: 'اسم الخدمة', // New\n      serviceNamePlaceholder: 'مثال: تطوير مواقع ويب مخصصة', // New\n      servicePrice: 'السعر/المعدل', // New\n      servicePricePlaceholder: 'مثال: 50 دينار/ساعة، 200-500 دينار/مشروع', // New\n      serviceRequiredFields: 'يرجى ملء اسم الخدمة والسعر/المعدل.', // New\n      addSkillPlaceholder: 'مثال: React, Photoshop', // New\n      noReviewsYet: 'لا توجد مراجعات بعد',\n      noReviewsDesc: 'كن أول من يترك مراجعة لهذا المستخدم!'\n    },\n    // Public Profile\n    publicProfile: {\n      profileNotFound: 'الملف الشخصي غير موجود',\n      profileUnavailable: 'الملف الشخصي للمستخدم الذي تبحث عنه غير متاح.',\n      fetchError: 'فشل جلب الملف الشخصي للمستخدم.',\n      chatFeatureComingSoon: 'ميزة الدردشة قريباً!',\n      message: 'رسالة',\n      addReview: 'إضافة مراجعة',\n      addReviewFor: 'إضافة مراجعة لـ {{userName}}',\n      shareExperience: 'شارك تجربتك مع هذا المستخدم.',\n      yourRating: 'تقييمك',\n      yourComment: 'تعليقك',\n      commentPlaceholder: 'اكتب مراجعتك هنا...',\n      loginToAddReview: 'يرجى تسجيل الدخول لإضافة مراجعة.',\n      cannotReviewSelf: 'لا يمكنك مراجعة ملفك الشخصي.',\n      reviewRequiredFields: 'يرجى تقديم تقييم وتعليق.',\n      reviewSuccess: 'تم إرسال المراجعة بنجاح!',\n      reviewError: 'فشل إرسال المراجعة.',\n      reportUser: 'الإبلاغ عن المستخدم',\n      reportUserFor: 'الإبلاغ عن المستخدم: {{userName}}',\n      reportReasonDesc: 'يرجى تحديد سبب الإبلاغ عن هذا المستخدم. سيتم مراجعة تقريرك من قبل فريقنا.',\n      reason: 'السبب',\n      selectReason: 'اختر سبباً',\n      reasonSpam: 'محتوى غير مرغوب فيه أو مضلل',\n      reasonHarassment: 'مضايقة أو خطاب كراهية',\n      reasonFraud: 'نشاط احتيالي',\n      reasonOther: 'أخرى (يرجى التحديد في الرسالة)',\n      loginToReport: 'يرجى تسجيل الدخول للإبلاغ عن مستخدم.',\n      selectReportReason: 'يرجى تحديد سبب للإبلاغ.',\n      reportSuccess: 'تم الإبلاغ عن المستخدم بنجاح!',\n      reportError: 'فشل الإبلاغ عن المستخدم.',\n      blockUser: 'حظر المستخدم',\n      confirmBlock: 'هل أنت متأكد أنك تريد حظر {{userName}}؟ لن تتمكن بعد الآن من رؤية محتواه أو التفاعل معه.',\n      loginToBlock: 'يرجى تسجيل الدخول لحظر مستخدم.',\n      blockSuccess: 'تم حظر {{userName}}.',\n      blockError: 'فشل حظر المستخدم.'\n    },\n    // Wallet\n    wallet: {\n      title: 'محفظتي',\n      addCard: 'إضافة طريقة دفع',\n      removeCard: 'إزالة البطاقة',\n      setDefault: 'تعيين كافتراضي',\n      cardAdded: 'تمت إضافة طريقة الدفع بنجاح',\n      cardRemoved: 'تمت إزالة طريقة الدفع',\n      topUp: 'إضافة رصيد',\n      topUpSuccess: 'تمت إضافة الأموال بنجاح',\n      topUpFailed: 'فشلت إضافة الأموال',\n      insufficientFunds: 'رصيد غير كاف',\n      transactionHistory: 'سجل المعاملات',\n      noTransactions: 'لا توجد معاملات بعد',\n      cardNumber: 'رقم البطاقة',\n      expiryDate: 'تاريخ الانتهاء',\n      cvv: 'CVV',\n      cardholderName: 'اسم حامل البطاقة'\n    },\n    // Notifications\n    notifications: {\n      markAllRead: 'تحديد الكل كمقروء',\n      noNotifications: 'لا توجد إشعارات بعد',\n      noNotificationsDesc: 'سنخطرك عندما يحدث شيء',\n      justNow: 'الآن',\n      minutesAgo: 'د مضت',\n      hoursAgo: 'س مضت',\n      daysAgo: 'ي مضت',\n      highPriority: 'أولوية عالية',\n      deleteSuccess: 'تم حذف الإشعار',\n      markReadSuccess: 'تم تحديد جميع الإشعارات كمقروءة',\n      loadError: 'فشل في تحميل الإشعارات'\n    },\n    // Skill Swap Mode\n    skillSwap: {\n      paidTeaching: 'تدريس مدفوع', // New\n      sellSkill: 'بيع مهارة', // New\n      pricePerSession: 'السعر لكل جلسة', // New\n      certificateRequired: 'شهادة مطلوبة؟', // New\n      certificateUrl: 'رابط الشهادة', // New\n      confirmPurchase: 'تأكيد الشراء', // New\n      offerDetails: 'تفاصيل العرض', // New\n      skill: 'المهارة', // New\n      price: 'السعر', // New\n      yourBalance: 'رصيدك', // New\n      deductionWarning: 'بتأكيدك، سيتم خصم {{price}} دينار من محفظتك.', // New\n      insufficientFunds: 'رصيد غير كاف في محفظتك. يرجى إعادة الشحن.', // New\n      invalidPurchase: 'طلب شراء غير صالح.', // New\n      purchaseSuccess: 'تم شراء \"{{title}}\" بنجاح مقابل {{price}} دينار!', // New\n      purchaseFailed: 'فشل إتمام عملية الشراء.', // New\n      cannotPurchaseOwnSkill: 'لا يمكنك شراء عرض مهارتك الخاص.', // New\n      aiMatch: 'مطابقة بالذكاء الاصطناعي', // New\n      aiMatchDescription: 'ابحث عن تبادلات المهارات التي تتناسب بشكل أفضل مع ملفك الشخصي وأهدافك التعليمية.', // New\n      createPaidOffer: 'إنشاء عرض تدريس مدفوع', // New\n      createFreeSwap: 'إنشاء تبادل مهارات مجاني', // New\n      offerAsPaidTeaching: 'عرض كتدريس مدفوع؟', // New\n      specifySkillWanted: 'يرجى تحديد المهارة التي ترغب في تعلمها لتبادل مجاني.', // New\n      enterValidPrice: 'يرجى إدخال سعر صالح لعرض التدريس المدفوع الخاص بك.', // New\n      provideCertificateUrl: 'يرجى تقديم رابط الشهادة إذا كانت الشهادة مطلوبة.' // New\n    }\n  },\n  fr: {\n    // Landing Page\n    landing: {\n      tagline: 'L\\'avenir de l\\'économie collaborative',\n      heroTitle: 'Travaillez, Échangez et Investissez',\n      heroSubtitle: 'À partir de seulement 1 TND',\n      heroDescription: 'La plateforme d\\'économie hybride où vous pouvez embaucher des talents, échanger des compétences ou investir dans des projets locaux. Commencez avec seulement 1 TND ou 1 compétence.',\n      getStarted: 'Commencer',\n      freeToJoin: 'Inscription gratuite',\n      securePayments: 'Paiements sécurisés',\n      aiPowered: 'Correspondance par IA',\n      activeUsers: 'Utilisateurs Actifs',\n      transactionsCompleted: 'Transactions Complétées',\n      features: 'Fonctionnalités',\n      threeWays: 'Trois façons de réussir',\n      featuresDescription: 'Que vous souhaitiez gagner, apprendre ou investir, notre plateforme s\\'adapte à vos objectifs.',\n      hireTitle: 'Mode Embauche',\n      hireDescription: 'Trouvez et embauchez des professionnels qualifiés pour vos projets',\n      hireFeature1: 'Publier des offres d\\'emploi ou demandes de service',\n      hireFeature2: 'Paiements sécurisés par séquestre',\n      hireFeature3: 'Paiements intégrés en TND',\n      hireFeature4: 'Système de notation et d\\'évaluation',\n      skillSwapTitle: 'Échange de Compétences',\n      skillSwapDescription: 'Échangez vos compétences avec d\\'autres dans la communauté',\n      skillSwapFeature1: 'Échanges de compétences directs',\n      skillSwapFeature2: 'Crédits pour les échanges indirects',\n      skillSwapFeature3: 'Correspondance par IA',\n      skillSwapFeature4: 'Construisez votre réseau',\n      investTitle: 'Micro-Investissement',\n      investDescription: 'Investissez dans des projets locaux à partir de seulement 1 TND',\n      investFeature1: 'Investissement minimum de 1 TND',\n      investFeature2: 'Opportunités de partage des bénéfices',\n      investFeature3: 'Évaluation des risques par IA',\n      investFeature4: 'Focus sur les projets locaux',\n      howItWorks: 'Comment ça marche',\n      getStartedInMinutes: 'Commencez en quelques minutes',\n      simpleProcess: 'Rejoignez notre plateforme en trois étapes simples et commencez votre voyage aujourd\\'hui',\n      step1Title: 'Créez votre compte',\n      step1Description: 'Inscrivez-vous gratuitement et complétez votre profil avec vos compétences et intérêts',\n      step2Title: 'Choisissez votre mode',\n      step2Description: 'Sélectionnez si vous voulez embaucher, échanger des compétences ou investir dans des projets',\n      step3Title: 'Commencez à transiger',\n      step3Description: 'Connectez-vous avec les autres et commencez à construire votre avenir économique',\n      trustAndSafety: 'Confiance et Sécurité',\n      builtOnTrust: 'Basé sur la confiance et la sécurité',\n      safetyDescription: 'Votre sécurité est notre priorité. Nous avons construit des systèmes complets pour garantir des transactions sécurisées et des interactions de confiance.',\n      idVerification: 'Vérification d\\'identité',\n      idVerificationDesc: 'Tous les utilisateurs subissent une vérification d\\'identité',\n      secureWallet: 'Portefeuille sécurisé',\n      secureWalletDesc: 'Portefeuille multi-devises avec protection par séquestre',\n      ratingSystem: 'Système de notation',\n      ratingSystemDesc: 'Scores de confiance basés sur la communauté',\n      aiFraudDetection: 'Détection de fraude par IA',\n      aiFraudDetectionDesc: 'L\\'IA avancée surveille les activités suspectes',\n      readyToTransform: 'Prêt à transformer votre vie économique?',\n      joinThousands: 'Rejoignez des milliers de Tunisiens qui travaillent, échangent et investissent déjà dans la nouvelle économie collaborative.',\n      joinToday: 'Rejoignez Work & Invest aujourd\\'hui',\n      platform: 'Plateforme',\n      services: 'Services',\n      legal: 'Légal',\n      about: 'À propos',\n      subtitle: 'Votre plateforme d\\'économie hybride pour l\\'embauche, l\\'échange de compétences et le micro-investissement',\n      allRightsReserved: 'Tous droits réservés',\n      madeInTunisia: 'Fait avec ❤️ en Tunisie'\n    },\n    // Common\n    common: {\n      back: 'Retour',\n      next: 'Suivant',\n      skip: 'Passer',\n      finish: 'Terminer',\n      save: 'Enregistrer',\n      saving: 'Enregistrement...',\n      cancel: 'Annuler',\n      delete: 'Supprimer',\n      edit: 'Modifier',\n      close: 'Fermer',\n      add: 'Ajouter',\n      loading: 'Chargement...',\n      view: 'Voir',\n      search: 'Rechercher',\n      filter: 'Filtrer',\n      sort: 'Trier',\n      apply: 'Appliquer',\n      submit: 'Soumettre',\n      previous: 'Précédent',\n      yes: 'Oui',\n      no: 'Non',\n      confirm: 'Confirmer',\n      completed: 'Terminé',\n      pending: 'En attente',\n      active: 'Actif',\n      inactive: 'Inactif',\n      success: 'Succès',\n      error: 'Erreur',\n      warning: 'Avertissement',\n      info: 'Info',\n      backToDashboard: 'Retour au tableau de bord'\n    },\n    // Navigation\n    navigation: {\n      dashboard: 'Tableau de bord',\n      hire: 'Embaucher',\n      skillSwap: 'Échange de compétences',\n      investment: 'Investir',\n      profile: 'Profil',\n      wallet: 'Portefeuille',\n      notifications: 'Notifications',\n      settings: 'Paramètres',\n      logout: 'Se déconnecter'\n    },\n    // Onboarding\n    onboarding: {\n      welcomeTitle: 'Bienvenue sur Work & Invest!',\n      welcomeDescription: 'Configurons votre profil en quelques étapes',\n      bioTitle: 'Parlez-nous de vous',\n      bioDescription: 'Partagez une brève introduction',\n      locationTitle: 'Où êtes-vous situé?',\n      locationDescription: 'Aidez les autres à vous trouver',\n      skillsTitle: 'Quelles sont vos compétences?',\n      skillsDescription: 'Ajoutez vos principales compétences',\n      jobExperienceTitle: 'Votre Expérience Professionnelle',\n      jobExperienceDescription: 'Parlez-nous de votre parcours professionnel',\n      studyExperienceTitle: 'Votre Expérience Scolaire',\n      studyExperienceDescription: 'Partagez votre parcours éducatif',\n      welcome: 'Bienvenue',\n      letsSetup: 'Configurons votre profil pour vous aider à tirer le meilleur parti de Work & Invest',\n      benefit1: 'Soyez jumelé avec les bonnes opportunités',\n      benefit2: 'Établir la confiance avec un profil complet',\n      benefit3: 'Se démarquer dans la communauté',\n      tellUs: 'Parlez-nous de vous',\n      bioPlaceholder: 'Je suis un professionnel avec de l\\'expérience en... Je suis passionné par... Je cherche à...',\n      characters: 'caractères',\n      whereLocated: 'Où êtes-vous situé?',\n      locationPlaceholder: 'ex: Tunis, Tunisie',\n      locationHelp: 'Cela nous aide à vous connecter avec des opportunités locales',\n      addSkills: 'Ajoutez vos compétences (minimum 3 recommandées)',\n      skillsPlaceholder: 'ex: Développement Web, Design, Marketing',\n      skillsAdded: 'compétences ajoutées',\n      jobExperienceRequiredFields: 'Veuillez remplir le titre du poste, l\\'entreprise et la date de début.',\n      studyExperienceRequiredFields: 'Veuillez remplir le diplôme, l\\'établissement et la date de début.',\n      addJobExperience: 'Ajouter une expérience professionnelle',\n      addStudyExperience: 'Ajouter une formation',\n      jobTitle: 'Titre du poste',\n      jobTitlePlaceholder: 'ex: Ingénieur Logiciel',\n      company: 'Entreprise',\n      companyPlaceholder: 'ex: Tech Solutions Inc.',\n      startDate: 'Date de début',\n      endDate: 'Date de fin',\n      optional: 'Optionnel',\n      description: 'Description',\n      jobDescriptionPlaceholder: 'Responsabilités, réalisations, etc.',\n      degree: 'Diplôme/Domaine d\\'études',\n      degreePlaceholder: 'ex: Licence en Informatique',\n      institution: 'Établissement',\n      institutionPlaceholder: 'ex: Université de Tunis',\n      studyDescriptionPlaceholder: 'Cours, projets, distinctions, etc.',\n      current: 'Actuel',\n      addExperience: 'Ajouter une expérience',\n      addEducation: 'Ajouter une formation',\n      step: 'Étape',\n      of: 'de',\n      complete: 'terminé',\n      profileCompleted: 'Configuration du profil terminée!',\n      saveFailed: 'Échec de l\\'enregistrement du profil. Veuillez réessayer.'\n    },\n    // Auth\n    auth: {\n      welcome: 'Travail & Investissement',\n      description: 'Votre plateforme d\\'économie hybride pour l\\'embauche, l\\'échange de compétences et les micro-investissements',\n      login: 'Connexion',\n      register: 'S\\'inscrire',\n      email: 'Email',\n      password: 'Mot de passe',\n      confirmPassword: 'Confirmer le mot de passe',\n      fullName: 'Nom complet',\n      signIn: 'Se connecter',\n      createAccount: 'Créer un compte',\n      demoMode: 'Essayer le mode démo',\n      signingIn: 'Connexion en cours...',\n      creatingAccount: 'Création du compte...',\n      loginSuccess: 'Connexion réussie!',\n      registrationSuccess: 'Compte créé avec succès! Vous êtes maintenant connecté.',\n      demoActivated: 'Mode démo activé!',\n      passwordMismatch: 'Les mots de passe ne correspondent pas',\n      passwordTooShort: 'Le mot de passe doit contenir au moins 6 caractères',\n      fillAllFields: 'Veuillez remplir tous les champs requis',\n      forgotPassword: 'Mot de passe oublié?',\n      resetPassword: 'Réinitialiser le mot de passe',\n      resetPasswordDesc: 'Entrez votre adresse email et nous vous enverrons un lien pour réinitialiser votre mot de passe.',\n      emailAddress: 'Adresse email',\n      sendResetLink: 'Envoyer le lien de réinitialisation',\n      sending: 'Envoi...',\n      resetLinkSent: 'Lien de réinitialisation envoyé à',\n      resetLinkError: 'Échec de l\\'envoi de l\\'email de réinitialisation',\n      passwordStrength: 'Force du mot de passe',\n      weak: 'Faible',\n      medium: 'Moyen',\n      strong: 'Fort',\n      passwordRequirements: 'Recommandations du mot de passe:',\n      minLength: 'Au moins 6 caractères (requis)',\n      hasUppercase: 'Au moins une lettre majuscule (recommandé)',\n      hasLowercase: 'Au moins une lettre minuscule (recommandé)',\n      hasNumber: 'Au moins un chiffre (recommandé)',\n      emailVerification: 'Vérification de l\\'email',\n      emailNotVerified: 'Email non vérifié',\n      resendVerification: 'Renvoyer l\\'email de vérification',\n      verificationSent: 'Email de vérification envoyé',\n      verificationError: 'Échec de l\\'envoi de l\\'email de vérification',\n      loginFailed: 'Échec de la connexion. Veuillez vérifier vos informations d\\'identification.',\n      registrationFailed: 'Échec de l\\'inscription. Veuillez réessayer.',\n      wrongPassword: 'Mot de passe incorrect. Réessayez ou réinitialisez votre mot de passe.',\n      noAccountFound: 'Aucun compte trouvé avec cet email. Veuillez vous inscrire.',\n      invalidEmail: 'Entrez un email valide.',\n      developerTools: 'Outils de développement',\n      hideDeveloperTools: 'Masquer les outils de développement',\n      showDeveloperTools: 'Afficher les outils de développement',\n      cleanupWarning: 'Attention: Cela supprimera TOUS les comptes utilisateurs et les données. Utilisez uniquement pour les tests.',\n      resetDatabase: 'Réinitialiser la base de données (Supprimer toutes les données)',\n      cleaning: 'Nettoyage...',\n      emailExistsHint: 'Utilisez ceci si vous voyez des erreurs \"l\\'email existe déjà\"',\n      secureAuthentication: 'Authentification sécurisée',\n      multiLanguage: 'Multi-langue'\n    },\n    // Dashboard\n    dashboard: {\n      welcomeBack: 'Bon retour',\n      subtitle: 'Voici ce qui se passe avec votre travail, vos échanges et vos investissements.',\n      loadingData: 'Chargement de vos dernières données...',\n      totalBalance: 'Solde total',\n      money: 'Argent',\n      skillCredits: 'Crédits de compétences',\n      userRating: 'Évaluation utilisateur',\n      quickActions: 'Actions rapides',\n      quickActionsDesc: 'Commencez à gagner, apprendre ou investir',\n      postJob: 'Publier un emploi',\n      postJobDesc: 'Trouvez des professionnels qualifiés',\n      offerSkills: 'Offrir des compétences',\n      offerSkillsDesc: 'Échangez votre expertise',\n      browseInvestments: 'Parcourir les investissements',\n      browseInvestmentsDesc: 'Découvrez les projets locaux',\n      portfolioSummary: 'Résumé du portefeuille',\n      cashBalance: 'Solde de trésorerie',\n      equityValue: 'Valeur des actions',\n      viewDetailedWallet: 'Voir le portefeuille détaillé',\n      recentActivity: 'Activité récente',\n      recentActivityDesc: 'Vos dernières transactions et interactions',\n      noRecentActivity: 'Aucune activité récente',\n      noActivityDesc: 'Commencez par publier un emploi, offrir des compétences ou faire un investissement!',\n      viewAllActivity: 'Voir toute l\\'activité',\n      aiRecommendations: 'Recommandations IA',\n      aiRecommendationsDesc: 'Opportunités personnalisées basées sur votre profil',\n      activeJobPostings: 'Offres d\\'emploi actives',\n      browseJobsDesc: 'Parcourez les projets disponibles et les opportunités freelance',\n      skillExchangeOffers: 'Offres d\\'échange de compétences',\n      exchangeSkillsDesc: 'Échangez vos compétences avec d\\'autres professionnels',\n      investmentOpportunities: 'Opportunités d\\'investissement',\n      discoverProjectsDesc: 'Découvrez les projets locaux cherchant des micro-investissements',\n      browse: 'Parcourir',\n      explore: 'Explorer',\n      invest: 'Investir',\n      justNow: 'À l\\'instant',\n      hoursAgo: 'heures écoulées',\n      daysAgo: 'jours écoulés',\n      completed: 'terminé',\n      pending: 'en attente',\n      active: 'actif'\n    },\n    // Settings\n    settings: {\n      title: 'Paramètres',\n      language: 'Langue',\n      theme: 'Thème',\n      lightMode: 'Mode clair',\n      darkMode: 'Mode sombre',\n      systemMode: 'Système',\n      notifications: 'Notifications',\n      emailNotifications: 'Notifications par email',\n      pushNotifications: 'Notifications push',\n      privacy: 'Confidentialité',\n      account: 'Compte',\n      support: 'Support',\n      about: 'À propos',\n      selectLanguage: 'Sélectionner la langue',\n      selectTheme: 'Sélectionner le thème',\n      emailNotificationsDesc: 'Recevoir des notifications par email',\n      pushNotificationsDesc: 'Recevoir des notifications du navigateur',\n      marketing: 'Communications marketing',\n      marketingDesc: 'Recevoir des mises à jour sur les nouvelles fonctionnalités',\n      editProfile: 'Modifier le profil',\n      paymentSecurity: 'Paiement et sécurité',\n      helpCenter: 'Centre d\\'aide',\n      contactSupport: 'Contacter le support',\n      dangerZone: 'Zone dangereuse',\n      dangerZoneDesc: 'Actions irréversibles pour votre compte',\n      signOut: 'Se déconnecter',\n      appDescription: 'Votre plateforme d\\'économie hybride pour l\\'embauche, l\\'échange de compétences et les micro-investissements.',\n      version: 'Version 1.0.0',\n      beta: 'Bêta',\n      tunisia: 'Tunisie',\n      accountPreferences: 'Gérer vos préférences de compte et paramètres d\\'application',\n      supportHelp: 'Support et aide',\n      aboutAppTitle: 'À propos de Work & Invest',\n      helpCenterSoon: 'Centre d\\'aide bientôt disponible!',\n      contactSupportSoon: 'Fonctionnalité de contact support bientôt disponible!'\n    },\n    // Profile\n    profile: {\n      editProfile: 'Modifier le profil',\n      saveChanges: 'Enregistrer les modifications',\n      unsavedChanges: 'Vous avez des modifications non enregistrées. Voulez-vous vraiment quitter?',\n      bioLimit: 'caractères restants',\n      uploadPhoto: 'Télécharger une photo',\n      changePhoto: 'Changer la photo',\n      username: 'Nom d\\'utilisateur',\n      usernameTaken: 'Nom d\\'utilisateur déjà pris',\n      usernameAvailable: 'Nom d\\'utilisateur disponible',\n      fullName: 'Nom complet',\n      bio: 'Biographie',\n      phone: 'Numéro de téléphone',\n      location: 'Emplacement',\n      skills: 'Compétences',\n      addSkill: 'Ajouter une compétence',\n      removeSkill: 'Supprimer la compétence',\n      bioTooLong: 'La biographie doit contenir moins de {{limit}} caractères',\n      saveChangesSuccess: 'Modifications du profil enregistrées avec succès!',\n      saveChangesError: 'Échec de l\\'enregistrement des modifications du profil.',\n      addYourSkills: 'Ajoutez vos compétences',\n      jobExperienceTitle: 'Expérience Professionnelle',\n      studyExperienceTitle: 'Expérience Scolaire',\n      addExperience: 'Ajouter une expérience',\n      addEducation: 'Ajouter une formation',\n      noJobExperience: 'Aucune expérience professionnelle ajoutée pour le moment.',\n      noStudyExperience: 'Aucune expérience scolaire ajoutée pour le moment.',\n      certificationsTitle: 'Certifications', // New\n      certificationsDescription: 'Présentez vos certifications et réalisations professionnelles.', // New\n      addCertification: 'Ajouter une certification', // New\n      noCertifications: 'Aucune certification ajoutée pour le moment.', // New\n      certificationName: 'Nom de la certification', // New\n      certificationNamePlaceholder: 'ex: Certificat de gestion de projet Google', // New\n      issuer: 'Émetteur', // New\n      issuerPlaceholder: 'ex: Google, Coursera', // New\n      dateIssued: 'Date d\\'émission', // New\n      certificationRequiredFields: 'Veuillez remplir le nom de la certification, l\\'émetteur et la date d\\'émission.', // New\n      servicesOfferedTitle: 'Services que j\\'offre', // New\n      servicesOfferedDescription: 'Listez les services que vous proposez à vos clients.', // New\n      addService: 'Ajouter un service', // New\n      noServicesOffered: 'Aucun service proposé pour le moment.', // New\n      serviceName: 'Nom du service', // New\n      serviceNamePlaceholder: 'ex: Développement Web personnalisé', // New\n      servicePrice: 'Prix/Tarif', // New\n      servicePricePlaceholder: 'ex: 50 TND/heure, 200-500 TND/projet', // New\n      serviceRequiredFields: 'Veuillez remplir le nom du service et le prix/tarif.', // New\n      addSkillPlaceholder: 'ex: React, Photoshop', // New\n      noReviewsYet: 'Aucun avis pour le moment',\n      noReviewsDesc: 'Soyez le premier à laisser un avis pour cet utilisateur!'\n    },\n    // Public Profile\n    publicProfile: {\n      profileNotFound: 'Profil introuvable',\n      profileUnavailable: 'Le profil utilisateur que vous recherchez n\\'est pas disponible.',\n      fetchError: 'Échec de la récupération du profil utilisateur.',\n      chatFeatureComingSoon: 'Fonctionnalité de chat bientôt disponible!',\n      message: 'Message',\n      addReview: 'Ajouter un avis',\n      addReviewFor: 'Ajouter un avis pour {{userName}}',\n      shareExperience: 'Partagez votre expérience avec cet utilisateur.',\n      yourRating: 'Votre note',\n      yourComment: 'Votre commentaire',\n      commentPlaceholder: 'Écrivez votre avis ici...',\n      loginToAddReview: 'Veuillez vous connecter pour ajouter un avis.',\n      cannotReviewSelf: 'Vous ne pouvez pas évaluer votre propre profil.',\n      reviewRequiredFields: 'Veuillez fournir une note et un commentaire.',\n      reviewSuccess: 'Avis soumis avec succès!',\n      reviewError: 'Échec de la soumission de l\\'avis.',\n      reportUser: 'Signaler l\\'utilisateur',\n      reportUserFor: 'Signaler l\\'utilisateur : {{userName}}',\n      reportReasonDesc: 'Veuillez sélectionner une raison pour signaler cet utilisateur. Votre rapport sera examiné par notre équipe.',\n      reason: 'Raison',\n      selectReason: 'Sélectionner une raison',\n      reasonSpam: 'Contenu indésirable ou trompeur',\n      reasonHarassment: 'Harcèlement ou discours haineux',\n      reasonFraud: 'Activité frauduleuse',\n      reasonOther: 'Autre (veuillez préciser dans le message)',\n      loginToReport: 'Veuillez vous connecter pour signaler un utilisateur.',\n      selectReportReason: 'Veuillez sélectionner une raison pour le signalement.',\n      reportSuccess: 'Utilisateur signalé avec succès!',\n      reportError: 'Échec du signalement de l\\'utilisateur.',\n      blockUser: 'Bloquer l\\'utilisateur',\n      confirmBlock: 'Êtes-vous sûr de vouloir bloquer {{userName}} ? Vous ne verrez plus son contenu et ne pourrez plus interagir avec lui.',\n      loginToBlock: 'Veuillez vous connecter pour bloquer un utilisateur.',\n      blockSuccess: '{{userName}} a été bloqué.',\n      blockError: 'Échec du blocage de l\\'utilisateur.'\n    },\n    // Wallet\n    wallet: {\n      title: 'Mon portefeuille',\n      addCard: 'Ajouter un moyen de paiement',\n      removeCard: 'Supprimer la carte',\n      setDefault: 'Définir par défaut',\n      cardAdded: 'Moyen de paiement ajouté avec succès',\n      cardRemoved: 'Moyen de paiement supprimé',\n      topUp: 'Recharger',\n      topUpSuccess: 'Fonds ajoutés avec succès',\n      topUpFailed: 'Échec de l\\'ajout de fonds',\n      insufficientFunds: 'Fonds insuffisants',\n      transactionHistory: 'Historique des transactions',\n      noTransactions: 'Aucune transaction pour le moment',\n      cardNumber: 'Numéro de carte',\n      expiryDate: 'Date d\\'expiration',\n      cvv: 'CVV',\n      cardholderName: 'Nom du titulaire'\n    },\n    // Notifications\n    notifications: {\n      markAllRead: 'Tout marquer comme lu',\n      noNotifications: 'Aucune notification',\n      noNotificationsDesc: 'Nous vous avertirons quand quelque chose se passe',\n      justNow: 'À l\\'instant',\n      minutesAgo: 'min',\n      hoursAgo: 'h',\n      daysAgo: 'j',\n      highPriority: 'Priorité élevée',\n      deleteSuccess: 'Notification supprimée',\n      markReadSuccess: 'Toutes les notifications marquées comme lues',\n      loadError: 'Échec du chargement des notifications'\n    },\n    // Skill Swap Mode\n    skillSwap: {\n      paidTeaching: 'Enseignement payant', // New\n      sellSkill: 'Vendre une compétence', // New\n      pricePerSession: 'Prix par session', // New\n      certificateRequired: 'Certificat requis?', // New\n      certificateUrl: 'URL du certificat', // New\n      confirmPurchase: 'Confirmer l\\'achat', // New\n      offerDetails: 'Détails de l\\'offre', // New\n      skill: 'Compétence', // New\n      price: 'Prix', // New\n      yourBalance: 'Votre solde', // New\n      deductionWarning: 'En confirmant, {{price}} TND seront déduits de votre portefeuille.', // New\n      insufficientFunds: 'Fonds insuffisants dans votre portefeuille. Veuillez recharger.', // New\n      invalidPurchase: 'Demande d\\'achat invalide.', // New\n      purchaseSuccess: 'Achat de \"{{title}}\" réussi pour {{price}} TND!', // New\n      purchaseFailed: 'Échec de l\\'achat.', // New\n      cannotPurchaseOwnSkill: 'Vous ne pouvez pas acheter votre propre offre de compétence.', // New\n      aiMatch: 'Correspondance IA', // New\n      aiMatchDescription: 'Trouvez les échanges de compétences qui correspondent le mieux à votre profil et à vos objectifs d\\'apprentissage.', // New\n      createPaidOffer: 'Créer une offre d\\'enseignement payant', // New\n      createFreeSwap: 'Créer un échange de compétences gratuit', // New\n      offerAsPaidTeaching: 'Proposer comme enseignement payant?', // New\n      specifySkillWanted: 'Veuillez spécifier une compétence que vous souhaitez apprendre pour un échange gratuit.', // New\n      enterValidPrice: 'Veuillez entrer un prix valide pour votre offre d\\'enseignement payant.', // New\n      provideCertificateUrl: 'Veuillez fournir une URL de certificat si un certificat est requis.' // New\n    }\n  }\n};\n\ninterface I18nContextType {\n  language: Language;\n  setLanguage: (lang: Language) => void;\n  t: (key: string, options?: { [key: string]: string | number }) => string;\n  dir: 'ltr' | 'rtl';\n}\n\nconst I18nContext = createContext<I18nContextType | undefined>(undefined);\n\nexport const useI18n = () => {\n  const context = useContext(I18nContext);\n  if (!context) {\n    throw new Error('useI18n must be used within an I18nProvider');\n  }\n  return context;\n};\n\nconst getNestedTranslation = (obj: TranslationData, path: string, options?: { [key: string]: string | number }): string => {\n  const keys = path.split('.');\n  let current: any = obj;\n  \n  for (const key of keys) {\n    if (current && typeof current === 'object' && key in current) {\n      current = current[key];\n    } else {\n      return path; // Return the key if translation not found\n    }\n  }\n  \n  let translatedString = typeof current === 'string' ? current : path;\n\n  // Replace placeholders if options are provided\n  if (options) {\n    for (const [key, value] of Object.entries(options)) {\n      translatedString = translatedString.replace(`{{${key}}}`, String(value));\n    }\n  }\n\n  return translatedString;\n};\n\ninterface I18nProviderProps {\n  children: ReactNode;\n}\n\nexport const I18nProvider: React.FC<I18nProviderProps> = ({ children }) => {\n  const [language, setLanguage] = useState<Language>(() => {\n    const saved = localStorage.getItem('language') as Language;\n    return saved || 'en';\n  });\n\n  const t = (key: string, options?: { [key: string]: string | number }): string => {\n    return getNestedTranslation(translations[language], key, options);\n  };\n\n  const handleSetLanguage = (lang: Language) => {\n    setLanguage(lang);\n    localStorage.setItem('language', lang);\n    document.documentElement.lang = lang;\n    document.documentElement.dir = lang === 'ar' ? 'rtl' : 'ltr';\n  };\n\n  const dir = language === 'ar' ? 'rtl' : 'ltr';\n\n  // Set initial direction\n  React.useEffect(() => {\n    document.documentElement.lang = language;\n    document.documentElement.dir = dir;\n  }, [language, dir]);\n\n  const contextValue: I18nContextType = {\n    language,\n    setLanguage: handleSetLanguage,\n    t,\n    dir\n  };\n\n  return (\n    <I18nContext.Provider value={contextValue}>\n      {children}\n    </I18nContext.Provider>\n  );\n};","import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\n\nexport type Theme = 'light' | 'dark' | 'system';\n\ninterface ThemeContextType {\n  theme: Theme;\n  setTheme: (theme: Theme) => void;\n  actualTheme: 'light' | 'dark';\n}\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n\ninterface ThemeProviderProps {\n  children: ReactNode;\n}\n\nexport const ThemeProvider: React.FC<ThemeProviderProps> = ({ children }) => {\n  const [theme, setTheme] = useState<Theme>(() => {\n    const saved = localStorage.getItem('theme') as Theme;\n    return saved || 'system';\n  });\n\n  const [actualTheme, setActualTheme] = useState<'light' | 'dark'>('light');\n\n  const handleSetTheme = (newTheme: Theme) => {\n    setTheme(newTheme);\n    localStorage.setItem('theme', newTheme);\n  };\n\n  useEffect(() => {\n    const updateTheme = () => {\n      let effectiveTheme: 'light' | 'dark';\n\n      if (theme === 'system') {\n        effectiveTheme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n      } else {\n        effectiveTheme = theme as 'light' | 'dark';\n      }\n\n      setActualTheme(effectiveTheme);\n\n      // Update document class\n      const root = document.documentElement;\n      root.classList.remove('light', 'dark');\n      root.classList.add(effectiveTheme);\n    };\n\n    updateTheme();\n\n    // Listen for system theme changes\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    const handleChange = () => {\n      if (theme === 'system') {\n        updateTheme();\n      }\n    };\n\n    mediaQuery.addEventListener('change', handleChange);\n    return () => mediaQuery.removeEventListener('change', handleChange);\n  }, [theme]);\n\n  const contextValue: ThemeContextType = {\n    theme,\n    setTheme: handleSetTheme,\n    actualTheme\n  };\n\n  return (\n    <ThemeContext.Provider value={contextValue}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};","import { mockBackend } from './api'; // Import mockBackend from api.tsx\n\n/**\n * Cleanup utility to reset the database (local storage in mock mode)\n * This is useful for testing and development\n * WARNING: This will delete ALL user data from your browser's local storage!\n */\nexport async function cleanupDatabase() {\n  try {\n    console.log('Starting local storage cleanup...');\n    \n    mockBackend.clearAllData();\n    \n    console.log('Local storage cleanup completed.');\n    // Simulate a successful response with counts\n    return {\n      success: true,\n      message: \"Local storage cleaned successfully\",\n      removed: {\n        auth: 'all',\n        users: 'all',\n        wallets: 'all',\n        jobs: 'all',\n        skills: 'all',\n        projects: 'all',\n        transactions: 'all',\n        notifications: 'all',\n      }\n    };\n  } catch (error) {\n    console.error('Error during local storage cleanup:', error);\n    throw error;\n  }\n}\n\n// Make it available globally for console access\nif (typeof window !== 'undefined') {\n  (window as any).cleanupDatabase = cleanupDatabase;\n}","import React, { useState, createContext, useContext, useEffect, Suspense } from 'react';\n// Lazy-load larger route components to improve initial bundle size\nconst LandingPage = React.lazy(() => import('./components/LandingPage').then(m => ({ default: m.LandingPage })));\nconst AuthForm = React.lazy(() => import('./components/AuthForm').then(m => ({ default: m.AuthForm })));\nconst ProfileOnboarding = React.lazy(() => import('./components/ProfileOnboarding').then(m => ({ default: m.ProfileOnboarding })));\nconst Dashboard = React.lazy(() => import('./components/Dashboard').then(m => ({ default: m.Dashboard })));\nconst HireMode = React.lazy(() => import('./components/HireMode').then(m => ({ default: m.HireMode })));\nconst SkillSwapMode = React.lazy(() => import('./components/SkillSwapMode').then(m => ({ default: m.SkillSwapMode })));\nconst InvestmentMode = React.lazy(() => import('./components/InvestmentMode').then(m => ({ default: m.InvestmentMode })));\nconst Profile = React.lazy(() => import('./components/Profile').then(m => ({ default: m.Profile })));\nconst Wallet = React.lazy(() => import('./components/WalletSimple').then(m => ({ default: m.WalletSimple })));\nconst Settings = React.lazy(() => import('./components/Settings').then(m => ({ default: m.Settings })));\nconst PublicProfile = React.lazy(() => import('./components/PublicProfile').then(m => ({ default: m.PublicProfile })));\nimport { Toaster } from './components/ui/sonner';\nimport { UserProfile, Wallet as WalletType, userApi, walletApi, mockBackend, authApi } from './utils/api'; // Import mockBackend and authApi\nimport { I18nProvider } from './utils/i18n';\nimport { ThemeProvider } from './utils/theme';\nimport './utils/cleanup'; // Import cleanup utility for console access\nimport { toast } from 'sonner'; // Import toast for demo mode feedback\n\nexport type PageType = 'landing' | 'auth' | 'dashboard' | 'hire' | 'skillswap' | 'investment' | 'profile' | 'wallet' | 'settings' | 'publicProfile'; // Added publicProfile\n\n// User Context\ninterface UserContextType {\n  user: UserProfile | null;\n  wallet: WalletType | null;\n  setUser: (user: UserProfile | null) => void;\n  setWallet: (wallet: WalletType | null) => void;\n  refreshWallet: () => Promise<void>;\n}\n\nconst UserContext = createContext<UserContextType | undefined>(undefined);\n\nexport const useUser = () => {\n  const context = useContext(UserContext);\n  if (context === undefined) {\n    throw new Error('useUser must be used within a UserProvider');\n  }\n  return context;\n};\n\nexport default function App() {\n  const [currentPage, setCurrentPage] = useState<PageType>('landing');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [user, setUser] = useState<UserProfile | null>(null);\n  const [wallet, setWallet] = useState<WalletType | null>(null);\n  const [showOnboarding, setShowOnboarding] = useState(false);\n  const [newUserData, setNewUserData] = useState<{ userId: string; name: string; email: string } | null>(null);\n  const [authMode, setAuthMode] = useState<'login' | 'register'>('login');\n  const [publicProfileUserId, setPublicProfileUserId] = useState<string | null>(null); // State for public profile\n\n  // Initialize mock backend data on first load\n  useEffect(() => {\n    mockBackend.setInitialData();\n  }, []);\n\n  const refreshWallet = async () => {\n    if (user) {\n      try {\n        const response = await walletApi.getWallet(user.id);\n        setWallet(response.wallet);\n      } catch (error) {\n        console.error('Failed to refresh wallet:', error);\n      }\n    }\n  };\n\n  const handleAuthSuccess = async (userData: { userId: string; name: string; email: string }, isNewUser: boolean = false) => {\n    // If new user, show onboarding\n    if (isNewUser) {\n      setNewUserData(userData);\n      setShowOnboarding(true);\n      return;\n    }\n    \n    try {\n      // Get or create user profile\n      let userProfile: UserProfile;\n      \n      try {\n        const getResponse = await userApi.getProfile(userData.userId);\n        userProfile = getResponse.profile;\n      } catch (getError) {\n        // Profile not found for existing user, attempt to create default profile\n        const createResponse = await userApi.createProfile({\n          id: userData.userId,\n          name: userData.name,\n          email: userData.email,\n          bio: 'Welcome to Work & Invest!',\n          skills: [],\n          location: '',\n          onboardingCompleted: true // For existing users who might not have completed onboarding, assume complete for now\n        });\n        \n        if (createResponse.success) {\n          userProfile = createResponse.profile;\n        } else {\n          throw new Error('Failed to create profile for existing user');\n        }\n      }\n\n      // Get wallet data\n      const walletResponse = await walletApi.getWallet(userData.userId);\n      const walletData = walletResponse.wallet;\n      \n      setUser(userProfile);\n      setWallet(walletData);\n      setIsLoggedIn(true);\n      setCurrentPage('dashboard');\n      \n    } catch (error) {\n      console.error('Error loading user data after auth success:', error);\n      \n      // Fallback to basic profile if backend fails\n      const fallbackProfile: UserProfile = {\n        id: userData.userId,\n        name: userData.name,\n        email: userData.email,\n        bio: 'Welcome to Work & Invest!',\n        skills: [],\n        location: '',\n        avatar: '',\n        rating: 0,\n        completedJobs: 0,\n        totalEarnings: 0,\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n      };\n      \n      const fallbackWallet: WalletType = { money: 50, credits: 100, equity: 0 };\n      \n      setUser(fallbackProfile);\n      setWallet(fallbackWallet);\n      setIsLoggedIn(true);\n      setCurrentPage('dashboard');\n    }\n  };\n\n  const handleLogout = () => {\n    setIsLoggedIn(false);\n    setUser(null);\n    setWallet(null);\n    setCurrentPage('landing');\n  };\n\n  const navigateTo = (page: PageType, userId?: string) => {\n    if (page === 'landing') {\n      handleLogout();\n    } else if (page === 'publicProfile' && userId) {\n      setPublicProfileUserId(userId);\n      setCurrentPage('publicProfile');\n    } else {\n      setPublicProfileUserId(null); // Clear public profile ID if navigating elsewhere\n      setCurrentPage(page);\n    }\n  };\n\n  const userContextValue: UserContextType = {\n    user,\n    wallet,\n    setUser,\n    setWallet,\n    refreshWallet\n  };\n\n  const handleOnboardingComplete = async () => {\n    if (!newUserData) {\n      console.error('Onboarding completed but newUserData is null.');\n      return;\n    }\n    \n    setShowOnboarding(false);\n    // Now proceed with normal auth flow, marking onboarding as complete\n    await handleAuthSuccess(newUserData, false);\n  };\n\n  const handleOnboardingSkip = async () => {\n    if (!newUserData) {\n      console.error('Onboarding skipped but newUserData is null.');\n      return;\n    }\n    \n    setShowOnboarding(false);\n    // Proceed with normal auth flow even if skipped\n    await handleAuthSuccess(newUserData, false);\n  };\n\n  const renderCurrentPage = () => {\n    if (currentPage === 'publicProfile' && publicProfileUserId) {\n      return <PublicProfile userId={publicProfileUserId} onNavigate={navigateTo} />;\n    }\n    switch (currentPage) {\n      case 'dashboard':\n        return <Dashboard onNavigate={navigateTo} onLogout={handleLogout} />;\n      case 'hire':\n        return <HireMode onNavigate={navigateTo} />;\n      case 'skillswap':\n        return <SkillSwapMode onNavigate={navigateTo} />;\n      case 'investment':\n        return <InvestmentMode onNavigate={navigateTo} />;\n      case 'profile':\n        return <Profile onNavigate={navigateTo} />;\n      case 'wallet':\n        return <Wallet onNavigate={navigateTo} />;\n      case 'settings':\n        return <Settings onNavigate={navigateTo} onLogout={handleLogout} />;\n      default:\n        return <Dashboard onNavigate={navigateTo} onLogout={handleLogout} />;\n    }\n  };\n\n  return (\n    <ThemeProvider>\n      <I18nProvider>\n        <UserContext.Provider value={userContextValue}>\n          <Toaster richColors position=\"top-right\" expand={true} />\n          <div className=\"min-h-screen bg-background\">\n            {showOnboarding && newUserData ? (\n              <ProfileOnboarding\n                userId={newUserData.userId}\n                userName={newUserData.name}\n                userEmail={newUserData.email}\n                onComplete={handleOnboardingComplete}\n                onSkip={handleOnboardingSkip}\n              />\n            ) : !isLoggedIn ? (\n              currentPage === 'landing' ? (\n                <LandingPage \n                  onGetStarted={() => {\n                    setAuthMode('register');\n                    setCurrentPage('auth');\n                  }} \n                  onSignIn={() => {\n                    setAuthMode('login');\n                    setCurrentPage('auth');\n                  }} \n                />\n              ) : ( // currentPage === 'auth'\n                <AuthForm \n                  onSuccess={handleAuthSuccess}\n                  onBack={() => setCurrentPage('landing')}\n                  defaultTab={authMode}\n                />\n              )\n            ) : (\n              renderCurrentPage()\n            )}\n          </div>\n        </UserContext.Provider>\n      </I18nProvider>\n    </ThemeProvider>\n  );\n}","import React from 'react';\n\ninterface ErrorBoundaryState {\n  hasError: boolean;\n  error: Error | null;\n}\n\nexport class ErrorBoundary extends React.Component<React.PropsWithChildren<{}>, ErrorBoundaryState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = { hasError: false, error: null };\n  }\n\n  static getDerivedStateFromError(error: Error) {\n    return { hasError: true, error };\n  }\n\n  componentDidCatch(error: Error, info: any) {\n    console.error('Unhandled error caught by ErrorBoundary:', error, info);\n    try {\n      localStorage.setItem('lastClientError', JSON.stringify({ message: error.message, stack: error.stack, info }));\n    } catch (e) {\n      // ignore\n    }\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div className=\"min-h-screen flex items-center justify-center bg-red-50 p-6\">\n          <div className=\"max-w-2xl w-full bg-white border rounded-lg p-6\">\n            <h2 className=\"text-xl font-bold text-red-600 mb-2\">An unexpected error occurred</h2>\n            <p className=\"text-sm text-muted-foreground mb-4\">The app encountered an error. Details are shown below and saved to localStorage (key: lastClientError).</p>\n            <pre className=\"text-xs bg-gray-100 p-3 rounded overflow-auto\" style={{ whiteSpace: 'pre-wrap' }}>\n              {this.state.error?.message}\n              {this.state.error?.stack && <>\n                {'\\n\\n'}\n                {this.state.error?.stack}\n              </>}\n            </pre>\n            <div className=\"mt-4 flex gap-2 justify-end\">\n              <button className=\"px-3 py-2 bg-red-600 text-white rounded\" onClick={() => location.reload()}>Reload</button>\n            </div>\n          </div>\n        </div>\n      );\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","\n  import { createRoot } from \"react-dom/client\";\n  import App from \"./App.tsx\";\n  import \"./index.css\";\n  import ErrorBoundary from './components/ErrorBoundary';\n\n  createRoot(document.getElementById(\"root\")!).render(\n    <ErrorBoundary>\n      <App />\n    </ErrorBoundary>\n  );\n  "],"file":"assets/index-BR7N1bNZ.js"}