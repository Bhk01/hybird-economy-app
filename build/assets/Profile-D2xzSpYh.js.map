{"version":3,"file":"Profile-D2xzSpYh.js","sources":["../../src/components/ui/alert-dialog.tsx","../../src/components/Profile.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog@1.1.6\";\n\nimport { cn } from \"./utils\";\nimport { buttonVariants } from \"./button\";\n\nfunction AlertDialog({\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Root>) {\n  return <AlertDialogPrimitive.Root data-slot=\"alert-dialog\" {...props} />;\n}\n\nfunction AlertDialogTrigger({\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Trigger>) {\n  return (\n    <AlertDialogPrimitive.Trigger data-slot=\"alert-dialog-trigger\" {...props} />\n  );\n}\n\nfunction AlertDialogPortal({\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Portal>) {\n  return (\n    <AlertDialogPrimitive.Portal data-slot=\"alert-dialog-portal\" {...props} />\n  );\n}\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => {\n  return (\n    <AlertDialogPrimitive.Overlay\n      ref={ref}\n      data-slot=\"alert-dialog-overlay\"\n      className={cn(\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\n        className,\n      )}\n      {...props}\n    />\n  );\n});\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName;\n\nfunction AlertDialogContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Content>) {\n  return (\n    <AlertDialogPortal>\n      <AlertDialogOverlay />\n      <AlertDialogPrimitive.Content\n        data-slot=\"alert-dialog-content\"\n        className={cn(\n          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg\",\n          className,\n        )}\n        {...props}\n      />\n    </AlertDialogPortal>\n  );\n}\n\nfunction AlertDialogHeader({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-dialog-header\"\n      className={cn(\"flex flex-col gap-2 text-center sm:text-left\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction AlertDialogFooter({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-dialog-footer\"\n      className={cn(\n        \"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction AlertDialogTitle({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Title>) {\n  return (\n    <AlertDialogPrimitive.Title\n      data-slot=\"alert-dialog-title\"\n      className={cn(\"text-lg font-semibold\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction AlertDialogDescription({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Description>) {\n  return (\n    <AlertDialogPrimitive.Description\n      data-slot=\"alert-dialog-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction AlertDialogAction({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Action>) {\n  return (\n    <AlertDialogPrimitive.Action\n      className={cn(buttonVariants(), className)}\n      {...props}\n    />\n  );\n}\n\nfunction AlertDialogCancel({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Cancel>) {\n  return (\n    <AlertDialogPrimitive.Cancel\n      className={cn(buttonVariants({ variant: \"outline\" }), className)}\n      {...props}\n    />\n  );\n}\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n};\n","import React, { useState, useEffect } from 'react';\nimport { Navigation } from './Navigation';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from './ui/card';\nimport { Button } from './ui/button';\nimport { Badge } from './ui/badge';\nimport { Input } from './ui/input';\nimport { Textarea } from './ui/textarea';\nimport { Label } from './ui/label';\nimport { Avatar, AvatarFallback, AvatarImage } from './ui/avatar';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from './ui/tabs';\nimport { Progress } from './ui/progress';\nimport { AlertDialog, AlertDialogAction, AlertDialogCancel, AlertDialogContent, AlertDialogDescription, AlertDialogFooter, AlertDialogHeader, AlertDialogTitle } from './ui/alert-dialog';\nimport { toast } from 'sonner';\nimport { \n  User,\n  Star,\n  MapPin,\n  Calendar,\n  Phone,\n  Mail,\n  Edit,\n  Shield,\n  Award,\n  TrendingUp,\n  Users,\n  RefreshCw,\n  CheckCircle,\n  Upload,\n  Plus,\n  X,\n  Camera,\n  FileText,\n  ExternalLink,\n  Loader2,\n  AlertCircle,\n  Check,\n  Briefcase,\n  GraduationCap,\n  DollarSign\n} from 'lucide-react';\nimport { Trash } from 'lucide-react';\nimport { PageType, useUser } from '../App';\nimport { useI18n } from '../utils/i18n';\nimport { userApi, Certification, Service, JobExperience, StudyExperience, Review } from '../utils/api';\n\ninterface ProfileProps {\n  onNavigate: (page: PageType) => void;\n}\n\nexport function Profile({ onNavigate }: ProfileProps) {\n  const { user, wallet, setUser } = useUser();\n  const { t } = useI18n();\n  const handleLogout = () => {\n    onNavigate('landing');\n  };\n  const [activeTab, setActiveTab] = useState<'overview' | 'portfolio' | 'reviews' | 'settings'>('overview');\n  const [isEditing, setIsEditing] = useState(false);\n  const [hasUnsavedChanges, setHasUnsavedChanges] = useState(false);\n  const [showUnsavedDialog, setShowUnsavedDialog] = useState(false);\n  const [pendingTab, setPendingTab] = useState<string | null>(null);\n  const [checkingUsername, setCheckingUsername] = useState(false);\n  const [usernameAvailable, setUsernameAvailable] = useState<boolean | null>(null);\n  const [showAddProject, setShowAddProject] = useState(false);\n  const [newProject, setNewProject] = useState({ title: '', link: '', tags: '', description: '', media: '' });\n  \n  // Editable form state\n  const [editedData, setEditedData] = useState({\n    name: '',\n    username: '',\n    bio: '',\n    email: '',\n    phone: '',\n    location: '',\n    avatar: '',\n    skills: [] as string[],\n    jobExperiences: [] as JobExperience[],\n    studyExperiences: [] as StudyExperience[],\n    certifications: [] as Certification[],\n    servicesOffered: [] as Service[],\n    reviews: [] as Review[], // Added reviews to editedData\n    portfolio: [] as any[]\n  });\n  \n  const [originalData, setOriginalData] = useState({ ...editedData });\n  \n  // Initialize editable fields when user data changes\n  useEffect(() => {\n    if (user) {\n      const initialData = {\n        name: user.name || 'User',\n        username: user.email?.split('@')[0] || 'user',\n        bio: user.bio || 'Welcome to Work & Invest! I\\'m excited to collaborate with talented professionals.',\n        email: user.email || '',\n        phone: '+216 XX XXX XXX', // Placeholder, as phone is not in UserProfile\n        location: user.location || 'Tunisia',\n        avatar: user.avatar || '',\n        skills: user.skills || [],\n        jobExperiences: user.jobExperiences || [],\n        studyExperiences: user.studyExperiences || [],\n        certifications: user.certifications || [],\n        servicesOffered: user.servicesOffered || [],\n        reviews: user.reviews || [], // Initialize reviews\n        portfolio: user.portfolio || []\n      };\n      setEditedData(initialData);\n      setOriginalData(initialData);\n    }\n  }, [user]);\n\n  // Check for unsaved changes\n  useEffect(() => {\n    const hasChanges = JSON.stringify(editedData) !== JSON.stringify(originalData);\n    setHasUnsavedChanges(hasChanges);\n  }, [editedData, originalData]);\n\n  // Use actual user data from context\n  const profileData = {\n    name: editedData.name,\n    title: 'Work & Invest Member',\n    location: editedData.location,\n    joinedDate: user?.createdAt ? new Date(user.createdAt).toLocaleDateString('en-US', { month: 'long', year: 'numeric' }) : 'Recently',\n    rating: user?.rating || 0, // Dynamically set from user context\n    reviewCount: user?.reviews?.length || 0, // Dynamically set from user context\n    completedJobs: user?.completedJobs || 0, // Dynamically set from user context\n    activeProjects: 0, // Set to 0 for new users, would be dynamic from jobs/projects API\n    skillCredits: wallet?.credits || 0, // Dynamically set from wallet context\n    totalEarnings: user?.totalEarnings || 0, // Dynamically set from user context\n    bio: editedData.bio,\n    phone: editedData.phone,\n    email: editedData.email,\n    verified: true,\n    responseTime: '< 2 hours'\n  };\n\n  const BIO_LIMIT = 1000;\n  const bioCharsRemaining = BIO_LIMIT - editedData.bio.length;\n\n  // Check username availability\n  const checkUsernameAvailability = async (username: string) => {\n    if (username === originalData.username) {\n      setUsernameAvailable(null);\n      return;\n    }\n    \n    setCheckingUsername(true);\n    // Simulate API call\n    await new Promise(resolve => setTimeout(resolve, 500));\n    // Simple validation - in real app, check against database\n    const isTaken = ['admin', 'user', 'test'].includes(username.toLowerCase());\n    setUsernameAvailable(!isTaken);\n    setCheckingUsername(false);\n  };\n\n  useEffect(() => {\n    if (editedData.username && editedData.username.length >= 3) {\n      const timeout = setTimeout(() => {\n        checkUsernameAvailability(editedData.username);\n      }, 500);\n      return () => clearTimeout(timeout);\n    } else {\n      setUsernameAvailable(null);\n    }\n  }, [editedData.username]);\n\n  const handleSaveChanges = async () => {\n    if (editedData.bio.length > BIO_LIMIT) {\n      toast.error(t('profile.bioTooLong', { limit: BIO_LIMIT }));\n      return;\n    }\n\n    if (usernameAvailable === false) {\n      toast.error(t('profile.usernameTaken'));\n      return;\n    }\n\n    try {\n      const updatedProfile = await userApi.updateProfile(user!.id, {\n        name: editedData.name,\n        // username: editedData.username, // Username update logic would be more complex in a real app\n        bio: editedData.bio,\n        // email: editedData.email, // Email update usually requires re-verification\n        location: editedData.location,\n        // avatar: editedData.avatar,\n        skills: editedData.skills,\n        jobExperiences: editedData.jobExperiences,\n        studyExperiences: editedData.studyExperiences,\n        certifications: editedData.certifications,\n        servicesOffered: editedData.servicesOffered,\n        reviews: editedData.reviews // Save reviews\n        ,\n        portfolio: editedData.portfolio // persist portfolio when saving\n      });\n      setUser(updatedProfile.profile); // Update user context\n      setOriginalData({\n        name: updatedProfile.profile.name || '',\n  username: updatedProfile.profile.email ? updatedProfile.profile.email.split('@')[0] : '',\n        bio: updatedProfile.profile.bio || '',\n        email: updatedProfile.profile.email || '',\n        phone: (updatedProfile.profile as any).phone || '',\n        location: updatedProfile.profile.location || '',\n        avatar: updatedProfile.profile.avatar || '',\n        skills: updatedProfile.profile.skills || [],\n        jobExperiences: updatedProfile.profile.jobExperiences || [],\n        studyExperiences: updatedProfile.profile.studyExperiences || [],\n        certifications: updatedProfile.profile.certifications || [],\n        servicesOffered: updatedProfile.profile.servicesOffered || [],\n        reviews: updatedProfile.profile.reviews || [],\n        portfolio: updatedProfile.profile.portfolio || []\n      });\n      setHasUnsavedChanges(false);\n      setIsEditing(false);\n      toast.success(t('profile.saveChangesSuccess'));\n    } catch (error) {\n      console.error('Failed to save profile changes:', error);\n      toast.error(t('profile.saveChangesError'));\n    }\n  };\n\n  const handleCancelEditing = () => {\n    if (hasUnsavedChanges) {\n      setShowUnsavedDialog(true);\n    } else {\n      setEditedData({ ...originalData });\n      setIsEditing(false);\n    }\n  };\n\n  const confirmCancelEditing = () => {\n    setEditedData({ ...originalData });\n    setHasUnsavedChanges(false);\n    setIsEditing(false);\n    setShowUnsavedDialog(false);\n  };\n\n  const handleTabChange = (newTab: string) => {\n    if (hasUnsavedChanges && isEditing) {\n      setPendingTab(newTab);\n      setShowUnsavedDialog(true);\n    } else {\n      setActiveTab(newTab as any);\n    }\n  };\n\n  const confirmTabChange = () => {\n    setEditedData({ ...originalData });\n    setHasUnsavedChanges(false);\n    setIsEditing(false);\n    if (pendingTab) {\n      setActiveTab(pendingTab as any);\n      setPendingTab(null);\n    }\n    setShowUnsavedDialog(false);\n  };\n\n  const handlePhotoUpload = () => {\n    // In a real app, this would open a file picker and handle upload\n    toast.info('Photo upload coming soon! This would open a file picker with crop and compression options.');\n  };\n\n  // Add/Remove Skill\n  const [currentSkillInput, setCurrentSkillInput] = useState('');\n  const handleAddSkill = () => {\n    if (currentSkillInput.trim() && !editedData.skills.includes(currentSkillInput.trim())) {\n      setEditedData((prev: typeof editedData) => ({ ...prev, skills: [...prev.skills, currentSkillInput.trim()] }));\n      setCurrentSkillInput('');\n    }\n  };\n  const handleRemoveSkill = (skillToRemove: string) => {\n    setEditedData((prev: typeof editedData) => ({ ...prev, skills: prev.skills.filter((s: string) => s !== skillToRemove) }));\n  };\n\n  // Add/Remove Job Experience\n  const [newJobExp, setNewJobExp] = useState<Omit<JobExperience, 'id'>>({ title: '', company: '', startDate: '', endDate: null, description: '' });\n  const handleAddJobExperience = () => {\n    if (newJobExp.title && newJobExp.company && newJobExp.startDate) {\n      setEditedData((prev: typeof editedData) => ({ ...prev, jobExperiences: [...prev.jobExperiences, { ...newJobExp, id: generateId() }] }));\n      setNewJobExp({ title: '', company: '', startDate: '', endDate: null, description: '' });\n    } else {\n      toast.error(t('onboarding.jobExperienceRequiredFields'));\n    }\n  };\n  const handleRemoveJobExperience = (id: string) => {\n    setEditedData((prev: typeof editedData) => ({ ...prev, jobExperiences: prev.jobExperiences.filter((exp: JobExperience) => exp.id !== id) }));\n  };\n\n  // Add/Remove Study Experience\n  const [newStudyExp, setNewStudyExp] = useState<Omit<StudyExperience, 'id'>>({ degree: '', institution: '', startDate: '', endDate: null, description: '' });\n  const handleAddStudyExperience = () => {\n    if (newStudyExp.degree && newStudyExp.institution && newStudyExp.startDate) {\n      setEditedData((prev: typeof editedData) => ({ ...prev, studyExperiences: [...prev.studyExperiences, { ...newStudyExp, id: generateId() }] }));\n      setNewStudyExp({ degree: '', institution: '', startDate: '', endDate: null, description: '' });\n    } else {\n      toast.error(t('onboarding.studyExperienceRequiredFields'));\n    }\n  };\n  const handleRemoveStudyExperience = (id: string) => {\n    setEditedData((prev: typeof editedData) => ({ ...prev, studyExperiences: prev.studyExperiences.filter((exp: StudyExperience) => exp.id !== id) }));\n  };\n\n  // Add/Remove Certification\n  const [newCert, setNewCert] = useState<Omit<Certification, 'id'>>({ name: '', issuer: '', date: '' });\n  const handleAddCertification = () => {\n    if (newCert.name && newCert.issuer && newCert.date) {\n      setEditedData((prev: typeof editedData) => ({ ...prev, certifications: [...prev.certifications, { ...newCert, id: generateId() }] }));\n      setNewCert({ name: '', issuer: '', date: '' });\n    } else {\n      toast.error(t('profile.certificationRequiredFields'));\n    }\n  };\n  const handleRemoveCertification = (id: string) => {\n    setEditedData((prev: typeof editedData) => ({ ...prev, certifications: prev.certifications.filter((cert: Certification) => cert.id !== id) }));\n  };\n\n  // Add/Remove Service\n  const [newService, setNewService] = useState<Omit<Service, 'id'>>({ name: '', price: '', rating: 0 });\n  const handleAddService = () => {\n    if (newService.name && newService.price) {\n      setEditedData((prev: typeof editedData) => ({ ...prev, servicesOffered: [...prev.servicesOffered, { ...newService, id: generateId() }] }));\n      setNewService({ name: '', price: '', rating: 0 });\n    } else {\n      toast.error(t('profile.serviceRequiredFields'));\n    }\n  };\n  const handleRemoveService = (id: string) => {\n    setEditedData((prev: typeof editedData) => ({ ...prev, servicesOffered: prev.servicesOffered.filter((service: Service) => service.id !== id) }));\n  };\n\n  // Helper to generate unique IDs (mocked for frontend)\n  function generateId() {\n    return Math.random().toString(36).substr(2, 9);\n  }\n\n  // Portfolio: add new project (single consolidated handler)\n  const handleAddProject = async () => {\n    if (!newProject.title.trim()) {\n      toast.error('Please provide a project title');\n      return;\n    }\n    const project = {\n      id: generateId(),\n      title: newProject.title,\n      description: newProject.description,\n      tags: newProject.tags ? newProject.tags.split(',').map(t => t.trim()).filter(Boolean) : [],\n      link: newProject.link || undefined,\n      media: newProject.media || null,\n      createdAt: new Date().toISOString()\n    };\n\n    try {\n      const updatedPortfolio = [...(user?.portfolio || []), project];\n      const response = await userApi.updateProfile(user!.id, { portfolio: updatedPortfolio });\n      if (response && response.profile) {\n        setUser(response.profile);\n        // also keep local editedData in sync\n        setEditedData(prev => ({ ...prev, portfolio: response.profile.portfolio || updatedPortfolio }));\n        setShowAddProject(false);\n        setNewProject({ title: '', link: '', tags: '', description: '', media: '' });\n        toast.success('Project added to portfolio');\n      } else {\n        throw new Error('Failed to update profile');\n      }\n    } catch (err: any) {\n      console.error('Failed to add project:', err);\n      toast.error('Failed to add project');\n    }\n  };\n\n  // Clear/Reset flow with confirmation and backend call\n  const [showResetConfirm, setShowResetConfirm] = useState(false);\n  const handleResetProfile = () => setShowResetConfirm(true);\n  const confirmResetProfile = async () => {\n    setShowResetConfirm(false);\n    if (!user) return;\n    try {\n      const res = await userApi.resetProfile(user.id);\n      if (res && res.profile) {\n        setUser(res.profile);\n        setEditedData({\n          name: res.profile.name || '',\n          username: res.profile.username || '',\n          bio: res.profile.bio || '',\n          email: res.profile.email || '',\n          phone: res.profile.phone || '',\n          location: res.profile.location || '',\n          avatar: res.profile.avatar || '',\n          skills: res.profile.skills || [],\n          jobExperiences: res.profile.jobExperiences || [],\n          studyExperiences: res.profile.studyExperiences || [],\n          certifications: res.profile.certifications || [],\n          servicesOffered: res.profile.servicesOffered || [],\n          reviews: res.profile.reviews || [],\n          portfolio: res.profile.portfolio || []\n        });\n        setOriginalData({ ...editedData });\n        toast.success('Profile reset successful');\n      } else {\n        toast.error('Failed to reset profile');\n      }\n    } catch (err) {\n      console.error('Reset profile failed', err);\n      toast.error('Failed to reset profile');\n    }\n  };\n\n  // Project delete confirmation\n  const [projectToDelete, setProjectToDelete] = useState<string | null>(null);\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\n\n  const confirmDeleteProject = async () => {\n    if (!user || !projectToDelete) return;\n    try {\n      const updated = (user?.portfolio || []).filter((pp: any) => pp.id !== projectToDelete);\n      const resp = await userApi.updateProfile(user!.id, { portfolio: updated });\n      if (resp && resp.profile) {\n        setUser(resp.profile);\n        setEditedData(prev => ({ ...prev, portfolio: resp.profile.portfolio || updated }));\n        toast.success('Project removed');\n      } else {\n        throw new Error('Failed to remove project');\n      }\n    } catch (err) {\n      console.error('Failed to remove project', err);\n      toast.error('Failed to remove project');\n    } finally {\n      setShowDeleteConfirm(false);\n      setProjectToDelete(null);\n    }\n  };\n\n  // Add a dedicated flow for new users to configure their profile\n  useEffect(() => {\n    if (user && !user.bio && !user.skills?.length) {\n      setIsEditing(true);\n      toast.info('Please complete your profile setup.');\n    }\n  }, [user]);\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Navigation currentPage=\"profile\" onNavigate={onNavigate} onLogout={handleLogout} />\n      \n      <div className=\"container mx-auto px-4 py-6\">\n        <Tabs value={activeTab} onValueChange={handleTabChange}>\n          <div className=\"flex flex-col lg:flex-row gap-6\">\n            {/* Profile Sidebar */}\n            <div className=\"lg:w-80\">\n              <Card className=\"sticky top-24\">\n                <CardContent className=\"p-6\">\n                  {/* Profile Header */}\n                  <div className=\"text-center mb-6\">\n                    <div className=\"relative inline-block\">\n                      <Avatar className=\"h-24 w-24 mx-auto mb-3\">\n                        <AvatarFallback className=\"text-2xl\">\n                          {user ? user.name.split(' ').map(n => n[0]).join('').toUpperCase() : 'U'}\n                        </AvatarFallback>\n                        {editedData.avatar && <AvatarImage src={editedData.avatar} />}\n                      </Avatar>\n                      <Button\n                        size=\"sm\"\n                        variant=\"outline\"\n                        className=\"absolute -bottom-1 -right-1 h-8 w-8 rounded-full p-0\"\n                        onClick={handlePhotoUpload}\n                        title={t('profile.changePhoto')}\n                      >\n                        <Camera className=\"h-4 w-4\" />\n                      </Button>\n                    </div>\n                    <div className=\"flex items-center justify-center gap-2 mb-1\">\n                      <h2 className=\"text-xl\">{profileData.name}</h2>\n                      {profileData.verified && (\n                        <CheckCircle className=\"h-5 w-5 text-blue-500\" />\n                      )}\n                    </div>\n                    <p className=\"text-muted-foreground text-sm mb-2\">{profileData.title}</p>\n                    <div className=\"flex items-center justify-center gap-2 text-sm text-muted-foreground mb-3\">\n                      <MapPin className=\"h-4 w-4\" />\n                      {profileData.location}\n                    </div>\n                    <div className=\"flex items-center justify-center gap-2 mb-4\">\n                      <Star className=\"h-4 w-4 fill-current text-yellow-500\" />\n                      <span>{profileData.rating.toFixed(1)}</span> {/* Use dynamic rating */}\n                      <span className=\"text-muted-foreground\">({profileData.reviewCount} reviews)</span>\n                    </div>\n                    <div className=\"flex gap-2\">\n                      <Button \n                        variant={isEditing ? \"outline\" : \"default\"}\n                        size=\"sm\" \n                        onClick={() => isEditing ? handleCancelEditing() : setIsEditing(true)}\n                        className=\"gap-2 flex-1\"\n                      >\n                        {isEditing ? (\n                          <>\n                            <X className=\"h-4 w-4\" />\n                            {t('common.cancel')}\n                          </>\n                        ) : (\n                          <>\n                            <Edit className=\"h-4 w-4\" />\n                            {t('profile.editProfile')}\n                          </>\n                        )}\n                      </Button>\n                      {isEditing && (\n                        <Button \n                          size=\"sm\" \n                          onClick={handleSaveChanges}\n                          disabled={!hasUnsavedChanges || checkingUsername || usernameAvailable === false}\n                          className=\"gap-2 flex-1\"\n                        >\n                          <Check className=\"h-4 w-4\" />\n                          {t('common.save')}\n                        </Button>\n                      )}\n                    </div>\n                  </div>\n\n                  {/* Quick Stats */}\n                  <div className=\"grid grid-cols-2 gap-4 mb-6\">\n                    <div className=\"text-center\">\n                      <p className=\"text-2xl text-primary\">{profileData.completedJobs}</p>\n                      <p className=\"text-xs text-muted-foreground\">Completed Jobs</p>\n                    </div>\n                    <div className=\"text-center\">\n                      <p className=\"text-2xl text-green-500\">{profileData.totalEarnings}</p>\n                      <p className=\"text-xs text-muted-foreground\">Total Earnings (TND)</p>\n                    </div>\n                    <div className=\"text-center\">\n                      <p className=\"text-2xl text-blue-500\">{profileData.activeProjects}</p>\n                      <p className=\"text-xs text-muted-foreground\">Active Projects</p>\n                    </div>\n                    <div className=\"text-center\">\n                      <p className=\"text-2xl text-purple-500\">{profileData.skillCredits}</p>\n                      <p className=\"text-xs text-muted-foreground\">Skill Credits</p>\n                    </div>\n                  </div>\n\n                  {/* Contact Info */}\n                  <div className=\"space-y-2 text-sm\">\n                    <div className=\"flex items-center gap-2\">\n                      <Mail className=\"h-4 w-4 text-muted-foreground\" />\n                      <span>{profileData.email}</span>\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                      <Phone className=\"h-4 w-4 text-muted-foreground\" />\n                      <span>{profileData.phone}</span>\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                      <Calendar className=\"h-4 w-4 text-muted-foreground\" />\n                      <span>Joined {profileData.joinedDate}</span>\n                    </div>\n                  </div>\n\n                  {/* Navigation Tabs */}\n                  <TabsList className=\"grid w-full grid-cols-2 mt-6\">\n                    <TabsTrigger value=\"overview\" className=\"text-xs\">Overview</TabsTrigger>\n                    <TabsTrigger value=\"portfolio\" className=\"text-xs\">Portfolio</TabsTrigger>\n                  </TabsList>\n                  <TabsList className=\"grid w-full grid-cols-2 mt-2\">\n                    <TabsTrigger value=\"reviews\" className=\"text-xs\">Reviews</TabsTrigger>\n                    <TabsTrigger value=\"settings\" className=\"text-xs\">Settings</TabsTrigger>\n                  </TabsList>\n                </CardContent>\n              </Card>\n            </div>\n\n            {/* Main Content */}\n            <div className=\"flex-1\">\n              <TabsContent value=\"overview\" className=\"space-y-6\">\n                {/* Bio Section */}\n                <Card>\n                  <CardHeader>\n                    <CardTitle>About Me</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    {isEditing ? (\n                      <div className=\"space-y-2\">\n                        <Textarea\n                          value={editedData.bio}\n                          onChange={(e) => {\n                            if (e.target.value.length <= BIO_LIMIT) {\n                              setEditedData({ ...editedData, bio: e.target.value });\n                            }\n                          }}\n                          rows={6}\n                          placeholder=\"Tell people about yourself, your experience, and what you're passionate about...\"\n                          className={bioCharsRemaining < 0 ? 'border-red-500' : ''}\n                        />\n                        <div className=\"flex justify-between text-xs\">\n                          <span className={bioCharsRemaining < 100 ? 'text-orange-500' : 'text-muted-foreground'}>\n                            {bioCharsRemaining} {t('profile.bioLimit')}\n                          </span>\n                          <span className=\"text-muted-foreground\">\n                            {editedData.bio.length} / {BIO_LIMIT}\n                          </span>\n                        </div>\n                      </div>\n                    ) : (\n                      <p className=\"text-muted-foreground whitespace-pre-wrap\">{profileData.bio}</p>\n                    )}\n                  </CardContent>\n                </Card>\n\n                {/* Skills Section */}\n                <Card>\n                  <CardHeader>\n                    <div className=\"flex items-center justify-between\">\n                      <CardTitle>Skills & Expertise</CardTitle>\n                      {isEditing && (\n                        <div className=\"flex gap-2\">\n                          <Input\n                            placeholder={t('profile.addSkillPlaceholder')}\n                            value={currentSkillInput}\n                            onChange={(e) => setCurrentSkillInput(e.target.value)}\n                            onKeyPress={(e) => e.key === 'Enter' && (e.preventDefault(), handleAddSkill())}\n                            className=\"h-8 w-40\"\n                          />\n                          <Button size=\"sm\" onClick={handleAddSkill} className=\"gap-2\">\n                            <Plus className=\"h-4 w-4\" />\n                            {t('common.add')}\n                          </Button>\n                        </div>\n                      )}\n                    </div>\n                  </CardHeader>\n                  <CardContent className=\"space-y-4\">\n                    {editedData.skills.length === 0 ? (\n                      <p className=\"text-muted-foreground text-sm\">{t('profile.noSkillsAdded')}</p>\n                    ) : (\n                      <div className=\"flex flex-wrap gap-2\">\n                        {editedData.skills.map((skill, index) => (\n                          <Badge key={index} variant=\"secondary\" className=\"text-sm\">\n                            {skill}\n                            {isEditing && (\n                              <button\n                                onClick={() => handleRemoveSkill(skill)}\n                                className=\"ml-1 text-muted-foreground hover:text-destructive\"\n                              >\n                                <X className=\"h-3 w-3\" />\n                              </button>\n                            )}\n                          </Badge>\n                        ))}\n                      </div>\n                    )}\n                  </CardContent>\n                </Card>\n\n                {/* Job Experiences */}\n                <Card>\n                  <CardHeader>\n                    <div className=\"flex items-center justify-between\">\n                      <CardTitle>{t('profile.jobExperienceTitle')}</CardTitle>\n                      {isEditing && (\n                        <Button size=\"sm\" variant=\"outline\" className=\"gap-2\" onClick={handleAddJobExperience}>\n                          <Plus className=\"h-4 w-4\" />\n                          {t('profile.addExperience')}\n                        </Button>\n                      )}\n                    </div>\n                  </CardHeader>\n                  <CardContent className=\"space-y-4\">\n                    {editedData.jobExperiences.length === 0 ? (\n                      <p className=\"text-muted-foreground text-sm\">{t('profile.noJobExperience')}</p>\n                    ) : (\n                      editedData.jobExperiences.map((exp) => (\n                        <div key={exp.id} className=\"flex items-start gap-3 p-3 border rounded-lg\">\n                          <Briefcase className=\"h-5 w-5 text-primary flex-shrink-0 mt-1\" />\n                          <div className=\"flex-1\">\n                            <h4 className=\"text-sm font-medium\">{exp.title} at {exp.company}</h4>\n                            <p className=\"text-xs text-muted-foreground\">\n                              {exp.startDate} - {exp.endDate || t('onboarding.current')}\n                            </p>\n                            {exp.description && <p className=\"text-sm text-muted-foreground mt-1\">{exp.description}</p>}\n                          </div>\n                          {isEditing && (\n                            <Button size=\"sm\" variant=\"ghost\" className=\"h-6 w-6 p-0\" onClick={() => handleRemoveJobExperience(exp.id)}>\n                              <X className=\"h-3 w-3 text-destructive\" />\n                            </Button>\n                          )}\n                        </div>\n                      ))\n                    )}\n                  </CardContent>\n                </Card>\n\n                {/* Study Experiences */}\n                <Card>\n                  <CardHeader>\n                    <div className=\"flex items-center justify-between\">\n                      <CardTitle>{t('profile.studyExperienceTitle')}</CardTitle>\n                      {isEditing && (\n                        <Button size=\"sm\" variant=\"outline\" className=\"gap-2\" onClick={handleAddStudyExperience}>\n                          <Plus className=\"h-4 w-4\" />\n                          {t('profile.addEducation')}\n                        </Button>\n                      )}\n                    </div>\n                  </CardHeader>\n                  <CardContent className=\"space-y-4\">\n                    {editedData.studyExperiences.length === 0 ? (\n                      <p className=\"text-muted-foreground text-sm\">{t('profile.noStudyExperience')}</p>\n                    ) : (\n                      editedData.studyExperiences.map((exp) => (\n                        <div key={exp.id} className=\"flex items-start gap-3 p-3 border rounded-lg\">\n                          <GraduationCap className=\"h-5 w-5 text-primary flex-shrink-0 mt-1\" />\n                          <div className=\"flex-1\">\n                            <h4 className=\"text-sm font-medium\">{exp.degree} at {exp.institution}</h4>\n                            <p className=\"text-xs text-muted-foreground\">\n                              {exp.startDate} - {exp.endDate || t('onboarding.current')}\n                            </p>\n                            {exp.description && <p className=\"text-sm text-muted-foreground mt-1\">{exp.description}</p>}\n                          </div>\n                          {isEditing && (\n                            <Button size=\"sm\" variant=\"ghost\" className=\"h-6 w-6 p-0\" onClick={() => handleRemoveStudyExperience(exp.id)}>\n                              <X className=\"h-3 w-3 text-destructive\" />\n                            </Button>\n                          )}\n                        </div>\n                      ))\n                    )}\n                  </CardContent>\n                </Card>\n\n                {/* Services Offered */}\n                <Card>\n                  <CardHeader>\n                    <div className=\"flex items-center justify-between\">\n                      <CardTitle>{t('profile.servicesOfferedTitle')}</CardTitle>\n                      {isEditing && (\n                        <Button size=\"sm\" variant=\"outline\" className=\"gap-2\" onClick={handleAddService}>\n                          <Plus className=\"h-4 w-4\" />\n                          {t('profile.addService')}\n                        </Button>\n                      )}\n                    </div>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"grid gap-4\">\n                      {editedData.servicesOffered.length === 0 ? (\n                        <p className=\"text-muted-foreground text-sm\">{t('profile.noServicesOffered')}</p>\n                      ) : (\n                        editedData.servicesOffered.map((service) => (\n                          <div key={service.id} className=\"flex items-center justify-between p-3 border rounded-lg\">\n                            <div>\n                              <h4 className=\"text-sm\">{service.name}</h4>\n                              <p className=\"text-xs text-muted-foreground\">{service.price}</p>\n                            </div>\n                            <div className=\"flex items-center gap-2\">\n                              <div className=\"flex items-center gap-1\">\n                                <Star className=\"h-3 w-3 fill-current text-yellow-500\" />\n                                <span className=\"text-xs\">{service.rating.toFixed(1)}</span>\n                              </div>\n                              {isEditing && (\n                                <Button size=\"sm\" variant=\"ghost\" className=\"h-6 w-6 p-0\" onClick={() => handleRemoveService(service.id)}>\n                                  <X className=\"h-3 w-3 text-destructive\" />\n                                </Button>\n                              )}\n                            </div>\n                          </div>\n                        ))\n                      )}\n                    </div>\n                  </CardContent>\n                </Card>\n\n                {/* Certifications */}\n                <Card>\n                  <CardHeader>\n                    <div className=\"flex items-center justify-between\">\n                      <CardTitle>{t('profile.certificationsTitle')}</CardTitle>\n                      {isEditing && (\n                        <Button size=\"sm\" variant=\"outline\" className=\"gap-2\" onClick={handleAddCertification}>\n                          <Plus className=\"h-4 w-4\" />\n                          {t('profile.addCertification')}\n                        </Button>\n                      )}\n                    </div>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"space-y-3\">\n                      {editedData.certifications.length === 0 ? (\n                        <p className=\"text-muted-foreground text-sm\">{t('profile.noCertifications')}</p>\n                      ) : (\n                        editedData.certifications.map((cert) => (\n                          <div key={cert.id} className=\"flex items-center gap-3 p-3 border rounded-lg\">\n                            <Award className=\"h-5 w-5 text-primary\" />\n                            <div className=\"flex-1\">\n                              <h4 className=\"text-sm\">{cert.name}</h4>\n                              <p className=\"text-xs text-muted-foreground\">{cert.issuer} • {cert.date}</p>\n                            </div>\n                            {isEditing && (\n                              <Button size=\"sm\" variant=\"ghost\" className=\"h-6 w-6 p-0\" onClick={() => handleRemoveCertification(cert.id)}>\n                                <X className=\"h-3 w-3\" />\n                              </Button>\n                            )}\n                          </div>\n                        ))\n                      )}\n                    </div>\n                  </CardContent>\n                </Card>\n              </TabsContent>\n\n              <TabsContent value=\"portfolio\" className=\"space-y-6\">\n                <Card>\n                  <CardHeader>\n                    <div className=\"flex items-center justify-between\">\n                      <CardTitle>My Portfolio</CardTitle>\n                      <Button size=\"sm\" variant=\"outline\" className=\"gap-2\" onClick={() => setShowAddProject(true)}>\n                        <Plus className=\"h-4 w-4\" />\n                        Add Project\n                      </Button>\n                    </div>\n                    <CardDescription>\n                      Showcase your best work and achievements\n                    </CardDescription>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"grid md:grid-cols-2 gap-6\">\n                      {user?.portfolio && user.portfolio.length > 0 ? (\n                        user.portfolio.map((p) => (\n                          <Card key={p.id} className=\"overflow-hidden\">\n                            <div className=\"aspect-video bg-muted flex items-center justify-center\">\n                              {p.media ? <img src={p.media} alt={p.title} className=\"object-cover w-full h-full\" /> : <FileText className=\"h-8 w-8 text-muted-foreground\" />}\n                            </div>\n                            <CardContent className=\"p-4\">\n                              <div className=\"flex items-start justify-between mb-2\">\n                                <h4 className=\"text-sm\">{p.title}</h4>\n                                <div className=\"flex gap-2\">\n                                    {p.link && (\n                                      <Button size=\"sm\" variant=\"ghost\" className=\"h-6 w-6 p-0\" asChild>\n                                        <a href={p.link} target=\"_blank\" rel=\"noreferrer\"><ExternalLink className=\"h-3 w-3\" /></a>\n                                      </Button>\n                                    )}\n                                    {isEditing && (\n                                      <Button size=\"sm\" variant=\"ghost\" className=\"h-6 w-6 p-0\" onClick={() => {\n                                        setProjectToDelete(p.id);\n                                        setShowDeleteConfirm(true);\n                                      }}>\n                                        <Trash className=\"h-3 w-3 text-destructive\" />\n                                      </Button>\n                                    )}\n                                </div>\n                              </div>\n                              {p.tags && p.tags.length > 0 && (\n                                <div className=\"mb-2\">\n                                  {p.tags.map((tag) => (\n                                    <Badge key={tag} variant=\"outline\" className=\"text-xs mr-1\">{tag}</Badge>\n                                  ))}\n                                </div>\n                              )}\n                              <p className=\"text-xs text-muted-foreground mb-3\">\n                                {p.description}\n                              </p>\n                            </CardContent>\n                          </Card>\n                        ))\n                      ) : (\n                        <div className=\"text-center py-8 text-muted-foreground col-span-2\">\n                          <FileText className=\"h-12 w-12 mx-auto mb-4\" />\n                          <p>{t('profile.noPortfolio')}</p>\n                          <p className=\"text-sm mt-2\">{t('profile.noPortfolioDesc')}</p>\n                        </div>\n                      )}\n                    </div>\n                  </CardContent>\n                </Card>\n\n                {/* Add Project Modal/Form */}\n                {showAddProject && (\n                  <Card className=\"p-4\">\n                    <CardHeader>\n                      <CardTitle>Add Portfolio Project</CardTitle>\n                      <CardDescription>Describe your project and add a link or media.</CardDescription>\n                    </CardHeader>\n                    <CardContent>\n                      <div className=\"space-y-3\">\n                        <Input placeholder=\"Project title\" value={newProject.title} onChange={(e) => setNewProject({...newProject, title: e.target.value})} />\n                        <Input placeholder=\"Link (optional)\" value={newProject.link} onChange={(e) => setNewProject({...newProject, link: e.target.value})} />\n                        <Input placeholder=\"Tags (comma separated)\" value={newProject.tags} onChange={(e) => setNewProject({...newProject, tags: e.target.value})} />\n                        <Textarea placeholder=\"Short description\" value={newProject.description} onChange={(e) => setNewProject({...newProject, description: e.target.value})} rows={4} />\n                        <div className=\"flex gap-2 justify-end\">\n                          <Button variant=\"outline\" onClick={() => setShowAddProject(false)}>Cancel</Button>\n                          <Button onClick={handleAddProject}>Add Project</Button>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                )}\n              </TabsContent>\n\n              <TabsContent value=\"reviews\" className=\"space-y-6\">\n                <Card>\n                  <CardHeader>\n                    <CardTitle>Reviews & Feedback</CardTitle>\n                    <CardDescription>\n                      What clients say about working with me\n                    </CardDescription>\n                  </CardHeader>\n                  <CardContent className=\"space-y-4\">\n                    {editedData.reviews.length === 0 ? (\n                      <div className=\"text-center py-8 text-muted-foreground\">\n                        <Star className=\"h-8 w-8 mx-auto mb-2 opacity-50\" />\n                        <p>{t('profile.noReviewsYet')}</p>\n                        <p className=\"text-sm\">{t('profile.noReviewsDesc')}</p>\n                      </div>\n                    ) : (\n                      editedData.reviews.map((review) => (\n                        <div key={review.id} className=\"border rounded-lg p-4\">\n                          <div className=\"flex items-start gap-3\">\n                            <Avatar className=\"h-10 w-10\">\n                              <AvatarFallback>{review.reviewerId.substring(0,2).toUpperCase()}</AvatarFallback>\n                            </Avatar>\n                            <div className=\"flex-1\">\n                              <div className=\"flex items-center justify-between mb-2\">\n                                <div>\n                                  <h4 className=\"text-sm\">User {review.reviewerId.substring(0,8)}</h4>\n                                  <p className=\"text-xs text-muted-foreground\">Reviewed on {new Date(review.createdAt).toLocaleDateString()}</p>\n                                </div>\n                                <div className=\"text-right\">\n                                  <div className=\"flex items-center gap-1 mb-1\">\n                                    {Array.from({ length: review.rating }).map((_, i) => (\n                                      <Star key={i} className=\"h-3 w-3 fill-current text-yellow-500\" />\n                                    ))}\n                                    {Array.from({ length: 5 - review.rating }).map((_, i) => (\n                                      <Star key={i} className=\"h-3 w-3 text-muted-foreground\" />\n                                    ))}\n                                  </div>\n                                </div>\n                              </div>\n                              <p className=\"text-sm text-muted-foreground\">{review.comment}</p>\n                            </div>\n                          </div>\n                        </div>\n                      ))\n                    )}\n                  </CardContent>\n                </Card>\n              </TabsContent>\n\n              <TabsContent value=\"settings\" className=\"space-y-6\">\n                <Card>\n                  <CardHeader>\n                    <CardTitle>Account Settings</CardTitle>\n                    <CardDescription>\n                      Manage your account preferences and security\n                    </CardDescription>\n                  </CardHeader>\n                  <CardContent className=\"space-y-6\">\n                    <div className=\"space-y-4\">\n                      <div>\n                        <Label htmlFor=\"name\">{t('profile.fullName')}</Label>\n                        <Input \n                          id=\"name\" \n                          value={editedData.name} \n                          onChange={(e) => setEditedData({ ...editedData, name: e.target.value })}\n                          disabled={!isEditing}\n                        />\n                      </div>\n                      <div>\n                        <Label htmlFor=\"username\">{t('profile.username')}</Label>\n                        <div className=\"relative\">\n                          <Input \n                            id=\"username\" \n                            value={editedData.username}\n                            onChange={(e) => setEditedData({ ...editedData, username: e.target.value })}\n                            disabled={!isEditing}\n                            className={\n                              isEditing && editedData.username !== originalData.username\n                                ? usernameAvailable === true ? 'border-green-500' : usernameAvailable === false ? 'border-red-500' : ''\n                                : ''\n                            }\n                          />\n                          {isEditing && editedData.username && editedData.username !== originalData.username && (\n                            <div className=\"absolute right-3 top-1/2 -translate-y-1/2\">\n                              {checkingUsername ? (\n                                <Loader2 className=\"h-4 w-4 animate-spin text-muted-foreground\" />\n                              ) : usernameAvailable === true ? (\n                                <Check className=\"h-4 w-4 text-green-500\" />\n                              ) : usernameAvailable === false ? (\n                                <AlertCircle className=\"h-4 w-4 text-red-500\" />\n                              ) : null}\n                            </div>\n                          )}\n                        </div>\n                        {isEditing && usernameAvailable !== null && editedData.username !== originalData.username && (\n                          <p className={`text-xs mt-1 ${usernameAvailable ? 'text-green-600' : 'text-red-600'}`}>\n                            {usernameAvailable ? t('profile.usernameAvailable') : t('profile.usernameTaken')}\n                          </p>\n                        )}\n                      </div>\n                      <div>\n                        <Label htmlFor=\"email\">{t('auth.email')}</Label>\n                        <Input \n                          id=\"email\" \n                          type=\"email\" \n                          value={editedData.email}\n                          onChange={(e) => setEditedData({ ...editedData, email: e.target.value })}\n                          disabled={!isEditing}\n                        />\n                      </div>\n                      <div>\n                        <Label htmlFor=\"phone\">{t('profile.phone')}</Label>\n                        <Input \n                          id=\"phone\" \n                          value={editedData.phone}\n                          onChange={(e) => setEditedData({ ...editedData, phone: e.target.value })}\n                          disabled={!isEditing}\n                        />\n                      </div>\n                      <div>\n                        <Label htmlFor=\"location\">{t('profile.location')}</Label>\n                        <Input \n                          id=\"location\" \n                          value={editedData.location}\n                          onChange={(e) => setEditedData({ ...editedData, location: e.target.value })}\n                          disabled={!isEditing}\n                        />\n                      </div>\n                    </div>\n                    \n                    <div className=\"pt-4 border-t\">\n                      <h4 className=\"text-sm mb-4\">Security & Verification</h4>\n                      <div className=\"space-y-3\">\n                        <div className=\"flex items-center justify-between\">\n                          <div>\n                            <p className=\"text-sm\">Identity Verification</p>\n                            <p className=\"text-xs text-muted-foreground\">Verify your identity to build trust</p>\n                          </div>\n                          <Badge variant=\"secondary\" className=\"gap-1\">\n                            <CheckCircle className=\"h-3 w-3\" />\n                            Verified\n                          </Badge>\n                        </div>\n                        <div className=\"flex items-center justify-between\">\n                          <div>\n                            <p className=\"text-sm\">Two-Factor Authentication</p>\n                            <p className=\"text-xs text-muted-foreground\">Add an extra layer of security</p>\n                          </div>\n                          <Button size=\"sm\" variant=\"outline\">Enable</Button>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"pt-4 border-t\">\n                      <h4 className=\"text-sm mb-4\">Profile Actions</h4>\n                      <Button size=\"sm\" variant=\"destructive\" onClick={handleResetProfile}>\n                        Clear/Reset Profile\n                      </Button>\n                    </div>\n                  </CardContent>\n                </Card>\n              </TabsContent>\n            </div>\n          </div>\n        </Tabs>\n      </div>\n\n      {/* Unsaved Changes Dialog */}\n      <AlertDialog open={showUnsavedDialog} onOpenChange={setShowUnsavedDialog}>\n        <AlertDialogContent>\n          <AlertDialogHeader>\n            <AlertDialogTitle>Unsaved Changes</AlertDialogTitle>\n            <AlertDialogDescription>\n              {t('profile.unsavedChanges')}\n            </AlertDialogDescription>\n          </AlertDialogHeader>\n          <AlertDialogFooter>\n            <AlertDialogCancel onClick={() => {\n              setShowUnsavedDialog(false);\n              setPendingTab(null);\n            }}>\n              Stay on Page\n            </AlertDialogCancel>\n            <AlertDialogAction onClick={pendingTab ? confirmTabChange : confirmCancelEditing}>\n              Discard Changes\n            </AlertDialogAction>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n      {/* Delete Project Confirmation */}\n      <AlertDialog open={showDeleteConfirm} onOpenChange={setShowDeleteConfirm}>\n        <AlertDialogContent>\n          <AlertDialogHeader>\n            <AlertDialogTitle>Delete Project</AlertDialogTitle>\n            <AlertDialogDescription>Are you sure you want to remove this project from your portfolio? This action cannot be undone.</AlertDialogDescription>\n          </AlertDialogHeader>\n          <AlertDialogFooter>\n            <AlertDialogCancel onClick={() => { setShowDeleteConfirm(false); setProjectToDelete(null); }}>Cancel</AlertDialogCancel>\n            <AlertDialogAction onClick={confirmDeleteProject}>Delete</AlertDialogAction>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n\n      {/* Reset Profile Confirmation */}\n      <AlertDialog open={showResetConfirm} onOpenChange={setShowResetConfirm}>\n        <AlertDialogContent>\n          <AlertDialogHeader>\n            <AlertDialogTitle>Reset Profile</AlertDialogTitle>\n            <AlertDialogDescription>This will permanently remove your profile data and related items. You can re-create your profile later, but associated jobs, offers, and transactions will be deleted.</AlertDialogDescription>\n          </AlertDialogHeader>\n          <AlertDialogFooter>\n            <AlertDialogCancel onClick={() => setShowResetConfirm(false)}>Cancel</AlertDialogCancel>\n            <AlertDialogAction onClick={confirmResetProfile}>Reset Profile</AlertDialogAction>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n    </div>\n  );\n}"],"names":["AlertDialog","props","AlertDialogPrimitive.Root","AlertDialogPortal","AlertDialogPrimitive.Portal","AlertDialogOverlay","React.forwardRef","className","ref","jsx","AlertDialogPrimitive.Overlay","cn","AlertDialogContent","AlertDialogPrimitive.Content","AlertDialogHeader","AlertDialogFooter","AlertDialogTitle","AlertDialogPrimitive.Title","AlertDialogDescription","AlertDialogPrimitive.Description","AlertDialogAction","AlertDialogPrimitive.Action","buttonVariants","AlertDialogCancel","AlertDialogPrimitive.Cancel","Profile","onNavigate","user","wallet","setUser","useUser","t","useI18n","handleLogout","activeTab","setActiveTab","useState","isEditing","setIsEditing","hasUnsavedChanges","setHasUnsavedChanges","showUnsavedDialog","setShowUnsavedDialog","pendingTab","setPendingTab","checkingUsername","setCheckingUsername","usernameAvailable","setUsernameAvailable","showAddProject","setShowAddProject","newProject","setNewProject","editedData","setEditedData","originalData","setOriginalData","useEffect","initialData","hasChanges","profileData","BIO_LIMIT","bioCharsRemaining","checkUsernameAvailability","username","resolve","isTaken","timeout","handleSaveChanges","toast","updatedProfile","userApi","error","handleCancelEditing","confirmCancelEditing","handleTabChange","newTab","confirmTabChange","handlePhotoUpload","currentSkillInput","setCurrentSkillInput","handleAddSkill","prev","handleRemoveSkill","skillToRemove","s","newJobExp","setNewJobExp","handleAddJobExperience","generateId","handleRemoveJobExperience","id","exp","newStudyExp","setNewStudyExp","handleAddStudyExperience","handleRemoveStudyExperience","newCert","setNewCert","handleAddCertification","handleRemoveCertification","cert","newService","setNewService","handleAddService","handleRemoveService","service","handleAddProject","project","updatedPortfolio","response","err","showResetConfirm","setShowResetConfirm","handleResetProfile","confirmResetProfile","res","projectToDelete","setProjectToDelete","showDeleteConfirm","setShowDeleteConfirm","confirmDeleteProject","updated","pp","resp","jsxs","Navigation","Tabs","Card","CardContent","Avatar","AvatarFallback","n","AvatarImage","Button","Camera","CheckCircle","MapPin","Star","Fragment","X","Edit","Check","Mail","Phone","Calendar","TabsList","TabsTrigger","TabsContent","CardHeader","CardTitle","Textarea","e","Input","Plus","skill","index","Badge","Briefcase","GraduationCap","Award","CardDescription","p","FileText","ExternalLink","Trash","tag","review","_","i","Label","Loader2","AlertCircle"],"mappings":"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"}