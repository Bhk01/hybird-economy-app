{"version":3,"file":"InvestmentMode-DTwUFUL5.js","sources":["../../src/components/InvestmentMode.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Navigation } from './Navigation';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from './ui/card';\nimport { Button } from './ui/button';\nimport { Badge } from './ui/badge';\nimport { Input } from './ui/input';\nimport { Progress } from './ui/progress';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from './ui/tabs';\nimport { ImageWithFallback } from './figma/ImageWithFallback';\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from './ui/dialog';\nimport { Label } from './ui/label';\nimport { \n  Search,\n  TrendingUp,\n  Shield,\n  Clock,\n  Users,\n  DollarSign,\n  Star,\n  MapPin,\n  AlertTriangle,\n  CheckCircle,\n  BarChart3,\n  PieChart,\n  Filter,\n  Target,\n  Briefcase,\n  Home,\n  ShoppingBag,\n  Coffee,\n  Car,\n  Building,\n  Loader2,\n  Plus,\n  Zap\n} from 'lucide-react';\nimport { PageType, useUser } from '../App';\nimport { projectsApi, InvestmentProject, walletApi } from '../utils/api';\nimport { toast } from 'sonner';\n\ninterface InvestmentModeProps {\n  onNavigate: (page: PageType, userId?: string) => void;\n}\n\nexport function InvestmentMode({ onNavigate }: InvestmentModeProps) {\n  const handleLogout = () => {\n    onNavigate('landing');\n  };\n  const { user, wallet, refreshWallet } = useUser();\n  const [activeTab, setActiveTab] = useState<'browse' | 'portfolio' | 'analytics'>('browse');\n  const [searchQuery, setSearchQuery] = useState('');\n  const [projects, setProjects] = useState<InvestmentProject[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [investing, setInvesting] = useState<string | null>(null);\n  const [selectedProject, setSelectedProject] = useState<InvestmentProject | null>(null);\n  const [investmentAmount, setInvestmentAmount] = useState('');\n  const [investDialogOpen, setInvestDialogOpen] = useState(false);\n  const [aiRecommendationsActive, setAiRecommendationsActive] = useState(false);\n\n  // Load projects on component mount\n  useEffect(() => {\n    loadProjects();\n  }, []);\n\n  const loadProjects = async () => {\n    try {\n      setLoading(true);\n      const response = await projectsApi.getAllProjects();\n      setProjects(response.projects || []);\n    } catch (error) {\n      console.error('Error loading projects:', error);\n      toast.error('Failed to load investment projects');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleInvestment = async () => {\n    if (!user || !selectedProject || !investmentAmount) {\n      toast.error('Please fill in all required fields');\n      return;\n    }\n\n    const amount = parseFloat(investmentAmount);\n    if (amount < selectedProject.minInvestment) {\n      toast.error(`Minimum investment is ${selectedProject.minInvestment} TND`);\n      return;\n    }\n\n    if (!wallet || wallet.money < amount) {\n      toast.error('Insufficient funds in your wallet');\n      return;\n    }\n\n    try {\n      setInvesting(selectedProject.id);\n      const response = await projectsApi.makeInvestment(selectedProject.id, user.id, amount);\n      \n      if (response.success) {\n        toast.success(`Successfully invested ${amount} TND in ${selectedProject.title}!`);\n        setInvestDialogOpen(false);\n        setInvestmentAmount('');\n        setSelectedProject(null);\n        await refreshWallet();\n        await loadProjects();\n      }\n    } catch (error) {\n      console.error('Error making investment:', error);\n      toast.error('Failed to make investment');\n    } finally {\n      setInvesting(null);\n    }\n  };\n\n  const openInvestDialog = (project: InvestmentProject) => {\n    setSelectedProject(project);\n    setInvestmentAmount(project.minInvestment.toString());\n    setInvestDialogOpen(true);\n  };\n\n  // Filter projects based on search query and AI recommendations\n  const getFilteredProjects = () => {\n    let currentProjects = projects;\n\n    if (searchQuery) {\n      currentProjects = currentProjects.filter(project => \n        project.title.toLowerCase().includes(searchQuery.toLowerCase()) ||\n        project.description.toLowerCase().includes(searchQuery.toLowerCase()) ||\n        project.category.toLowerCase().includes(searchQuery.toLowerCase())\n      );\n    }\n\n    if (aiRecommendationsActive && user) {\n      // Simple AI recommendation logic:\n      // 1. Prioritize projects in categories the user has already invested in (if any)\n      // 2. Prioritize projects with 'Low' risk if user has less than 500 TND equity\n      // 3. Prioritize projects with 'High' expected return\n      const userInvestedCategories = new Set(userInvestments.map(inv => inv.category));\n      \n      currentProjects = currentProjects.sort((a, b) => {\n        let scoreA = 0;\n        let scoreB = 0;\n\n        // Category match\n        if (userInvestedCategories.has(a.category)) scoreA += 2;\n        if (userInvestedCategories.has(b.category)) scoreB += 2;\n\n        // Risk preference\n        if (wallet && wallet.equity < 500) { // If user has low equity, recommend low risk\n          if (a.riskLevel === 'Low') scoreA += 1;\n          if (b.riskLevel === 'Low') scoreB += 1;\n        }\n\n        // Expected return (simple string comparison for now)\n        if (parseFloat(a.expectedReturn.split('-')[0]) > parseFloat(b.expectedReturn.split('-')[0])) scoreA += 1;\n        if (parseFloat(b.expectedReturn.split('-')[0]) > parseFloat(a.expectedReturn.split('-')[0])) scoreB += 1;\n\n        return scoreB - scoreA; // Higher score comes first\n      });\n    }\n\n    return currentProjects;\n  };\n\n  const filteredProjects = getFilteredProjects();\n\n  // Calculate user's portfolio from their investments\n  const userInvestments = projects.filter(project => \n    project.investors.some(inv => inv.investorId === user?.id)\n  );\n\n  const totalInvested = userInvestments.reduce((sum, project) => {\n    const userInvestment = project.investors.find(inv => inv.investorId === user?.id);\n    return sum + (userInvestment?.amount || 0);\n  }, 0);\n\n  const totalEquity = userInvestments.reduce((sum, project) => {\n    const userInvestment = project.investors.find(inv => inv.investorId === user?.id);\n    return sum + (userInvestment?.equityPercentage || 0);\n  }, 0);\n\n  const investmentCategories = [\n    { name: 'Tech Startups', icon: Briefcase, count: projects.filter(p => p.category === 'Tech Startup').length, color: 'bg-blue-500' },\n    { name: 'Real Estate', icon: Home, count: projects.filter(p => p.category === 'Real Estate').length, color: 'bg-green-500' },\n    { name: 'Retail', icon: ShoppingBag, count: projects.filter(p => p.category === 'Retail').length, color: 'bg-purple-500' },\n    { name: 'Food & Beverage', icon: Coffee, count: projects.filter(p => p.category === 'Food & Beverage').length, color: 'bg-orange-500' },\n    { name: 'Transport', icon: Car, count: projects.filter(p => p.category === 'Transport').length, color: 'bg-red-500' },\n    { name: 'Local Business', icon: Building, count: projects.filter(p => p.category === 'Local Business').length, color: 'bg-indigo-500' }\n  ];\n\n\n\n  const getRiskColor = (risk: string) => {\n    switch (risk.toLowerCase()) {\n      case 'low': return 'text-green-500 bg-green-500/10';\n      case 'medium': return 'text-yellow-500 bg-yellow-500/10';\n      case 'high': return 'text-red-500 bg-red-500/10';\n      default: return 'text-gray-500 bg-gray-500/10';\n    }\n  };\n\n  const getRiskIcon = (risk: string) => {\n    switch (risk.toLowerCase()) {\n      case 'low': return <Shield className=\"h-4 w-4\" />;\n      case 'medium': return <AlertTriangle className=\"h-4 w-4\" />;\n      case 'high': return <AlertTriangle className=\"h-4 w-4\" />;\n      default: return <Shield className=\"h-4 w-4\" />;\n    }\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'active': return 'text-blue-500 bg-blue-500/10';\n      case 'completed': return 'text-green-500 bg-green-500/10';\n      case 'at-risk': return 'text-red-500 bg-red-500/10';\n      default: return 'text-gray-500 bg-gray-500/10';\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Navigation currentPage=\"investment\" onNavigate={onNavigate} onLogout={handleLogout} />\n      \n      <div className=\"container mx-auto px-4 py-6\">\n        <div className=\"flex items-center justify-between mb-6\">\n          <div>\n            <h1 className=\"text-2xl mb-2\">Micro-Investment</h1>\n            <p className=\"text-muted-foreground\">\n              Invest in local projects starting from 1 TND\n            </p>\n          </div>\n          <Button className=\"gap-2\" onClick={() => onNavigate('wallet')}>\n            <DollarSign className=\"h-4 w-4\" />\n            Available: {wallet?.money || 0} TND\n          </Button>\n        </div>\n\n        {/* Investment Stats */}\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\n          <Card>\n            <CardContent className=\"p-4\">\n              <div className=\"flex items-center gap-2\">\n                <TrendingUp className=\"h-5 w-5 text-green-500\" />\n                <div>\n                  <p className=\"text-sm text-muted-foreground\">Total Invested</p>\n                  <p className=\"text-xl\">{totalInvested} TND</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n          <Card>\n            <CardContent className=\"p-4\">\n              <div className=\"flex items-center gap-2\">\n                <BarChart3 className=\"h-5 w-5 text-blue-500\" />\n                <div>\n                  <p className=\"text-sm text-muted-foreground\">Total Equity</p>\n                  <p className=\"text-xl\">{totalEquity.toFixed(2)}%</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n          <Card>\n            <CardContent className=\"p-4\">\n              <div className=\"flex items-center gap-2\">\n                <PieChart className=\"h-5 w-5 text-purple-500\" />\n                <div>\n                  <p className=\"text-sm text-muted-foreground\">Available Projects</p>\n                  <p className=\"text-xl\">{projects.length}</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n          <Card>\n            <CardContent className=\"p-4\">\n              <div className=\"flex items-center gap-2\">\n                <Target className=\"h-5 w-5 text-orange-500\" />\n                <div>\n                  <p className=\"text-sm text-muted-foreground\">My Investments</p>\n                  <p className=\"text-xl\">{userInvestments.length}</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n\n        <Tabs value={activeTab} onValueChange={(value) => setActiveTab(value as any)}>\n          <TabsList>\n            <TabsTrigger value=\"browse\">Browse Projects</TabsTrigger>\n            <TabsTrigger value=\"portfolio\">My Portfolio</TabsTrigger>\n            <TabsTrigger value=\"analytics\">Analytics</TabsTrigger>\n          </TabsList>\n\n          <TabsContent value=\"browse\" className=\"space-y-6\">\n            {/* Search and Filters */}\n            <Card>\n              <CardContent className=\"p-4\">\n                <div className=\"flex gap-4\">\n                  <div className=\"flex-1 relative\">\n                    <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n                    <Input\n                      placeholder=\"Search investment opportunities...\"\n                      value={searchQuery}\n                      onChange={(e) => setSearchQuery(e.target.value)}\n                      className=\"pl-10\"\n                    />\n                  </div>\n                  <Button variant={aiRecommendationsActive ? \"default\" : \"outline\"} onClick={() => setAiRecommendationsActive(!aiRecommendationsActive)}>\n                    <Zap className=\"h-4 w-4 mr-2\" />\n                    AI Recommendations\n                  </Button>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Investment Categories */}\n            <div>\n              <h3 className=\"text-lg mb-4\">Browse by Category</h3>\n              <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-4\">\n                {investmentCategories.map((category, index) => {\n                  const Icon = category.icon;\n                  return (\n                    <Card key={index} className=\"cursor-pointer hover:shadow-md transition-shadow\">\n                      <CardContent className=\"p-4 text-center\">\n                        <div className={`${category.color} text-white p-2 rounded-lg w-fit mx-auto mb-2`}>\n                          <Icon className=\"h-5 w-5\" />\n                        </div>\n                        <p className=\"text-sm\">{category.name}</p>\n                        <p className=\"text-xs text-muted-foreground\">{category.count} projects</p>\n                      </CardContent>\n                    </Card>\n                  );\n                })}\n              </div>\n            </div>\n\n            {/* Available Investments */}\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-lg\">Featured Investment Opportunities</h3>\n                <p className=\"text-sm text-muted-foreground\">{filteredProjects.length} projects available</p>\n              </div>\n              \n              {loading ? (\n                <div className=\"flex items-center justify-center py-8\">\n                  <Loader2 className=\"h-8 w-8 animate-spin\" />\n                  <span className=\"ml-2\">Loading investment opportunities...</span>\n                </div>\n              ) : filteredProjects.length === 0 ? (\n                <Card>\n                  <CardContent className=\"p-8 text-center\">\n                    <p className=\"text-muted-foreground mb-4\">No investment opportunities available at the moment.</p>\n                    <p className=\"text-sm text-muted-foreground mt-2\">\n                      Check back later for new projects!\n                    </p>\n                  </CardContent>\n                </Card>\n              ) : (\n                <div className=\"grid md:grid-cols-2 gap-6\">\n                  {filteredProjects.map((project) => (\n                    <Card key={project.id} className=\"hover:shadow-lg transition-shadow\">\n                      <div className=\"relative\">\n                        <ImageWithFallback\n                          src=\"https://images.unsplash.com/photo-1521897258701-21e2a01f5bb8?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&q=80&w=1080\"\n                          alt={project.title}\n                          className=\"w-full h-48 object-cover rounded-t-lg\"\n                        />\n                        <Badge className={`absolute top-3 right-3 ${getRiskColor(project.riskLevel.toLowerCase())}`}>\n                          {getRiskIcon(project.riskLevel.toLowerCase())}\n                          {project.riskLevel} risk\n                        </Badge>\n                      </div>\n                      <CardContent className=\"p-6\">\n                        <div className=\"flex items-start justify-between mb-3\">\n                          <div>\n                            <h3 className=\"text-lg mb-1\">{project.title}</h3>\n                            <Badge variant=\"outline\" className=\"text-xs mb-2\">\n                              {project.category}\n                            </Badge>\n                          </div>\n                          <div className=\"text-right\">\n                            <p className=\"text-sm text-muted-foreground\">Expected Return</p>\n                            <p className=\"text-green-600\">{project.expectedReturn}</p>\n                          </div>\n                        </div>\n                        \n                        <p className=\"text-sm text-muted-foreground mb-4\">{project.description}</p>\n                        \n                        {/* Funding Progress */}\n                        <div className=\"mb-4\">\n                          <div className=\"flex justify-between text-sm mb-2\">\n                            <span>Funding Progress</span>\n                            <span>{Math.round((project.currentFunding / project.fundingGoal) * 100)}%</span>\n                          </div>\n                          <Progress \n                            value={(project.currentFunding / project.fundingGoal) * 100} \n                            className=\"h-2 mb-2\" \n                          />\n                          <div className=\"flex justify-between text-xs text-muted-foreground\">\n                            <span>{project.currentFunding.toLocaleString()} TND raised</span>\n                            <span>{project.fundingGoal.toLocaleString()} TND goal</span>\n                          </div>\n                        </div>\n\n                        {/* Key Details */}\n                        <div className=\"grid grid-cols-2 gap-4 mb-4 text-sm\">\n                          <div className=\"flex items-center gap-2\">\n                            <DollarSign className=\"h-4 w-4 text-muted-foreground\" />\n                            <div>\n                              <p className=\"text-muted-foreground\">Min Investment</p>\n                              <p>{project.minInvestment} TND</p>\n                            </div>\n                          </div>\n                          <div className=\"flex items-center gap-2\">\n                            <Users className=\"h-4 w-4 text-muted-foreground\" />\n                            <div>\n                              <p className=\"text-muted-foreground\">Investors</p>\n                              <p>{project.investors.length}</p>\n                            </div>\n                          </div>\n                          <div className=\"flex items-center gap-2\">\n                            <CheckCircle className=\"h-4 w-4 text-muted-foreground\" />\n                            <div>\n                              <p className=\"text-muted-foreground\">Status</p>\n                              <p className=\"capitalize\">{project.status}</p>\n                            </div>\n                          </div>\n                          <div className=\"flex items-center gap-2\">\n                            <Clock className=\"h-4 w-4 text-muted-foreground\" />\n                            <div>\n                              <p className=\"text-muted-foreground\">Created</p>\n                              <p>{new Date(project.createdAt).toLocaleDateString()}</p>\n                            </div>\n                          </div>\n                        </div>\n\n                        {/* Actions */}\n                        <div className=\"flex gap-2\">\n                          <Button variant=\"outline\" size=\"sm\" className=\"flex-1\">Learn More</Button>\n                          <Button \n                            size=\"sm\" \n                            className=\"flex-1\"\n                            onClick={() => openInvestDialog(project)}\n                            disabled={investing === project.id}\n                          >\n                            {investing === project.id && <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />}\n                            Invest Now\n                          </Button>\n                          <Button \n                            variant=\"outline\" \n                            size=\"sm\"\n                            onClick={() => onNavigate('publicProfile', project.ownerId)}\n                          >\n                            View Owner\n                          </Button>\n                        </div>\n                      </CardContent>\n                    </Card>\n                  ))}\n                </div>\n              )}\n            </div>\n          </TabsContent>\n\n          <TabsContent value=\"portfolio\" className=\"space-y-6\">\n            <div className=\"space-y-4\">\n              <h3 className=\"text-lg\">My Investment Portfolio</h3>\n              \n              {userInvestments.length === 0 ? (\n                <Card>\n                  <CardContent className=\"p-8 text-center\">\n                    <p className=\"text-muted-foreground mb-4\">You haven't made any investments yet.</p>\n                    <Button onClick={() => setActiveTab('browse')}>\n                      Browse Investment Opportunities\n                    </Button>\n                  </CardContent>\n                </Card>\n              ) : (\n                userInvestments.map((project) => {\n                  const userInvestment = project.investors.find(inv => inv.investorId === user?.id);\n                  return (\n                    <Card key={project.id}>\n                      <CardContent className=\"p-6\">\n                        <div className=\"flex items-center justify-between\">\n                          <div className=\"flex-1\">\n                            <div className=\"flex items-center gap-2 mb-2\">\n                              <h3 className=\"text-lg\">{project.title}</h3>\n                              <Badge className={getStatusColor(project.status)}>\n                                {project.status}\n                              </Badge>\n                            </div>\n                            <p className=\"text-sm text-muted-foreground\">{project.description}</p>\n                          </div>\n                          \n                          <div className=\"grid grid-cols-3 gap-8 text-center\">\n                            <div>\n                              <p className=\"text-sm text-muted-foreground\">Invested</p>\n                              <p className=\"text-lg\">{userInvestment?.amount || 0} TND</p>\n                            </div>\n                            <div>\n                              <p className=\"text-sm text-muted-foreground\">Equity</p>\n                              <p className=\"text-lg\">{userInvestment?.equityPercentage?.toFixed(2) || 0}%</p>\n                            </div>\n                            <div>\n                              <p className=\"text-sm text-muted-foreground\">Investment Date</p>\n                              <p className=\"text-sm\">\n                                {userInvestment ? new Date(userInvestment.investedAt).toLocaleDateString() : 'N/A'}\n                              </p>\n                            </div>\n                          </div>\n                          \n                          <Button variant=\"outline\" size=\"sm\">View Details</Button>\n                        </div>\n                      </CardContent>\n                    </Card>\n                  );\n                })\n              )}\n            </div>\n          </TabsContent>\n\n          <TabsContent value=\"analytics\" className=\"space-y-6\">\n            <div className=\"grid md:grid-cols-2 gap-6\">\n              <Card>\n                <CardHeader>\n                  <CardTitle>Portfolio Performance</CardTitle>\n                  <CardDescription>Your investment performance over time</CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    <div className=\"flex justify-between items-center\">\n                      <span>Total Invested</span>\n                      <span>{totalInvested} TND</span>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span>Total Equity</span>\n                      <span>{totalEquity.toFixed(2)}%</span>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span>Active Projects</span>\n                      <span>{userInvestments.length}</span>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span>Average Investment</span>\n                      <span>{userInvestments.length > 0 ? Math.round(totalInvested / userInvestments.length) : 0} TND</span>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card>\n                <CardHeader>\n                  <CardTitle>Risk Analysis</CardTitle>\n                  <CardDescription>AI-powered risk assessment of your portfolio</CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <span>Overall Risk Level</span>\n                      <Badge className=\"text-yellow-500 bg-yellow-500/10\">\n                        <AlertTriangle className=\"h-3 w-3 mr-1\" />\n                        Medium\n                      </Badge>\n                    </div>\n                    <div>\n                      <div className=\"flex justify-between text-sm mb-2\">\n                        <span>Low Risk</span>\n                        <span>40%</span>\n                      </div>\n                      <Progress value={40} className=\"h-2 mb-2\" />\n                    </div>\n                    <div>\n                      <div className=\"flex justify-between text-sm mb-2\">\n                        <span>Medium Risk</span>\n                        <span>45%</span>\n                      </div>\n                      <Progress value={45} className=\"h-2 mb-2\" />\n                    </div>\n                    <div>\n                      <div className=\"flex justify-between text-sm mb-2\">\n                        <span>High Risk</span>\n                        <span>15%</span>\n                      </div>\n                      <Progress value={15} className=\"h-2\" />\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n\n            {/* AI Recommendations */}\n            <Card>\n              <CardHeader>\n                <CardTitle>AI Investment Recommendations</CardTitle>\n                <CardDescription>Personalized suggestions based on your portfolio and risk profile</CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-3\">\n                  <div className=\"flex items-center gap-3 p-3 bg-blue-500/5 rounded-lg border border-blue-500/20\">\n                    <TrendingUp className=\"h-5 w-5 text-blue-500\" />\n                    <div className=\"flex-1\">\n                      <p className=\"text-sm\">Diversify into Agriculture</p>\n                      <p className=\"text-xs text-muted-foreground\">\n                        Consider the Organic Farm project to balance your tech-heavy portfolio\n                      </p>\n                    </div>\n                    <Button size=\"sm\" variant=\"outline\">View</Button>\n                  </div>\n                  \n                  <div className=\"flex items-center gap-3 p-3 bg-green-500/5 rounded-lg border border-green-500/20\">\n                    <Shield className=\"h-5 w-5 text-green-500\" />\n                    <div className=\"flex-1\">\n                      <p className=\"text-sm\">Lower Your Risk</p>\n                      <p className=\"text-xs text-muted-foreground\">\n                        Add more low-risk investments to stabilize returns\n                      </p>\n                    </div>\n                    <Button size=\"sm\" variant=\"outline\">Explore</Button>\n                  </div>\n                  \n                  <div className=\"flex items-center gap-3 p-3 bg-purple-500/5 rounded-lg border border-purple-500/20\">\n                    <BarChart3 className=\"h-5 w-5 text-purple-500\" />\n                    <div className=\"flex-1\">\n                      <p className=\"text-sm\">Increase Investment Amount</p>\n                      <p className=\"text-xs text-muted-foreground\">\n                        You have {wallet?.money || 0} TND available for new investments\n                      </p>\n                    </div>\n                    <Button size=\"sm\" variant=\"outline\">Invest</Button>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n        </Tabs>\n\n        {/* Investment Dialog */}\n        <Dialog open={investDialogOpen} onOpenChange={setInvestDialogOpen}>\n          <DialogContent className=\"max-w-md\">\n            <DialogHeader>\n              <DialogTitle>Invest in {selectedProject?.title}</DialogTitle>\n              <DialogDescription>\n                Enter the amount you want to invest (Min: {selectedProject?.minInvestment} TND)\n              </DialogDescription>\n            </DialogHeader>\n            <div className=\"space-y-4\">\n              <div>\n                <Label htmlFor=\"amount\">Investment Amount (TND)</Label>\n                <Input\n                  id=\"amount\"\n                  type=\"number\"\n                  placeholder={selectedProject?.minInvestment.toString()}\n                  value={investmentAmount}\n                  onChange={(e) => setInvestmentAmount(e.target.value)}\n                  min={selectedProject?.minInvestment}\n                  max={wallet?.money}\n                />\n                <p className=\"text-xs text-muted-foreground mt-1\">\n                  Available balance: {wallet?.money || 0} TND\n                </p>\n              </div>\n              \n              {selectedProject && investmentAmount && (\n                <div className=\"bg-muted p-3 rounded-lg\">\n                  <p className=\"text-sm\">Investment Summary:</p>\n                  <div className=\"flex justify-between mt-2\">\n                    <span>Amount:</span>\n                    <span>{investmentAmount} TND</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Equity:</span>\n                    <span>{((parseFloat(investmentAmount) / selectedProject.fundingGoal) * 100).toFixed(2)}%</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Expected Return:</span>\n                    <span>{selectedProject.expectedReturn}</span>\n                  </div>\n                </div>\n              )}\n              \n              <div className=\"flex justify-end gap-2\">\n                <Button variant=\"outline\" onClick={() => setInvestDialogOpen(false)}>\n                  Cancel\n                </Button>\n                <Button onClick={handleInvestment} disabled={investing !== null}>\n                  {investing === null ? 'Confirm Investment' : (\n                    <>\n                      <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\n                      Investing...\n                    </>\n                  )}\n                </Button>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n      </div>\n    </div>\n  );\n}"],"names":["InvestmentMode","onNavigate","handleLogout","user","wallet","refreshWallet","useUser","activeTab","setActiveTab","useState","searchQuery","setSearchQuery","projects","setProjects","loading","setLoading","investing","setInvesting","selectedProject","setSelectedProject","investmentAmount","setInvestmentAmount","investDialogOpen","setInvestDialogOpen","aiRecommendationsActive","setAiRecommendationsActive","useEffect","loadProjects","response","projectsApi","error","toast","handleInvestment","amount","openInvestDialog","project","filteredProjects","currentProjects","userInvestedCategories","userInvestments","inv","a","b","scoreA","scoreB","totalInvested","sum","userInvestment","totalEquity","investmentCategories","Briefcase","p","Home","ShoppingBag","Coffee","Car","Building","getRiskColor","risk","getRiskIcon","jsx","Shield","AlertTriangle","getStatusColor","status","jsxs","Navigation","Button","DollarSign","Card","CardContent","TrendingUp","BarChart3","PieChart","Target","Tabs","value","TabsList","TabsTrigger","TabsContent","Search","Input","e","Zap","category","index","Icon","Loader2","ImageWithFallback","Badge","Progress","Users","CheckCircle","Clock","CardHeader","CardTitle","CardDescription","Dialog","DialogContent","DialogHeader","DialogTitle","DialogDescription","Label","Fragment"],"mappings":"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"}