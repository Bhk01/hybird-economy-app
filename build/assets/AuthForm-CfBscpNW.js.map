{"version":3,"mappings":"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","names":["alertVariants","cva","Alert","className","variant","props","jsx","cn","AlertDescription","AuthForm","onSuccess","onBack","defaultTab","t","useI18n","isLoading","setIsLoading","useState","showPassword","setShowPassword","showForgotPassword","setShowForgotPassword","resetEmail","setResetEmail","showDevTools","setShowDevTools","activeTab","setActiveTab","loginData","setLoginData","registerData","setRegisterData","handleLogin","e","authApi","__vitePreload","n","response","toast","error","errorMessage","handleRegister","loginTab","handleForgotPassword","resolve","validatePassword","password","getPasswordStrength","requirements","score","passwordRequirements","passwordStrength","handleCleanupDatabase","cleanupDatabase","result","jsxs","Card","CardHeader","ShieldCheck","CardTitle","CardDescription","Badge","CardContent","Tabs","TabsList","TabsTrigger","LogIn","UserPlus","TabsContent","Label","Input","Button","EyeOff","Eye","ArrowLeft","Dialog","DialogTrigger","DialogContent","DialogHeader","DialogTitle","DialogDescription","Fragment","Loader2","Mail","Progress","Check","X","AlertCircle","Database","Trash2"],"ignoreList":[],"sources":["../../src/components/ui/alert.tsx","../../src/components/AuthForm.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { cva, type VariantProps } from \"class-variance-authority@0.7.1\";\n\nimport { cn } from \"./utils\";\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border px-4 py-3 text-sm grid has-[>svg]:grid-cols-[calc(var(--spacing)*4)_1fr] grid-cols-[0_1fr] has-[>svg]:gap-x-3 gap-y-0.5 items-start [&>svg]:size-4 [&>svg]:translate-y-0.5 [&>svg]:text-current\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-card text-card-foreground\",\n        destructive:\n          \"text-destructive bg-card [&>svg]:text-current *:data-[slot=alert-description]:text-destructive/90\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  },\n);\n\nfunction Alert({\n  className,\n  variant,\n  ...props\n}: React.ComponentProps<\"div\"> & VariantProps<typeof alertVariants>) {\n  return (\n    <div\n      data-slot=\"alert\"\n      role=\"alert\"\n      className={cn(alertVariants({ variant }), className)}\n      {...props}\n    />\n  );\n}\n\nfunction AlertTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-title\"\n      className={cn(\n        \"col-start-2 line-clamp-1 min-h-4 font-medium tracking-tight\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction AlertDescription({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-description\"\n      className={cn(\n        \"text-muted-foreground col-start-2 grid justify-items-start gap-1 text-sm [&_p]:leading-relaxed\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nexport { Alert, AlertTitle, AlertDescription };\n","import React, { useState } from 'react';\nimport { Button } from './ui/button';\nimport { Input } from './ui/input';\nimport { Label } from './ui/label';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from './ui/card';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from './ui/tabs';\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from './ui/dialog';\nimport { Badge } from './ui/badge';\nimport { Separator } from './ui/separator';\nimport { Progress } from './ui/progress';\nimport { Alert, AlertDescription } from './ui/alert';\nimport { toast } from 'sonner';\nimport { Eye, EyeOff, Loader2, Mail, ShieldCheck, HelpCircle, LogIn, UserPlus, Check, X, AlertCircle, Database, Trash2, ArrowLeft } from 'lucide-react';\nimport { useI18n } from '../utils/i18n';\n\ninterface AuthFormProps {\n  onSuccess: (userData: { userId: string; name: string; email: string }, isNewUser?: boolean) => void;\n  onBack: () => void; // Added onBack prop\n  defaultTab?: 'login' | 'register';\n}\n\nexport function AuthForm({ onSuccess, onBack, defaultTab = 'login' }: AuthFormProps) {\n  const { t } = useI18n();\n  const [isLoading, setIsLoading] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [showForgotPassword, setShowForgotPassword] = useState(false);\n  const [resetEmail, setResetEmail] = useState('');\n  const [showDevTools, setShowDevTools] = useState(false);\n  const [activeTab, setActiveTab] = useState(defaultTab);\n  \n  // Login form state\n  const [loginData, setLoginData] = useState({\n    email: '',\n    password: ''\n  });\n  \n  // Register form state\n  const [registerData, setRegisterData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n\n  const handleLogin = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsLoading(true);\n    \n    try {\n      const { authApi } = await import('../utils/api');\n      const response = await authApi.signIn(loginData.email, loginData.password);\n      \n      if (response.success) {\n        toast.success(t('auth.loginSuccess'));\n        onSuccess({\n          userId: response.user.id,\n          name: response.user.name,\n          email: response.user.email\n        });\n      } else {\n        // Handle unsuccessful login even if no error was thrown\n        toast.error(response.error || t('auth.loginFailed'));\n      }\n    } catch (error: any) {\n      console.error('Login error caught:', error);\n      console.error('Error type:', typeof error);\n      console.error('Error message:', error?.message);\n      console.error('Error string:', String(error));\n      \n      // Extract error message from various error formats\n      let errorMessage = t('auth.loginFailed');\n      \n      if (error?.message) {\n        errorMessage = error.message;\n        console.log('Using error.message:', errorMessage);\n      } else if (typeof error === 'string') {\n        errorMessage = error;\n        console.log('Using error string:', errorMessage);\n      }\n      \n      console.log('Final error message to display:', errorMessage);\n      \n      // Display user-friendly error messages\n      toast.error(errorMessage, {\n        duration: 5000,\n        position: 'top-center'\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleRegister = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (registerData.password !== registerData.confirmPassword) {\n      toast.error(t('auth.passwordMismatch'));\n      return;\n    }\n    \n    if (registerData.password.length < 6) {\n      toast.error(t('auth.passwordTooShort'));\n      return;\n    }\n    \n    setIsLoading(true);\n    \n    try {\n      const { authApi } = await import('../utils/api');\n      const response = await authApi.signUp(\n        registerData.email,\n        registerData.password,\n        registerData.name\n      );\n      \n      if (response.success) {\n        toast.success(t('auth.registrationSuccess'));\n        onSuccess({\n          userId: response.user.id,\n          name: response.user.name,\n          email: response.user.email\n        }, true); // true indicates this is a new user\n      } else {\n        // Handle unsuccessful registration even if no error was thrown\n        toast.error(response.error || t('auth.registrationFailed'));\n      }\n    } catch (error: any) {\n      console.error('Registration error:', error);\n      \n      // Extract error message from various error formats\n      let errorMessage = t('auth.registrationFailed');\n      \n      if (error.message) {\n        // Check if it's an \"email exists\" error\n        if (error.message.includes('already exists')) {\n          errorMessage = error.message;\n          // Show a toast with action to switch to login\n          toast.error(errorMessage, {\n            duration: 5000,\n            position: 'top-center',\n            action: {\n              label: t('auth.signIn'), // Translated\n              onClick: () => {\n                // Switch to login tab\n                const loginTab = document.querySelector('[value=\"login\"]') as HTMLButtonElement;\n                if (loginTab) loginTab.click();\n                // Pre-fill email in login form\n                setLoginData({ ...loginData, email: registerData.email });\n              }\n            }\n          });\n          return;\n        }\n        errorMessage = error.message;\n      } else if (typeof error === 'string') {\n        errorMessage = error;\n      }\n      \n      // Display user-friendly error messages\n      toast.error(errorMessage, {\n        duration: 4000,\n        position: 'top-center'\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n\n\n  const handleForgotPassword = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsLoading(true);\n    \n    try {\n      // Simulate password reset email\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      toast.success(`${t('auth.resetLinkSent')} ${resetEmail}`);\n      setShowForgotPassword(false);\n      setResetEmail('');\n    } catch (error) {\n      toast.error(t('auth.resetLinkError'));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const validatePassword = (password: string) => {\n    const requirements = {\n      length: password.length >= 6,\n      uppercase: /[A-Z]/.test(password),\n      lowercase: /[a-z]/.test(password),\n      number: /\\d/.test(password)\n    };\n    return requirements;\n  };\n\n  const getPasswordStrength = (password: string) => {\n    if (!password) return { score: 0, label: '', color: '' };\n    \n    const requirements = validatePassword(password);\n    const score = Object.values(requirements).filter(Boolean).length;\n    \n    if (score <= 1) return { score: 25, label: t('auth.weak'), color: 'bg-red-500' };\n    if (score <= 3) return { score: 60, label: t('auth.medium'), color: 'bg-yellow-500' };\n    return { score: 100, label: t('auth.strong'), color: 'bg-green-500' };\n  };\n\n  const passwordRequirements = validatePassword(registerData.password);\n  const passwordStrength = getPasswordStrength(registerData.password);\n  const isPasswordValid = registerData.password.length >= 6;\n\n  const handleResendVerification = async () => {\n    setIsLoading(true);\n    try {\n      // Simulate sending verification email\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      toast.success(t('auth.verificationSent'));\n    } catch (error) {\n      toast.error(t('auth.verificationError'));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleCleanupDatabase = async () => {\n    if (!window.confirm(t('auth.cleanupConfirm'))) { // Translated\n      return;\n    }\n\n    setIsLoading(true);\n    try {\n      const { cleanupDatabase } = await import('../utils/cleanup');\n      const result = await cleanupDatabase();\n      toast.success(`Database cleaned! Removed ${result.removed.auth} accounts, ${result.removed.users} profiles, ${result.removed.wallets} wallets.`);\n      \n      // Clear the form\n      setLoginData({ email: '', password: '' });\n      setRegisterData({ name: '', email: '', password: '', confirmPassword: '' });\n    } catch (error: any) {\n      console.error('Cleanup error:', error);\n      toast.error(t('auth.cleanupError') + ': ' + (error.message || 'Unknown error')); // Translated\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-blue-50 to-indigo-100 dark:from-gray-900 dark:to-gray-800 p-4\">\n      <Card className=\"w-full max-w-md shadow-xl\">\n        <CardHeader className=\"text-center space-y-2\">\n          <div className=\"flex items-center justify-center mb-4\">\n            <div className=\"bg-primary text-primary-foreground rounded-full p-3\">\n              <ShieldCheck className=\"h-8 w-8\" />\n            </div>\n          </div>\n          <CardTitle className=\"text-2xl\">{t('auth.welcome')}</CardTitle>\n          <CardDescription className=\"text-base\">\n            {t('auth.description')}\n          </CardDescription>\n          <div className=\"flex justify-center gap-2 mt-4\">\n            <Badge variant=\"secondary\" className=\"text-xs\">\n              🔒 {t('auth.secureAuthentication')}\n            </Badge>\n            <Badge variant=\"secondary\" className=\"text-xs\">\n              🌍 {t('auth.multiLanguage')}\n            </Badge>\n          </div>\n        </CardHeader>\n        <CardContent>\n          <Tabs defaultValue=\"login\" className=\"w-full\">\n            <TabsList className=\"grid w-full grid-cols-2\">\n              <TabsTrigger value=\"login\" className=\"flex items-center gap-2\">\n                <LogIn className=\"h-4 w-4\" />\n                {t('auth.login')}\n              </TabsTrigger>\n              <TabsTrigger value=\"register\" className=\"flex items-center gap-2\">\n                <UserPlus className=\"h-4 w-4\" />\n                {t('auth.register')}\n              </TabsTrigger>\n            </TabsList>\n            \n            <TabsContent value=\"login\">\n              <form onSubmit={handleLogin} className=\"space-y-4\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"login-email\">{t('auth.email')}</Label>\n                  <Input\n                    id=\"login-email\"\n                    type=\"email\"\n                    placeholder={t('auth.email')}\n                    value={loginData.email}\n                    onChange={(e) => setLoginData({ ...loginData, email: e.target.value })}\n                    required\n                  />\n                </div>\n                \n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"login-password\">{t('auth.password')}</Label>\n                  <div className=\"relative\">\n                    <Input\n                      id=\"login-password\"\n                      type={showPassword ? 'text' : 'password'}\n                      placeholder={t('auth.password')}\n                      value={loginData.password}\n                      onChange={(e) => setLoginData({ ...loginData, password: e.target.value })}\n                      required\n                    />\n                    <Button\n                      type=\"button\"\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      className=\"absolute right-0 top-0 h-full px-3 py-2 hover:bg-transparent\"\n                      onClick={() => setShowPassword(!showPassword)}\n                    >\n                      {showPassword ? <EyeOff className=\"h-4 w-4\" /> : <Eye className=\"h-4 w-4\" />}\n                    </Button>\n                  </div>\n                </div>\n                \n                <div className=\"flex justify-between items-center\">\n                  <Button variant=\"link\" className=\"px-0 text-sm\" onClick={onBack}>\n                    <ArrowLeft className=\"mr-2 h-4 w-4\" />\n                    {t('common.back')}\n                  </Button>\n                  <Dialog open={showForgotPassword} onOpenChange={setShowForgotPassword}>\n                    <DialogTrigger asChild>\n                      <Button variant=\"link\" className=\"px-0 text-sm\">\n                        {t('auth.forgotPassword')}\n                      </Button>\n                    </DialogTrigger>\n                    <DialogContent>\n                      <DialogHeader>\n                        <DialogTitle>{t('auth.resetPassword')}</DialogTitle>\n                        <DialogDescription>\n                          {t('auth.resetPasswordDesc')}\n                        </DialogDescription>\n                      </DialogHeader>\n                      <form onSubmit={handleForgotPassword} className=\"space-y-4\">\n                        <div>\n                          <Label htmlFor=\"reset-email\">{t('auth.emailAddress')}</Label>\n                          <Input\n                            id=\"reset-email\"\n                            type=\"email\"\n                            placeholder={t('auth.email')}\n                            value={resetEmail}\n                            onChange={(e) => setResetEmail(e.target.value)}\n                            required\n                          />\n                        </div>\n                        <div className=\"flex gap-2\">\n                          <Button type=\"submit\" disabled={isLoading} className=\"flex-1\">\n                            {isLoading ? (\n                              <>\n                                <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                                {t('auth.sending')}\n                              </>\n                            ) : (\n                              <>\n                                <Mail className=\"mr-2 h-4 w-4\" />\n                                {t('auth.sendResetLink')}\n                              </>\n                            )}\n                          </Button>\n                          <Button type=\"button\" variant=\"outline\" onClick={() => setShowForgotPassword(false)}>\n                            {t('common.cancel')}\n                          </Button>\n                        </div>\n                      </form>\n                    </DialogContent>\n                  </Dialog>\n                </div>\n                \n                <Button type=\"submit\" className=\"w-full\" disabled={isLoading}>\n                  {isLoading ? (\n                    <>\n                      <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                      {t('auth.signingIn')}\n                    </>\n                  ) : (\n                    t('auth.signIn')\n                  )}\n                </Button>\n              </form>\n            </TabsContent>\n            \n            <TabsContent value=\"register\">\n              <form onSubmit={handleRegister} className=\"space-y-4\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"register-name\">{t('auth.fullName')}</Label>\n                  <Input\n                    id=\"register-name\"\n                    type=\"text\"\n                    placeholder={t('auth.fullName')}\n                    value={registerData.name}\n                    onChange={(e) => setRegisterData({ ...registerData, name: e.target.value })}\n                    required\n                  />\n                </div>\n                \n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"register-email\">{t('auth.email')}</Label>\n                  <Input\n                    id=\"register-email\"\n                    type=\"email\"\n                    placeholder={t('auth.email')}\n                    value={registerData.email}\n                    onChange={(e) => setRegisterData({ ...registerData, email: e.target.value })}\n                    required\n                  />\n                </div>\n                \n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"register-password\">{t('auth.password')}</Label>\n                  <div className=\"relative\">\n                    <Input\n                      id=\"register-password\"\n                      type={showPassword ? 'text' : 'password'}\n                      placeholder={t('auth.password')}\n                      value={registerData.password}\n                      onChange={(e) => setRegisterData({ ...registerData, password: e.target.value })}\n                      required\n                    />\n                    <Button\n                      type=\"button\"\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      className=\"absolute right-0 top-0 h-full px-3 py-2 hover:bg-transparent\"\n                      onClick={() => setShowPassword(!showPassword)}\n                    >\n                      {showPassword ? <EyeOff className=\"h-4 w-4\" /> : <Eye className=\"h-4 w-4\" />}\n                    </Button>\n                  </div>\n                  \n                  {registerData.password && (\n                    <div className=\"space-y-2 mt-3\">\n                      <div className=\"flex items-center justify-between text-sm\">\n                        <span className=\"text-muted-foreground\">{t('auth.passwordStrength')}:</span>\n                        <span className={`font-medium ${\n                          passwordStrength.score === 100 ? 'text-green-600 dark:text-green-500' :\n                          passwordStrength.score === 60 ? 'text-yellow-600 dark:text-yellow-500' :\n                          'text-red-600 dark:text-red-500'\n                        }`}>\n                          {passwordStrength.label}\n                        </span>\n                      </div>\n                      <Progress value={passwordStrength.score} className=\"h-2\" />\n                      \n                      <div className=\"text-xs space-y-1 mt-3\">\n                        <p className=\"text-muted-foreground mb-2\">{t('auth.passwordRequirements')}</p>\n                        <div className=\"space-y-1.5\">\n                          <div className={`flex items-center gap-2 ${passwordRequirements.length ? 'text-green-600 dark:text-green-500' : 'text-muted-foreground'}`}>\n                            {passwordRequirements.length ? <Check className=\"h-3.5 w-3.5\" /> : <X className=\"h-3.5 w-3.5\" />}\n                            <span>{t('auth.minLength')}</span>\n                          </div>\n                          <div className={`flex items-center gap-2 ${passwordRequirements.uppercase ? 'text-green-600 dark:text-green-500' : 'text-muted-foreground'}`}>\n                            {passwordRequirements.uppercase ? <Check className=\"h-3.5 w-3.5\" /> : <X className=\"h-3.5 w-3.5\" />}\n                            <span>{t('auth.hasUppercase')}</span>\n                          </div>\n                          <div className={`flex items-center gap-2 ${passwordRequirements.lowercase ? 'text-green-600 dark:text-green-500' : 'text-muted-foreground'}`}>\n                            {passwordRequirements.lowercase ? <Check className=\"h-3.5 w-3.5\" /> : <X className=\"h-3.5 w-3.5\" />}\n                            <span>{t('auth.hasLowercase')}</span>\n                          </div>\n                          <div className={`flex items-center gap-2 ${passwordRequirements.number ? 'text-green-600 dark:text-green-500' : 'text-muted-foreground'}`}>\n                            {passwordRequirements.number ? <Check className=\"h-3.5 w-3.5\" /> : <X className=\"h-3.5 w-3.5\" />}\n                            <span>{t('auth.hasNumber')}</span>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n                \n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"register-confirm-password\">{t('auth.confirmPassword')}</Label>\n                  <div className=\"relative\">\n                    <Input\n                      id=\"register-confirm-password\"\n                      type={showPassword ? 'text' : 'password'}\n                      placeholder={t('auth.confirmPassword')}\n                      value={registerData.confirmPassword}\n                      onChange={(e) => setRegisterData({ ...registerData, confirmPassword: e.target.value })}\n                      required\n                      className={registerData.confirmPassword && (\n                        registerData.password === registerData.confirmPassword\n                          ? 'border-green-500 dark:border-green-500'\n                          : 'border-red-500 dark:border-red-500'\n                      )}\n                    />\n                    {registerData.confirmPassword && (\n                      <div className=\"absolute right-3 top-1/2 -translate-y-1/2\">\n                        {registerData.password === registerData.confirmPassword ? (\n                          <Check className=\"h-4 w-4 text-green-600 dark:text-green-500\" />\n                        ) : (\n                          <X className=\"h-4 w-4 text-red-600 dark:text-red-500\" />\n                        )}\n                      </div>\n                    )}\n                  </div>\n                  {registerData.confirmPassword && registerData.password !== registerData.confirmPassword && (\n                    <p className=\"text-xs text-red-600 dark:text-red-500 flex items-center gap-1 mt-1\">\n                      <AlertCircle className=\"h-3 w-3\" />\n                      {t('auth.passwordMismatch')}\n                    </p>\n                  )}\n                </div>\n                \n                <Button \n                  type=\"submit\" \n                  className=\"w-full\" \n                  disabled={isLoading}\n                >\n                  {isLoading ? (\n                    <>\n                      <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                      {t('auth.creatingAccount')}\n                    </>\n                  ) : (\n                    t('auth.createAccount')\n                  )}\n                </Button>\n              </form>\n            </TabsContent>\n          </Tabs>\n\n          {/* Developer Tools Toggle */}\n          <div className=\"mt-4 pt-4 border-t\">\n            <Button\n              type=\"button\"\n              variant=\"ghost\"\n              size=\"sm\"\n              className=\"w-full text-xs text-muted-foreground hover:text-foreground\"\n              onClick={() => setShowDevTools(!showDevTools)}\n            >\n              <Database className=\"mr-2 h-3 w-3\" />\n              {showDevTools ? t('auth.hideDeveloperTools') : t('auth.showDeveloperTools')}\n            </Button>\n\n            {showDevTools && (\n              <div className=\"mt-3 p-3 bg-yellow-50 dark:bg-yellow-950/20 border border-yellow-200 dark:border-yellow-800 rounded-lg space-y-3\">\n                <Alert className=\"border-yellow-300 dark:border-yellow-700\">\n                  <AlertCircle className=\"h-4 w-4 !text-yellow-600 dark:!text-yellow-500\" />\n                  <AlertDescription className=\"text-xs text-yellow-800 dark:text-yellow-200\">\n                    <strong>{t('auth.cleanupWarning').split(':')[0]}:</strong> {t('auth.cleanupWarning').split(':')[1]}\n                  </AlertDescription>\n                </Alert>\n\n                <Button\n                  type=\"button\"\n                  variant=\"destructive\"\n                  size=\"sm\"\n                  className=\"w-full\"\n                  onClick={handleCleanupDatabase}\n                  disabled={isLoading}\n                >\n                  {isLoading ? (\n                    <>\n                      <Loader2 className=\"mr-2 h-3 w-3 animate-spin\" />\n                      {t('auth.cleaning')}\n                    </>\n                  ) : (\n                    <>\n                      <Trash2 className=\"mr-2 h-3 w-3\" />\n                      {t('auth.resetDatabase')}\n                    </>\n                  )}\n                </Button>\n\n                <p className=\"text-xs text-muted-foreground text-center\">\n                  {t('auth.emailExistsHint')}\n                </p>\n              </div>\n            )}\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}"],"file":"assets/AuthForm-CfBscpNW.js"}