{"version":3,"file":"Navigation-DYALYri8.js","sources":["../../src/components/ui/avatar.tsx","../../src/components/ui/scroll-area.tsx","../../src/components/NotificationCenter.tsx","../../src/components/Navigation.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar@1.1.3\";\n\nimport { cn } from \"./utils\";\n\nfunction Avatar({\n  className,\n  ...props\n}: React.ComponentProps<typeof AvatarPrimitive.Root>) {\n  return (\n    <AvatarPrimitive.Root\n      data-slot=\"avatar\"\n      className={cn(\n        \"relative flex size-10 shrink-0 overflow-hidden rounded-full\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction AvatarImage({\n  className,\n  ...props\n}: React.ComponentProps<typeof AvatarPrimitive.Image>) {\n  return (\n    <AvatarPrimitive.Image\n      data-slot=\"avatar-image\"\n      className={cn(\"aspect-square size-full\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction AvatarFallback({\n  className,\n  ...props\n}: React.ComponentProps<typeof AvatarPrimitive.Fallback>) {\n  return (\n    <AvatarPrimitive.Fallback\n      data-slot=\"avatar-fallback\"\n      className={cn(\n        \"bg-muted flex size-full items-center justify-center rounded-full\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nexport { Avatar, AvatarImage, AvatarFallback };\n","\"use client\";\n\nimport * as React from \"react\";\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area@1.2.3\";\n\nimport { cn } from \"./utils\";\n\nfunction ScrollArea({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof ScrollAreaPrimitive.Root>) {\n  return (\n    <ScrollAreaPrimitive.Root\n      data-slot=\"scroll-area\"\n      className={cn(\"relative\", className)}\n      {...props}\n    >\n      <ScrollAreaPrimitive.Viewport\n        data-slot=\"scroll-area-viewport\"\n        className=\"focus-visible:ring-ring/50 size-full rounded-[inherit] transition-[color,box-shadow] outline-none focus-visible:ring-[3px] focus-visible:outline-1\"\n      >\n        {children}\n      </ScrollAreaPrimitive.Viewport>\n      <ScrollBar />\n      <ScrollAreaPrimitive.Corner />\n    </ScrollAreaPrimitive.Root>\n  );\n}\n\nfunction ScrollBar({\n  className,\n  orientation = \"vertical\",\n  ...props\n}: React.ComponentProps<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>) {\n  return (\n    <ScrollAreaPrimitive.ScrollAreaScrollbar\n      data-slot=\"scroll-area-scrollbar\"\n      orientation={orientation}\n      className={cn(\n        \"flex touch-none p-px transition-colors select-none\",\n        orientation === \"vertical\" &&\n          \"h-full w-2.5 border-l border-l-transparent\",\n        orientation === \"horizontal\" &&\n          \"h-2.5 flex-col border-t border-t-transparent\",\n        className,\n      )}\n      {...props}\n    >\n      <ScrollAreaPrimitive.ScrollAreaThumb\n        data-slot=\"scroll-area-thumb\"\n        className=\"bg-border relative flex-1 rounded-full\"\n      />\n    </ScrollAreaPrimitive.ScrollAreaScrollbar>\n  );\n}\n\nexport { ScrollArea, ScrollBar };\n","import React, { useState, useEffect } from 'react';\nimport { Button } from './ui/button';\nimport { Badge } from './ui/badge';\nimport { Card, CardContent, CardHeader, CardTitle } from './ui/card';\nimport { ScrollArea } from './ui/scroll-area';\nimport { Separator } from './ui/separator';\nimport { \n  Bell, \n  Check, \n  X, \n  Clock, \n  Users, \n  RefreshCw, \n  TrendingUp, \n  DollarSign,\n  CheckCircle,\n  AlertCircle,\n  Info,\n  Settings\n} from 'lucide-react';\nimport { useI18n } from '../utils/i18n';\nimport { useUser } from '../App';\nimport { toast } from 'sonner';\nimport { notificationsApi, Notification as ApiNotification } from '../utils/api';\n\ninterface LocalNotification {\n  id: string;\n  type: 'job' | 'skill' | 'investment' | 'payment' | 'system' | 'message';\n  title: string;\n  message: string;\n  timestamp: string;\n  read: boolean;\n  priority: 'low' | 'medium' | 'high';\n  actionUrl?: string;\n  actionText?: string;\n}\n\ninterface NotificationCenterProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onUnreadCountChange?: (count: number) => void;\n}\n\nexport function NotificationCenter({ isOpen, onClose, onUnreadCountChange }: NotificationCenterProps) {\n  const { t } = useI18n();\n  const { user } = useUser();\n  const [notifications, setNotifications] = useState<LocalNotification[]>([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (user && isOpen) {\n      loadNotifications();\n    }\n  }, [user, isOpen]);\n\n  // Update parent component with unread count whenever notifications change\n  useEffect(() => {\n    const unreadCount = notifications.filter(n => !n.read).length;\n    onUnreadCountChange?.(unreadCount);\n  }, [notifications, onUnreadCountChange]);\n\n  const loadNotifications = async () => {\n    if (!user) return;\n    \n    setLoading(true);\n    try {\n      // Try to load from API first\n      try {\n        const response = await notificationsApi.getNotifications(user.id);\n        const apiNotifications = response.notifications.map((notif: ApiNotification): LocalNotification => ({\n          id: notif.id,\n          type: mapApiTypeToLocal(notif.type),\n          title: notif.title,\n          message: notif.message,\n          timestamp: notif.createdAt,\n          read: notif.read,\n          priority: 'medium' // API notifications don't have priority, so default to medium\n        }));\n        \n        setNotifications(apiNotifications);\n      } catch (apiError) {\n        console.log('API notifications not available, showing sample data');\n        \n        // Fallback to sample notifications for demo\n        const sampleNotifications: LocalNotification[] = [\n          {\n            id: '1',\n            type: 'job',\n            title: 'New Job Application',\n            message: 'Sarah Johnson applied to your \"Website Development\" project',\n            timestamp: new Date(Date.now() - 1000 * 60 * 30).toISOString(),\n            read: false,\n            priority: 'high'\n          },\n          {\n            id: '2',\n            type: 'payment',\n            title: 'Payment Received',\n            message: 'You received 250 TND for completing the logo design project',\n            timestamp: new Date(Date.now() - 1000 * 60 * 60 * 2).toISOString(),\n            read: false,\n            priority: 'high'\n          },\n          {\n            id: '3',\n            type: 'skill',\n            title: 'Skill Swap Match',\n            message: 'Ahmed Ben Ali wants to exchange Arabic lessons for your web development skills',\n            timestamp: new Date(Date.now() - 1000 * 60 * 60 * 4).toISOString(),\n            read: true,\n            priority: 'medium'\n          },\n          {\n            id: '4',\n            type: 'investment',\n            title: 'Investment Update',\n            message: 'Your investment in \"Local Coffee Shop\" has grown by 15%',\n            timestamp: new Date(Date.now() - 1000 * 60 * 60 * 24).toISOString(),\n            read: true,\n            priority: 'medium'\n          }\n        ];\n        \n        setNotifications(sampleNotifications);\n      }\n    } catch (error) {\n      console.error('Failed to load notifications:', error);\n      toast.error(t('notifications.loadError'));\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const mapApiTypeToLocal = (apiType: string): LocalNotification['type'] => {\n    switch (apiType) {\n      case 'success': return 'payment';\n      case 'warning': return 'system';\n      case 'error': return 'system';\n      default: return 'system';\n    }\n  };\n\n  const markAsRead = async (id: string) => {\n    if (!user) return;\n    \n    try {\n      await notificationsApi.markAsRead(user.id, id);\n      setNotifications(prev => \n        prev.map(notif => \n          notif.id === id ? { ...notif, read: true } : notif\n        )\n      );\n    } catch (error) {\n      console.error('Failed to mark notification as read:', error);\n      // Still update locally for demo purposes\n      setNotifications(prev => \n        prev.map(notif => \n          notif.id === id ? { ...notif, read: true } : notif\n        )\n      );\n    }\n  };\n\n  const markAllAsRead = async () => {\n    if (!user) return;\n    \n    try {\n      await notificationsApi.markAllAsRead(user.id);\n      setNotifications(prev => \n        prev.map(notif => ({ ...notif, read: true }))\n      );\n      toast.success(t('notifications.markReadSuccess'));\n    } catch (error) {\n      console.error('Failed to mark all notifications as read:', error);\n      // Still update locally for demo purposes\n      setNotifications(prev => \n        prev.map(notif => ({ ...notif, read: true }))\n      );\n      toast.success(t('notifications.markReadSuccess'));\n    }\n  };\n\n  const deleteNotification = (id: string) => {\n    setNotifications(prev => prev.filter(notif => notif.id !== id));\n    toast.success(t('notifications.deleteSuccess'));\n  };\n\n  const getNotificationIcon = (type: LocalNotification['type']) => {\n    switch (type) {\n      case 'job':\n        return <Users className=\"h-4 w-4\" />;\n      case 'skill':\n        return <RefreshCw className=\"h-4 w-4\" />;\n      case 'investment':\n        return <TrendingUp className=\"h-4 w-4\" />;\n      case 'payment':\n        return <DollarSign className=\"h-4 w-4\" />;\n      case 'system':\n        return <Settings className=\"h-4 w-4\" />;\n      default:\n        return <Bell className=\"h-4 w-4\" />;\n    }\n  };\n\n  const getNotificationColor = (type: LocalNotification['type'], priority: LocalNotification['priority']) => {\n    if (priority === 'high') return 'text-red-500 bg-red-500/10';\n    if (type === 'payment') return 'text-green-500 bg-green-500/10';\n    if (type === 'job') return 'text-blue-500 bg-blue-500/10';\n    if (type === 'skill') return 'text-purple-500 bg-purple-500/10';\n    if (type === 'investment') return 'text-orange-500 bg-orange-500/10';\n    return 'text-gray-500 bg-gray-500/10';\n  };\n\n  const formatTimeAgo = (timestamp: string) => {\n    const now = new Date();\n    const time = new Date(timestamp);\n    const diffInMinutes = Math.floor((now.getTime() - time.getTime()) / (1000 * 60));\n    \n    if (diffInMinutes < 1) return t('notifications.justNow');\n    if (diffInMinutes < 60) return `${diffInMinutes}${t('notifications.minutesAgo')}`;\n    if (diffInMinutes < 1440) return `${Math.floor(diffInMinutes / 60)}${t('notifications.hoursAgo')}`;\n    return `${Math.floor(diffInMinutes / 1440)}${t('notifications.daysAgo')}`;\n  };\n\n  const unreadCount = notifications.filter(n => !n.read).length;\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black/50 z-50 flex items-start justify-center pt-16\">\n      <Card className=\"w-full max-w-md mx-4 max-h-[80vh] flex flex-col shadow-xl\">\n        <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-4 flex-shrink-0\">\n          <CardTitle className=\"flex items-center gap-2\">\n            <Bell className=\"h-5 w-5\" />\n            {t('navigation.notifications')}\n            {unreadCount > 0 && (\n              <Badge variant=\"destructive\" className=\"ml-2\">\n                {unreadCount}\n              </Badge>\n            )}\n          </CardTitle>\n          <div className=\"flex items-center gap-2\">\n            {notifications.length > 0 && (\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={markAllAsRead}\n                className=\"text-xs\"\n              >\n                <CheckCircle className=\"h-3 w-3 mr-1\" />\n                {t('notifications.markAllRead')}\n              </Button>\n            )}\n            <Button variant=\"ghost\" size=\"sm\" onClick={onClose}>\n              <X className=\"h-4 w-4\" />\n            </Button>\n          </div>\n        </CardHeader>\n        \n        <Separator className=\"flex-shrink-0\" />\n        \n        <CardContent className=\"flex-1 p-0 overflow-hidden\">\n          <ScrollArea className=\"h-full max-h-[55vh]\">\n            {loading ? (\n              <div className=\"flex items-center justify-center py-8\">\n                <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary\"></div>\n              </div>\n            ) : notifications.length === 0 ? (\n              <div className=\"flex flex-col items-center justify-center py-8 text-center px-4\">\n                <Bell className=\"h-12 w-12 text-muted-foreground mb-4\" />\n                <p className=\"text-muted-foreground\">{t('notifications.noNotifications')}</p>\n                <p className=\"text-sm text-muted-foreground\">\n                  {t('notifications.noNotificationsDesc')}\n                </p>\n              </div>\n            ) : (\n              <div className=\"divide-y\">\n                {notifications.map((notification, index) => (\n                  <div\n                    key={notification.id}\n                    className={`p-4 hover:bg-muted/50 transition-colors ${\n                      !notification.read ? 'bg-blue-50/50 dark:bg-blue-950/20' : ''\n                    } ${index === notifications.length - 1 ? 'border-b-0' : ''}`}\n                  >\n                    <div className=\"flex items-start gap-3\">\n                      <div className={`p-2 rounded-lg flex-shrink-0 ${getNotificationColor(notification.type, notification.priority)}`}>\n                        {getNotificationIcon(notification.type)}\n                      </div>\n                      \n                      <div className=\"flex-1 min-w-0\">\n                        <div className=\"flex items-start justify-between mb-1 gap-2\">\n                          <h4 className=\"text-sm font-medium truncate flex-1\">\n                            {notification.title}\n                          </h4>\n                          <div className=\"flex items-center gap-1 flex-shrink-0\">\n                            {!notification.read && (\n                              <Button\n                                variant=\"ghost\"\n                                size=\"sm\"\n                                onClick={() => markAsRead(notification.id)}\n                                className=\"h-6 w-6 p-0\"\n                              >\n                                <Check className=\"h-3 w-3\" />\n                              </Button>\n                            )}\n                            <Button\n                              variant=\"ghost\"\n                              size=\"sm\"\n                              onClick={() => deleteNotification(notification.id)}\n                              className=\"h-6 w-6 p-0 text-muted-foreground hover:text-destructive\"\n                            >\n                              <X className=\"h-3 w-3\" />\n                            </Button>\n                          </div>\n                        </div>\n                        \n                        <p className=\"text-sm text-muted-foreground mb-2 break-words\">\n                          {notification.message}\n                        </p>\n                        \n                        <div className=\"flex items-center justify-between\">\n                          <span className=\"text-xs text-muted-foreground flex items-center gap-1\">\n                            <Clock className=\"h-3 w-3\" />\n                            {formatTimeAgo(notification.timestamp)}\n                          </span>\n                          \n                          {notification.priority === 'high' && (\n                            <Badge variant=\"destructive\" className=\"text-xs\">\n                              {t('notifications.highPriority')}\n                            </Badge>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </ScrollArea>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}","import React, { useState } from 'react';\nimport { Button } from './ui/button';\nimport { Badge } from './ui/badge';\nimport { Avatar, AvatarFallback, AvatarImage } from './ui/avatar';\nimport { NotificationCenter } from './NotificationCenter';\nimport { \n  Users, \n  RefreshCw, \n  TrendingUp, \n  User, \n  Wallet,\n  Home,\n  Bell,\n  Settings,\n  LogOut\n} from 'lucide-react';\nimport { PageType, useUser } from '../App';\nimport { useI18n } from '../utils/i18n';\n\ninterface NavigationProps {\n  currentPage: PageType;\n  onNavigate: (page: PageType) => void;\n  onLogout?: () => void;\n}\n\nexport function Navigation({ currentPage, onNavigate, onLogout }: NavigationProps) {\n  const { user, wallet } = useUser();\n  const { t } = useI18n();\n  const [notificationsOpen, setNotificationsOpen] = useState(false);\n  const [unreadCount, setUnreadCount] = useState(0);\n  \n  const navItems = [\n    { id: 'dashboard' as PageType, label: t('navigation.dashboard'), icon: Home },\n    { id: 'hire' as PageType, label: t('navigation.hire'), icon: Users },\n    { id: 'skillswap' as PageType, label: t('navigation.skillSwap'), icon: RefreshCw },\n    { id: 'investment' as PageType, label: t('navigation.investment'), icon: TrendingUp },\n  ];\n\n  return (\n    <header className=\"border-b bg-background/80 backdrop-blur-sm sticky top-0 z-50\">\n      <div className=\"container mx-auto px-4 py-3\">\n        <div className=\"flex items-center justify-between\">\n          {/* Logo */}\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"bg-primary text-primary-foreground p-2 rounded-lg\">\n              <TrendingUp className=\"h-5 w-5\" />\n            </div>\n            <h1 className=\"text-lg\">{t('auth.welcome')}</h1>\n          </div>\n\n          {/* Navigation */}\n          <nav className=\"hidden md:flex items-center space-x-1\">\n            {navItems.map((item) => {\n              const Icon = item.icon;\n              return (\n                <Button\n                  key={item.id}\n                  variant={currentPage === item.id ? \"default\" : \"ghost\"}\n                  size=\"sm\"\n                  onClick={() => onNavigate(item.id)}\n                  className=\"gap-2\"\n                >\n                  <Icon className=\"h-4 w-4\" />\n                  {item.label}\n                </Button>\n              );\n            })}\n          </nav>\n\n          {/* User Actions */}\n          <div className=\"flex items-center space-x-2\">\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => onNavigate('wallet')}\n              className=\"gap-2\"\n            >\n              <Wallet className=\"h-4 w-4\" />\n              <span className=\"hidden sm:inline\">\n                {wallet ? `${wallet.money} TND` : t('navigation.wallet')}\n              </span>\n            </Button>\n            \n            <Button \n              variant=\"ghost\" \n              size=\"sm\"\n              onClick={() => setNotificationsOpen(true)}\n              className=\"relative\"\n            >\n              <Bell className=\"h-4 w-4\" />\n              {unreadCount > 0 && (\n                <Badge variant=\"destructive\" className=\"absolute -top-2 -right-2 h-5 w-5 flex items-center justify-center text-xs\">\n                  {unreadCount}\n                </Badge>\n              )}\n            </Button>\n\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => onNavigate('profile')}\n              className=\"gap-2\"\n            >\n              <Avatar className=\"h-6 w-6\">\n                <AvatarFallback>\n                  {user ? user.name.split(' ').map(n => n[0]).join('').toUpperCase() : 'U'}\n                </AvatarFallback>\n                {user?.avatar && <AvatarImage src={user.avatar} />}\n              </Avatar>\n              <span className=\"hidden sm:inline\">\n                {user ? user.name.split(' ')[0] : t('navigation.profile')}\n              </span>\n            </Button>\n\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => onNavigate('settings')}\n              className=\"text-muted-foreground\"\n            >\n              <Settings className=\"h-4 w-4\" />\n            </Button>\n\n            {onLogout && (\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={onLogout}\n                className=\"text-muted-foreground\"\n              >\n                <LogOut className=\"h-4 w-4\" />\n              </Button>\n            )}\n          </div>\n        </div>\n\n        {/* Mobile Navigation */}\n        <div className=\"md:hidden mt-3 flex items-center space-x-1 overflow-x-auto\">\n          {navItems.map((item) => {\n            const Icon = item.icon;\n            return (\n              <Button\n                key={item.id}\n                variant={currentPage === item.id ? \"default\" : \"ghost\"}\n                size=\"sm\"\n                onClick={() => onNavigate(item.id)}\n                className=\"gap-2 whitespace-nowrap\"\n              >\n                <Icon className=\"h-4 w-4\" />\n                {item.label}\n              </Button>\n            );\n          })}\n        </div>\n      </div>\n      \n      {/* Notifications Modal */}\n      <NotificationCenter \n        isOpen={notificationsOpen} \n        onClose={() => setNotificationsOpen(false)}\n        onUnreadCountChange={setUnreadCount}\n      />\n    </header>\n  );\n}"],"names":["Avatar","className","props","jsx","AvatarPrimitive.Root","cn","AvatarImage","AvatarPrimitive.Image","AvatarFallback","AvatarPrimitive.Fallback","ScrollArea","children","jsxs","ScrollAreaPrimitive.Root","ScrollAreaPrimitive.Viewport","ScrollBar","ScrollAreaPrimitive.Corner","orientation","ScrollAreaPrimitive.ScrollAreaScrollbar","ScrollAreaPrimitive.ScrollAreaThumb","NotificationCenter","isOpen","onClose","onUnreadCountChange","useI18n","user","useUser","notifications","setNotifications","useState","loading","setLoading","useEffect","loadNotifications","unreadCount","n","apiNotifications","notificationsApi","notif","mapApiTypeToLocal","sampleNotifications","error","toast","apiType","markAsRead","id","prev","markAllAsRead","deleteNotification","getNotificationIcon","type","Users","RefreshCw","TrendingUp","DollarSign","Settings","Bell","getNotificationColor","priority","formatTimeAgo","timestamp","now","time","diffInMinutes","Card","CardHeader","CardTitle","Badge","Button","CheckCircle","X","Separator","CardContent","notification","index","Check","Clock","Navigation","currentPage","onNavigate","onLogout","wallet","t","notificationsOpen","setNotificationsOpen","setUnreadCount","navItems","Home","item","Icon","Wallet","LogOut"],"mappings":"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"}